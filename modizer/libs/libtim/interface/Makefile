# Makefile.in generated by automake 1.7.6 from Makefile.am.
# interface/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# TiMidity++ -- MIDI to WAVE converter and player
# Copyright (C) 1999-2008 Masanao Izumo <iz@onicos.co.jp>
# Copyright (C) 1995 Tuukka Toivonen <tt@cgs.fi>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

# Define follows if you want to change.
# Note that the definition of beginning with just one `#' implies
# default value from configure.

srcdir = .
top_srcdir = ..

pkgincludedir = $(includedir)/TiMidity++
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-apple-darwin10.7.4
pkgdatadir = /usr/local/share/timidity

#CC= gcc
#CFLAGS =  -O2
# For pentium gcc
# For PGCC
#CPPFLAGS =  -no-cpp-precomp -DAU_DARWIN

#DEFS = -DHAVE_CONFIG_H
#LDFLAGS = 
#LIBS = -lm -lobjc      -framework CoreAudio
#SHLD = gcc -dynamic -bundle -undefined suppress -flat_namespace  
#SHCFLAGS =  -fPIC
#

#prefix = /usr/local
#exec_prefix = ${prefix}
#bindir = ${exec_prefix}/bin
#libdir = ${exec_prefix}/lib
#datadir = ${prefix}/share
#mandir = ${prefix}/man
pkglibdir = /usr/local/lib/timidity
ACLOCAL = ${SHELL} /Users/ymagnien/Desktop/dev/osx/timidity/autoconf/missing --run aclocal-1.7
ALSA_CFLAGS = 
ALSA_LIBS = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/ymagnien/Desktop/dev/osx/timidity/autoconf/missing --run tar
AO_CFLAGS = 
AO_LIBS = 
ARTSCCONFIG = 
ARTSINCL = 
ARTSLIBS = 
AUTOCONF = ${SHELL} /Users/ymagnien/Desktop/dev/osx/timidity/autoconf/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/ymagnien/Desktop/dev/osx/timidity/autoconf/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/ymagnien/Desktop/dev/osx/timidity/autoconf/missing --run automake-1.7
AWK = awk
A_so_libs = 
BORLANDC_FALSE = 
BORLANDC_LDFLAGS = 
BORLANDC_START = 
BORLANDC_TRUE = #
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -O2
CPP = gcc -E
CPPFLAGS =  -no-cpp-precomp -DAU_DARWIN
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DMC_FALSE = 
DMC_LDFLAGS = 
DMC_TRUE = #
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = grep -E
ELFILES = 
EMACS = emacs
ENABLE_ALSASEQ_FALSE = 
ENABLE_ALSASEQ_TRUE = #
ENABLE_DYNAMIC_TCLTK_FALSE = 
ENABLE_DYNAMIC_TCLTK_TRUE = #
ENABLE_DYNAMIC_XAW_FALSE = 
ENABLE_DYNAMIC_XAW_TRUE = #
ENABLE_EMACS_FALSE = 
ENABLE_EMACS_TRUE = #
ENABLE_GTK_FALSE = 
ENABLE_GTK_TRUE = #
ENABLE_MOTIF_FALSE = 
ENABLE_MOTIF_TRUE = #
ENABLE_NCURSES_FALSE = 
ENABLE_NCURSES_TRUE = #
ENABLE_NETWORK_FALSE = 
ENABLE_NETWORK_TRUE = #
ENABLE_NPSYN_FALSE = 
ENABLE_NPSYN_TRUE = #
ENABLE_PLUGIN_FALSE = 
ENABLE_PLUGIN_TRUE = #
ENABLE_PORTMIDISYN_FALSE = 
ENABLE_PORTMIDISYN_TRUE = #
ENABLE_SERVER_FALSE = 
ENABLE_SERVER_TRUE = #
ENABLE_SLANG_FALSE = 
ENABLE_SLANG_TRUE = #
ENABLE_SOUND_SPEC_FALSE = 
ENABLE_SOUND_SPEC_TRUE = #
ENABLE_TCLTK_FALSE = 
ENABLE_TCLTK_TRUE = #
ENABLE_VT100_FALSE = 
ENABLE_VT100_TRUE = #
ENABLE_W32GUI_FALSE = 
ENABLE_W32GUI_TRUE = #
ENABLE_W32G_SYN_FALSE = 
ENABLE_W32G_SYN_TRUE = #
ENABLE_WINSYN_FALSE = 
ENABLE_WINSYN_TRUE = #
ENABLE_WRD_FALSE = 
ENABLE_WRD_TRUE = #
ENABLE_XAW_FALSE = 
ENABLE_XAW_TRUE = #
ENABLE_XDND_FALSE = 
ENABLE_XDND_TRUE = #
ENABLE_XSKIN_FALSE = 
ENABLE_XSKIN_TRUE = #
ESD_CFLAGS = 
ESD_CONFIG = 
ESD_LIBS = 
EXEEXT = 
EXTRALIBS =  -framework CoreAudio
GTK_CFLAGS = 
GTK_CONFIG = 
GTK_LIBS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTERFACE_SRCS = 
LDFLAGS = 
LIBFLAC_CFLAGS = 
LIBFLAC_LIBS = 
LIBOBJS =  error$U.o
LIBOGGFLAC_CFLAGS = 
LIBOGGFLAC_LIBS = 
LIBS = -lm -lobjc      -framework CoreAudio
LN_S = ln -s
LTLIBOBJS =  error$U.lo
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /Users/ymagnien/Desktop/dev/osx/timidity/autoconf/missing --run makeinfo
MINGWGCC_FALSE = 
MINGWGCC_TRUE = #
MSYS_FALSE = 
MSYS_TRUE = #
NEEDDLOPEN_FALSE = 
NEEDDLOPEN_TRUE = #
NEEDGETOPT_FALSE = 
NEEDGETOPT_TRUE = #
NETSRCS = 
OBJEXT = o
OGG_CFLAGS = 
OGG_LIBS = 
PACKAGE = TiMidity++
PACKAGE_BUGREPORT = root@mput.dip.jp
PACKAGE_NAME = TiMidity++
PACKAGE_STRING = TiMidity++ 2.13.2
PACKAGE_TARNAME = TiMidity++
PACKAGE_VERSION = 2.13.2
PATH_SEPARATOR = :
PKG_CONFIG = 
POCC_FALSE = 
POCC_LDFLAGS = 
POCC_TRUE = #
P_so_libs = 
RANLIB = ranlib
SET_MAKE = 
SHCFLAGS =  -fPIC

SHELL = /bin/sh
SHLD = gcc -dynamic -bundle -undefined suppress -flat_namespace  
STRIP = 
SYSEXTRAS =  darwin_a.c
T_so_libs = 
VCPP_FALSE = 
VCPP_LDFLAGS = 
VCPP_TRUE = #
VERSION = 2.13.2
VORBISENC_LIBS = 
VORBISFILE_LIBS = 
VORBIS_CFLAGS = 
VORBIS_LIBS = 
W32G_GUI_FALSE = 
W32G_GUI_TRUE = #
W32READDIR_FALSE = 
W32READDIR_TRUE = #
WATCOM_C_FALSE = 
WATCOM_C_TRUE = #
WATCOM_LDFLAGS = 
WINDRV_FALSE = 
WINDRV_TRUE = #
WISH = wish
W_so_libs = 
XAW_INSTALL_RESOURCE_FILES_FALSE = 
XAW_INSTALL_RESOURCE_FILES_TRUE = #
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
a_so_libs = 
ac_ct_CC = gcc
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-apple-darwin10.7.4
build_alias = 
build_cpu = i686
build_os = darwin10.7.4
build_vendor = apple
datadir = ${prefix}/share
dynamic_targets = 
e_so_libs = 
exec_prefix = ${prefix}
g_so_libs = 
host = i686-apple-darwin10.7.4
host_alias = 
host_cpu = i686
host_os = darwin10.7.4
host_vendor = apple
i_so_libs = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/ymagnien/Desktop/dev/osx/timidity/autoconf/install-sh
k_so_libs = 
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
lispdir = ${datadir}/emacs/site-lisp
localstatedir = ${prefix}/var
m_so_libs = 
mandir = ${prefix}/man
n_so_libs = 
oldincludedir = /usr/include
p_so_libs = 
prefix = /usr/local
program_transform_name = s,x,x,
r_so_libs = 
s_so_libs = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
so = bundle
sysconfdir = ${prefix}/etc
target = i686-apple-darwin10.7.4
target_alias = 
target_cpu = i686
target_os = darwin10.7.4
target_vendor = apple
tcltk_dep = 
timidity_LDFLAGS = 
w_so_libs = 
xawresdir = 
#INSTALL = /usr/bin/install -c

# Where to install the patches, config files.
PKGDATADIR = $(pkgdatadir)

# Where to install the Tcl code and the bitmaps.
# It also contains bitmaps which are shared with XAW interface.
PKGLIBDIR = $(pkglibdir)

# Where to install the dynamic link interface.
SHLIB_DIR = $(pkglibdir)

# Where to install timidity.el
ELISP_DIR = $(lispdir)

# Where to install TiMidity.ad
XAWRES = ${xawresdir}/app-defaults
XAWRES_JA = ${xawresdir}/ja_JP.eucJP/app-defaults

# If you want to change TCL_DIR, please do follows.
# * Add -DTKPROGPATH=\"$(TCL_DIR)/tkmidity.tcl\" to CPPFLAGS.
# * Make a symbolic link $(PKGLIBDIR)/bitmaps to $(TCL_DIR)/bitmaps
TCL_DIR = $(PKGLIBDIR)

# Define the timidity default file search path.
DEF_DEFAULT_PATH = -DDEFAULT_PATH=\"$(PKGDATADIR)\"

# You sould not change follows definitions. 
DEF_PKGDATADIR = -DPKGDATADIR=\"$(PKGDATADIR)\"
DEF_PKGLIBDIR = -DPKGLIBDIR=\"$(PKGLIBDIR)\"
DEF_SHLIB_DIR = -DSHLIB_DIR=\"$(SHLIB_DIR)\"
BITMAP_DIR = $(TCL_DIR)/bitmaps

SUFFIXES = .ptcl .tcl .bundle

SUBDIRS = motif_bitmaps bitmaps pixmaps

INCLUDES = \
	-I$(top_srcdir)/timidity \
	-I$(top_srcdir)/libarc \
	-I$(top_srcdir)/utils


noinst_LIBRARIES = libinterface.a

#libinterface_a_SOURCES = 
libinterface_a_SOURCES = \
	dumb_c.c \
	wrdt_dumb.c \
	wrdt_tty.c


EXTRA_libinterface_a_SOURCES = \
	ncurs_c.c \
	slang_c.c \
	motif.h \
	motif_c.c \
	motif_i.c \
	motif_p.c \
	tk_c.c \
	emacs_c.c \
	vt100.h \
	vt100.c \
	vt100_c.c \
	x_trace.c \
	x_trace.h \
	xaw.h \
	xaw_c.c \
	xaw_i.c \
	xaw_redef.c \
	TiMidity.ad \
	TiMidity-uj.ad \
	xdnd.c \
	xdnd.h \
	xskin.h \
	xskin_c.c \
	xskin_i.c \
	xskin_loadBMP.c \
	xskin_spectrum.c \
	wrdt_x.c \
	x_sherry.c \
	x_sherry.h \
	x_wrdwindow.c \
	x_wrdwindow.h \
	VTPrsTbl.c \
	VTparse.h \
	x_mag.c \
	x_mag.h \
	dynamic_c.c \
	mac_c.c \
	mac_c.h \
	mac_mag.c \
	mac_mag.h \
	mac_trace.c \
	mac_wrdwindow.c \
	mac_wrdwindow.h \
	wrdt_mac.c \
	wrdt_wcon.c \
	gtk_c.c \
	gtk_h.h \
	gtk_i.c \
	gtk_p.c \
	soundspec.c \
	soundspec.h \
	x_sherry.c \
	x_sherry.h \
	server_c.c \
	server_defs.h \
	alsaseq_c.c \
	w32g.h \
	w32g_c.c \
	w32g_ini.c \
	w32g_rec.h \
	w32g_res.h \
	w32g_res.rc \
	w32g_utl.c \
	w32g_utl.h \
	w32g_ut2.c \
	w32g_ut2.h \
	w32g_i.c \
	w32g_playlist.c \
	w32g_pref.c \
	w32g_pref.h \
	w32g_subwin.c \
	w32g_subwin.h \
	w32g_syn.c \
	w32g_btn.bmp \
	w32g_icon.ico \
	w32g_sleep.bmp \
	w32g_subbtn.bmp \
	w32g_subwin2.c \
	w32g_wrd.h \
	wrdt_w32g.c \
	w32g_subwin3.c \
	w32g_tracer.h \
	w32g_tracer.bmp \
	w32g_mag.c \
	w32g_mag.h \
	w32g_dib.c \
	w32g_dib.h \
	winsyn_c.c \
	npsyn_c.c \
	rtsyn.h \
	rtsyn_common.c \
	rtsyn_winmm.c \
	rtsyn_portmidi.c \
	rtsyn_npipe.c\
	portmidisyn_c.c


#WRD_OBJS = \
#	wrdt_x.$(OBJEXT) \
#	x_wrdwindow.$(OBJEXT) \
#	VTPrsTbl.$(OBJEXT) \
#	x_mag.$(OBJEXT) \
#	x_sherry.$(OBJEXT)


#XDND_SO = xdnd.${so}

#WRD_WINCON_OBJS = wrdt_wcon.$(OBJEXT)

#DYNAMIC_OBJS = dynamic_c.$(OBJEXT)

#SOUND_SPEC_OBJS = \
#	soundspec.$(OBJEXT)


#W32GUI_DEPS = w32g_res.res

#W32GUI_DEPS = w32g_res.res

INTERFACE_OBJS = $(INTERFACE_SRCS:.c=.$(OBJEXT))

libinterface_LIBADD = \
	$(INTERFACE_OBJS) \
	$(WRD_OBJS) \
	$(WRD_WINCON_OBJS) \
	$(DYNAMIC_OBJS) \
	$(SOUND_SPEC_OBJS)


libinterface_a_LIBADD = $(libinterface_LIBADD)

libinterface_dep = \
	$(top_builddir)/interface.h \
	$(libinterface_a_LIBADD) \
	$(tcltk_dep) \
	$(W32GUI_DEPS)


# Tcl interface sources
TCLSRCS = tkmidity.ptcl tkpanel.tcl browser.tcl misc.tcl
# Tcl/Tk sources
TCLF = tkmidity.tcl tkpanel.tcl browser.tcl misc.tcl
ALLTCLF = $(TCLF) tclIndex

EXTRA_DIST = \
	escape_sjis.pl \
	tkmidity.ptcl \
	tkpanel.tcl \
	browser.tcl \
	misc.tcl \
	timidity.el \
	tclIndex

#install_tk = install.tk

#install_tk = install.tk
#install_xaw = install.xaw

#install_xaw = install.xaw

# ELFILES =  # autoconf already define this
#install_el = install.el

#BRCC32 = c:/borland/bcc55/bin/brcc32.exe
#BRCC32_FLAGS = -ic:/borland/bcc55/include
#w32g_res.res: w32g_res.h w32g_rec.h w32g_res.rc \
#	w32g_btn.bmp w32g_icon.ico w32g_sleep.bmp w32g_subbtn.bmp
#	perl -pe 's/(^FONT.*".*").*$$/$$1/' w32g_res.rc >w32g_res_bc.rc
#	$(BRCC32) $(BRCC32_FLAGS) w32g_res_bc.rc
#	windres -o tmp.res -O coff w32g_res_bc.RES
#	mv tmp.res w32g_res.res
#	rm w32g_res_bc.RES

# dynamic_targets =  # autoconf already define this
#install_dynamics = install.dynamics
subdir = interface
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/autoconf/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h $(top_builddir)/interface.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libinterface_a_AR = $(AR) cru
#libinterface_a_DEPENDENCIES = \
#	$(INTERFACE_SRCS:.c=.$(OBJEXT))
libinterface_a_DEPENDENCIES = \
	$(INTERFACE_SRCS:.c=.$(OBJEXT))
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	dynamic_c.$(OBJEXT)
#libinterface_a_DEPENDENCIES = \
#	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
#	dynamic_c.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT))
#libinterface_a_DEPENDENCIES = \
#	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
#	wrdt_wcon.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	dynamic_c.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	wrdt_wcon.$(OBJEXT) \
##	dynamic_c.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	wrdt_x.$(OBJEXT) \
##	x_wrdwindow.$(OBJEXT) \
##	VTPrsTbl.$(OBJEXT) \
##	x_mag.$(OBJEXT) \
##	x_sherry.$(OBJEXT)
#libinterface_a_DEPENDENCIES = \
#	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
#	wrdt_x.$(OBJEXT) \
#	x_wrdwindow.$(OBJEXT) \
#	VTPrsTbl.$(OBJEXT) \
#	x_mag.$(OBJEXT) \
#	x_sherry.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	wrdt_x.$(OBJEXT) \
###	x_wrdwindow.$(OBJEXT) \
###	VTPrsTbl.$(OBJEXT) \
###	x_mag.$(OBJEXT) \
###	x_sherry.$(OBJEXT) \
###	dynamic_c.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	wrdt_x.$(OBJEXT) \
##	x_wrdwindow.$(OBJEXT) \
##	VTPrsTbl.$(OBJEXT) \
##	x_mag.$(OBJEXT) \
##	x_sherry.$(OBJEXT) \
##	dynamic_c.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	wrdt_x.$(OBJEXT) \
###	x_wrdwindow.$(OBJEXT) \
###	VTPrsTbl.$(OBJEXT) \
###	x_mag.$(OBJEXT) \
###	x_sherry.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	wrdt_x.$(OBJEXT) \
##	x_wrdwindow.$(OBJEXT) \
##	VTPrsTbl.$(OBJEXT) \
##	x_mag.$(OBJEXT) \
##	x_sherry.$(OBJEXT) \
##	wrdt_wcon.$(OBJEXT)
####libinterface_a_DEPENDENCIES = \
####	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
####	wrdt_x.$(OBJEXT) \
####	x_wrdwindow.$(OBJEXT) \
####	VTPrsTbl.$(OBJEXT) \
####	x_mag.$(OBJEXT) \
####	x_sherry.$(OBJEXT) \
####	dynamic_c.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	wrdt_x.$(OBJEXT) \
###	x_wrdwindow.$(OBJEXT) \
###	VTPrsTbl.$(OBJEXT) \
###	x_mag.$(OBJEXT) \
###	x_sherry.$(OBJEXT) \
###	wrdt_wcon.$(OBJEXT) \
###	dynamic_c.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	soundspec.$(OBJEXT)
#libinterface_a_DEPENDENCIES = \
#	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
#	soundspec.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	dynamic_c.$(OBJEXT) \
###	soundspec.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	dynamic_c.$(OBJEXT) \
##	soundspec.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	soundspec.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	wrdt_wcon.$(OBJEXT) \
##	soundspec.$(OBJEXT)
####libinterface_a_DEPENDENCIES = \
####	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
####	dynamic_c.$(OBJEXT) \
####	soundspec.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	wrdt_wcon.$(OBJEXT) \
###	dynamic_c.$(OBJEXT) \
###	soundspec.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	wrdt_x.$(OBJEXT) \
###	x_wrdwindow.$(OBJEXT) \
###	VTPrsTbl.$(OBJEXT) \
###	x_mag.$(OBJEXT) \
###	x_sherry.$(OBJEXT) \
###	soundspec.$(OBJEXT)
##libinterface_a_DEPENDENCIES = \
##	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
##	wrdt_x.$(OBJEXT) \
##	x_wrdwindow.$(OBJEXT) \
##	VTPrsTbl.$(OBJEXT) \
##	x_mag.$(OBJEXT) \
##	x_sherry.$(OBJEXT) \
##	soundspec.$(OBJEXT)
####libinterface_a_DEPENDENCIES = \
####	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
####	wrdt_x.$(OBJEXT) \
####	x_wrdwindow.$(OBJEXT) \
####	VTPrsTbl.$(OBJEXT) \
####	x_mag.$(OBJEXT) \
####	x_sherry.$(OBJEXT) \
####	dynamic_c.$(OBJEXT) \
####	soundspec.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	wrdt_x.$(OBJEXT) \
###	x_wrdwindow.$(OBJEXT) \
###	VTPrsTbl.$(OBJEXT) \
###	x_mag.$(OBJEXT) \
###	x_sherry.$(OBJEXT) \
###	dynamic_c.$(OBJEXT) \
###	soundspec.$(OBJEXT)
####libinterface_a_DEPENDENCIES = \
####	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
####	wrdt_x.$(OBJEXT) \
####	x_wrdwindow.$(OBJEXT) \
####	VTPrsTbl.$(OBJEXT) \
####	x_mag.$(OBJEXT) \
####	x_sherry.$(OBJEXT) \
####	soundspec.$(OBJEXT)
###libinterface_a_DEPENDENCIES = \
###	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
###	wrdt_x.$(OBJEXT) \
###	x_wrdwindow.$(OBJEXT) \
###	VTPrsTbl.$(OBJEXT) \
###	x_mag.$(OBJEXT) \
###	x_sherry.$(OBJEXT) \
###	wrdt_wcon.$(OBJEXT) \
###	soundspec.$(OBJEXT)
#####libinterface_a_DEPENDENCIES = \
#####	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
#####	wrdt_x.$(OBJEXT) \
#####	x_wrdwindow.$(OBJEXT) \
#####	VTPrsTbl.$(OBJEXT) \
#####	x_mag.$(OBJEXT) \
#####	x_sherry.$(OBJEXT) \
#####	dynamic_c.$(OBJEXT) \
#####	soundspec.$(OBJEXT)
####libinterface_a_DEPENDENCIES = \
####	$(INTERFACE_SRCS:.c=.$(OBJEXT)) \
####	wrdt_x.$(OBJEXT) \
####	x_wrdwindow.$(OBJEXT) \
####	VTPrsTbl.$(OBJEXT) \
####	x_mag.$(OBJEXT) \
####	x_sherry.$(OBJEXT) \
####	wrdt_wcon.$(OBJEXT) \
####	dynamic_c.$(OBJEXT) \
####	soundspec.$(OBJEXT)
am__libinterface_a_SOURCES_DIST = dumb_c.c wrdt_dumb.c wrdt_tty.c
#am_libinterface_a_OBJECTS =
am_libinterface_a_OBJECTS = dumb_c.$(OBJEXT) \
	wrdt_dumb.$(OBJEXT) wrdt_tty.$(OBJEXT)
libinterface_a_OBJECTS = $(am_libinterface_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autoconf/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/VTPrsTbl.Po ./$(DEPDIR)/alsaseq_c.Po \
	./$(DEPDIR)/dumb_c.Po ./$(DEPDIR)/dynamic_c.Po \
	./$(DEPDIR)/emacs_c.Po ./$(DEPDIR)/gtk_c.Po \
	./$(DEPDIR)/gtk_i.Po ./$(DEPDIR)/gtk_p.Po \
	./$(DEPDIR)/mac_c.Po ./$(DEPDIR)/mac_mag.Po \
	./$(DEPDIR)/mac_trace.Po \
	./$(DEPDIR)/mac_wrdwindow.Po ./$(DEPDIR)/motif_c.Po \
	./$(DEPDIR)/motif_i.Po ./$(DEPDIR)/motif_p.Po \
	./$(DEPDIR)/ncurs_c.Po ./$(DEPDIR)/npsyn_c.Po \
	./$(DEPDIR)/portmidisyn_c.Po \
	./$(DEPDIR)/rtsyn_common.Po \
	./$(DEPDIR)/rtsyn_npipe.Po \
	./$(DEPDIR)/rtsyn_portmidi.Po \
	./$(DEPDIR)/rtsyn_winmm.Po ./$(DEPDIR)/server_c.Po \
	./$(DEPDIR)/slang_c.Po ./$(DEPDIR)/soundspec.Po \
	./$(DEPDIR)/tk_c.Po ./$(DEPDIR)/vt100.Po \
	./$(DEPDIR)/vt100_c.Po ./$(DEPDIR)/w32g_c.Po \
	./$(DEPDIR)/w32g_dib.Po ./$(DEPDIR)/w32g_i.Po \
	./$(DEPDIR)/w32g_ini.Po ./$(DEPDIR)/w32g_mag.Po \
	./$(DEPDIR)/w32g_playlist.Po \
	./$(DEPDIR)/w32g_pref.Po ./$(DEPDIR)/w32g_subwin.Po \
	./$(DEPDIR)/w32g_subwin2.Po \
	./$(DEPDIR)/w32g_subwin3.Po ./$(DEPDIR)/w32g_syn.Po \
	./$(DEPDIR)/w32g_ut2.Po ./$(DEPDIR)/w32g_utl.Po \
	./$(DEPDIR)/winsyn_c.Po ./$(DEPDIR)/wrdt_dumb.Po \
	./$(DEPDIR)/wrdt_mac.Po ./$(DEPDIR)/wrdt_tty.Po \
	./$(DEPDIR)/wrdt_w32g.Po ./$(DEPDIR)/wrdt_wcon.Po \
	./$(DEPDIR)/wrdt_x.Po ./$(DEPDIR)/x_mag.Po \
	./$(DEPDIR)/x_sherry.Po ./$(DEPDIR)/x_trace.Po \
	./$(DEPDIR)/x_wrdwindow.Po ./$(DEPDIR)/xaw_c.Po \
	./$(DEPDIR)/xaw_i.Po ./$(DEPDIR)/xaw_redef.Po \
	./$(DEPDIR)/xdnd.Po ./$(DEPDIR)/xskin_c.Po \
	./$(DEPDIR)/xskin_i.Po ./$(DEPDIR)/xskin_loadBMP.Po \
	./$(DEPDIR)/xskin_spectrum.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(am__libinterface_a_SOURCES_DIST) \
	$(EXTRA_libinterface_a_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive
DIST_COMMON = $(top_srcdir)/common.makefile.in Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libinterface_a_SOURCES) $(EXTRA_libinterface_a_SOURCES)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .ptcl .tcl .bundle .$(so) .c .o .obj
$(srcdir)/Makefile.in: # Makefile.am $(top_srcdir)/common.makefile.in $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  interface/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/VTPrsTbl.Po
include ./$(DEPDIR)/alsaseq_c.Po
include ./$(DEPDIR)/dumb_c.Po
include ./$(DEPDIR)/dynamic_c.Po
include ./$(DEPDIR)/emacs_c.Po
include ./$(DEPDIR)/gtk_c.Po
include ./$(DEPDIR)/gtk_i.Po
include ./$(DEPDIR)/gtk_p.Po
include ./$(DEPDIR)/mac_c.Po
include ./$(DEPDIR)/mac_mag.Po
include ./$(DEPDIR)/mac_trace.Po
include ./$(DEPDIR)/mac_wrdwindow.Po
include ./$(DEPDIR)/motif_c.Po
include ./$(DEPDIR)/motif_i.Po
include ./$(DEPDIR)/motif_p.Po
include ./$(DEPDIR)/ncurs_c.Po
include ./$(DEPDIR)/npsyn_c.Po
include ./$(DEPDIR)/portmidisyn_c.Po
include ./$(DEPDIR)/rtsyn_common.Po
include ./$(DEPDIR)/rtsyn_npipe.Po
include ./$(DEPDIR)/rtsyn_portmidi.Po
include ./$(DEPDIR)/rtsyn_winmm.Po
include ./$(DEPDIR)/server_c.Po
include ./$(DEPDIR)/slang_c.Po
include ./$(DEPDIR)/soundspec.Po
include ./$(DEPDIR)/tk_c.Po
include ./$(DEPDIR)/vt100.Po
include ./$(DEPDIR)/vt100_c.Po
include ./$(DEPDIR)/w32g_c.Po
include ./$(DEPDIR)/w32g_dib.Po
include ./$(DEPDIR)/w32g_i.Po
include ./$(DEPDIR)/w32g_ini.Po
include ./$(DEPDIR)/w32g_mag.Po
include ./$(DEPDIR)/w32g_playlist.Po
include ./$(DEPDIR)/w32g_pref.Po
include ./$(DEPDIR)/w32g_subwin.Po
include ./$(DEPDIR)/w32g_subwin2.Po
include ./$(DEPDIR)/w32g_subwin3.Po
include ./$(DEPDIR)/w32g_syn.Po
include ./$(DEPDIR)/w32g_ut2.Po
include ./$(DEPDIR)/w32g_utl.Po
include ./$(DEPDIR)/winsyn_c.Po
include ./$(DEPDIR)/wrdt_dumb.Po
include ./$(DEPDIR)/wrdt_mac.Po
include ./$(DEPDIR)/wrdt_tty.Po
include ./$(DEPDIR)/wrdt_w32g.Po
include ./$(DEPDIR)/wrdt_wcon.Po
include ./$(DEPDIR)/wrdt_x.Po
include ./$(DEPDIR)/x_mag.Po
include ./$(DEPDIR)/x_sherry.Po
include ./$(DEPDIR)/x_trace.Po
include ./$(DEPDIR)/x_wrdwindow.Po
include ./$(DEPDIR)/xaw_c.Po
include ./$(DEPDIR)/xaw_i.Po
include ./$(DEPDIR)/xaw_redef.Po
include ./$(DEPDIR)/xdnd.Po
include ./$(DEPDIR)/xskin_c.Po
include ./$(DEPDIR)/xskin_i.Po
include ./$(DEPDIR)/xskin_loadBMP.Po
include ./$(DEPDIR)/xskin_spectrum.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES)
installdirs: installdirs-recursive
installdirs-am:

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-exec-local

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-generic clean-noinstLIBRARIES clean-recursive ctags \
	ctags-recursive distclean distclean-compile distclean-depend \
	distclean-generic distclean-recursive distclean-tags distdir \
	dvi dvi-am dvi-recursive info info-am info-recursive install \
	install-am install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-local \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-man install-recursive \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am installdirs-recursive maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-recursive \
	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
	tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-recursive


libinterface.a: $(libinterface_a_OBJECTS) $(libinterface_a_DEPENDENCIES) $(libinterface_dep)
#	rm -f libinterface.a
#	rm -f interface.lib
#	link -lib $(libinterface_a_OBJECTS) $(libinterface_LIBADD) -out:interface.lib
#	if test -f interface.lib ; then touch $@ ; fi
#	rm -f libinterface.a
#	rm -f interface.lib
#	for foo in   $(libinterface_a_OBJECTS) $(libinterface_LIBADD) ;do \
#	  tlib interface.lib +$$foo; \
#	done
#	if test -f interface.lib ; then touch $@ ; fi
#	rm -f libinterface.a
#	rm -f interface.lib
#	for foo in   $(libinterface_a_OBJECTS) $(libinterface_LIBADD) ;do \
#	  wlib -q interface.lib +$$foo; \
#	done
#	if test -f interface.lib ; then touch $@ ; fi
#	rm -f libinterface.a
#	rm -f interface.lib
#	start lib -c interface.lib  $(libinterface_a_OBJECTS) $(libinterface_LIBADD)
#	if test -f interface.lib ; then touch $@ ; fi
#	rm -f libinterface.a
#	rm -f interface.lib
#	polib -OUT:interface.lib  $(libinterface_a_OBJECTS) $(libinterface_LIBADD)
#	if test -f interface.lib ; then touch $@ ; fi
	rm -f libinterface.a
	$(AR) cru libinterface.a $(libinterface_a_OBJECTS) $(libinterface_a_LIBADD)
	$(RANLIB) libinterface.a

.ptcl.tcl:
	sed -e 's@%TCL_DIR%@$(TCL_DIR)@g' $< > $@
clean:
	rm -f tkmidity.tcl
	rm -f *.$(OBJEXT)
	rm -f *.$(so)
	rm -f *.res
	rm -f *.RES
	rm -f *escaped.c
	rm -f *.a
	rm -f *.lib

tclIndex: $(TCLSRCS)
	rm -f tclIndex
	echo 'auto_mkindex . *.tcl; exit' | $(WISH)

install.tk: $(ALLTCLF) install.bitmaps
	test -d $(DESTDIR)$(TCL_DIR) || mkdir -p $(DESTDIR)$(TCL_DIR)
	for f in $(ALLTCLF) ''; do case ".$$f" in .);; *) $(INSTALL_DATA) $$f $(DESTDIR)$(TCL_DIR);; esac; done

install.xaw:
#	test -d ${DESTDIR}${XAWRES} || mkdir -p ${DESTDIR}${XAWRES}
#	test -d ${DESTDIR}${XAWRES_JA} || mkdir -p ${DESTDIR}${XAWRES_JA}
#	cp ${top_srcdir}/interface/TiMidity.ad ${DESTDIR}${XAWRES}/TiMidity
#	cp ${top_srcdir}/interface/TiMidity-uj.ad ${DESTDIR}${XAWRES_JA}/TiMidity

install.bitmaps:
	cd bitmaps; $(MAKE) install.bitmaps

install.el: $(ELFILES)
	test -d $(DESTDIR)$(ELISP_DIR) || mkdir -p $(DESTDIR)$(ELISP_DIR)
	for f in $(ELFILES) ''; do case ".$$f" in .);; *) $(INSTALL_DATA) $$f $(DESTDIR)$(ELISP_DIR);; esac; done

#w32g_res.res: w32g_res.h w32g_rec.h w32g_res.rc \
#	w32g_btn.bmp w32g_icon.ico w32g_sleep.bmp w32g_subbtn.bmp 
#	rc -l0x11 w32g_res.rc
#w32g_res.res: w32g_res.h w32g_rec.h w32g_res.rc \
#	w32g_btn.bmp w32g_icon.ico w32g_sleep.bmp w32g_subbtn.bmp 
#	rc -l0x11 w32g_res.rc
#w32g_res.res: w32g_res.h w32g_rec.h w32g_res.rc \
#	w32g_btn.bmp w32g_icon.ico w32g_sleep.bmp w32g_subbtn.bmp 
#	rc -D__NT__ -l0x11 w32g_res.rc
#w32g_res.res: w32g_res.h w32g_rec.h w32g_res.rc \
#	w32g_btn.bmp w32g_icon.ico w32g_sleep.bmp w32g_subbtn.bmp 
#	porc  w32g_res.rc
#w32g_res.res: w32g_res.h w32g_rec.h w32g_res.rc \
#	w32g_btn.bmp w32g_icon.ico w32g_sleep.bmp w32g_subbtn.bmp
#	perl -pe 's/(^FONT.*".*").*$$/$$1/' w32g_res.rc >w32g_res_bc.rc
#	brcc32 -iC:/Borland/BDS/4.0/include w32g_res_bc.rc
#	mv w32g_res_bc.RES w32g_res.res
#	rm w32g_res_bc.rc
w32g_syn_escaped.c:w32g_syn.c escape_sjis.pl
	escape_sjis.pl < w32g_syn.c > w32g_syn_escaped.c

w32g_subwin_escaped.c:w32g_subwin.c escape_sjis.pl
	escape_sjis.pl < w32g_subwin.c > w32g_subwin_escaped.c

w32g_res.res: w32g_res.h w32g_rec.h w32g_res.rc \
	w32g_btn.bmp w32g_icon.ico w32g_sleep.bmp w32g_subbtn.bmp \
	escape_sjis.pl
	escape_sjis.pl <w32g_res.rc >w32g_res_escaped.rc
	windres -o $@ -O coff w32g_res.rc 2>&1|grep escape - >/dev/null && \
	windres -o $@ -O coff w32g_res_escaped.rc || echo
	rm w32g_res_escaped.rc
#n_so_libs = 
#s_so_libs = 
#m_so_libs = 
#k_so_libs = 
#e_so_libs = 
#T_so_libs = 
#a_so_libs = 
#i_so_libs = 
#g_so_libs = 

#all-am: $(dynamic_targets)

#install.dynamics: $(dynamic_targets)
#	test -d $(DESTDIR)$(SHLIB_DIR) || mkdir -p $(DESTDIR)$(SHLIB_DIR)
#	for f in $(dynamic_targets) ''; do case ".$$f" in .);; *) $(INSTALL_PROGRAM) $$f $(DESTDIR)$(SHLIB_DIR) ;; esac; done

#.c.$(so):
#	$(COMPILE) $(SHCFLAGS) -c $< -o $@

#bitset.$(so): $(top_srcdir)/utils/bitset.c
#	$(COMPILE) $(SHCFLAGS) -o $@ -c $<

#timer.$(so): $(top_srcdir)/utils/timer.c
#	$(COMPILE) $(SHCFLAGS) -o $@ -c $<

#url_buff.$(so): $(top_srcdir)/libarc/url_buff.c
#	$(COMPILE) $(SHCFLAGS) -o $@ -c $<

#support.$(so): $(top_srcdir)/utils/support.c
#	$(COMPILE) $(SHCFLAGS) -o $@ -c $<

#if_ncurses.$(so): ncurs_c.$(so) support.$(so) bitset.$(so) timer.$(so)
#	$(SHLD) -o $@ ncurs_c.$(so) support.$(so) bitset.$(so) timer.$(so) $(n_so_libs)

#if_slang.$(so): slang_c.$(so) support.$(so) timer.$(so)
#	$(SHLD) -o $@ slang_c.$(so) support.$(so) timer.$(so) $(s_so_libs)

#if_motif.$(so): motif_c.$(so) support.$(so) motif_i.$(so) motif_p.$(so)
#	$(SHLD) -o $@ motif_c.$(so) support.$(so) motif_i.$(so) motif_p.$(so) $(m_so_libs)

#if_tcltk.$(so): tk_c.$(so) support.$(so)
#	$(SHLD) -o $@ tk_c.$(so) support.$(so) $(k_so_libs)

#if_emacs.$(so): emacs_c.$(so) support.$(so)
#	$(SHLD) -o $@ emacs_c.$(so) support.$(so) $(e_so_libs)

#if_vt100.$(so): vt100_c.$(so) support.$(so) vt100.$(so) bitset.$(so) timer.$(so)
#	$(SHLD) -o $@ vt100_c.$(so) support.$(so) vt100.$(so) bitset.$(so) timer.$(so) $(T_so_libs)

#if_xaw.$(so): xaw_c.$(so) support.$(so) xaw_i.$(so) x_trace.${so} timer.$(so) ${XDND_SO}
#	$(SHLD) -o $@ xaw_c.$(so) support.$(so) xaw_i.$(so) x_trace.${so} timer.$(so) ${XDND_SO} $(a_so_libs)

#if_xskin.$(so): xskin_c.$(so) support.$(so) xskin_i.$(so) xskin_loadBMP.$(so) xskin_spectrum.$(so) url_buff.$(so)
#	$(SHLD) -o $@ xskin_c.$(so) support.$(so) xskin_i.$(so) xskin_loadBMP.$(so) xskin_spectrum.$(so) url_buff.$(so) $(i_so_libs)

#if_gtk.$(so): gtk_c.$(so) support.$(so) gtk_i.$(so) gtk_p.$(so)
#	$(SHLD) -o $@ gtk_c.$(so) support.$(so) gtk_i.$(so) gtk_p.$(so) $(g_so_libs)

#if_server.$(so): server_c.$(so) support.$(so)
#	$(SHLD) -o $@ server_c.$(so) support.$(so)

#if_alsaseq.$(so): alsaseq_c.$(so) support.$(so)
#	$(SHLD) -o $@ alsaseq_c.$(so) support.$(so)

clean-compile:
	-rm -f *.$(so)
	-rm -f *.res
	-rm -f *.RES

install-exec-local: $(install_tk) $(install_xaw) $(install_el) $(install_dynamics)

########## End of Makefile
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
