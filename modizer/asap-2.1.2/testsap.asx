	ift	SAP
	opt	h-
	dta	c'SAP',13,10
	dta	c'AUTHOR "Piotr Fusik (0xF)"',13,10
	dta	c'NAME "6502 ADC/SBC test"',13,10
	dta	c'DATE "21/09/2010"',13,10
	dta	c'TYPE D',13,10
	dta	c'INIT 8000',13,10
	dta	c'TIME 01:00',13,10
	opt	h+
	eif

; CRC-32 based on my implementation in cc65 / zlib

D_FLAG	equ	8
C_FLAG	equ	1
CRC_POLY3	equ	$ed
CRC_POLY2	equ	$b8
CRC_POLY1	equ	$83
CRC_POLY0	equ	$20

OK3	equ	$21
OK2	equ	$b4
OK1	equ	$f7
OK0	equ	$7e

crc	equ	$80	; 4 bytes
zpdata	equ	$84
zpflags	equ	$85

	org	f:$8000
main
	jsr	init_crc
	lda	#0
	jsr	test_adc_sbc
	lda	#C_FLAG
	jsr	test_adc_sbc
	lda	#D_FLAG
	jsr	test_adc_sbc
	lda	#D_FLAG|C_FLAG
	jsr	test_adc_sbc

	ift	!SAP
	lda	crc+3
	jsr	put_hex_byte
	lda	crc+2
	jsr	put_hex_byte
	lda	crc+1
	jsr	put_hex_byte
	lda	crc
	jsr	put_hex_byte
	eif

	lda	crc+3
	cmp	#OK3
	bne	error
	lda	crc+2
	cmp	#OK2
	bne	error
	lda	crc+1
	cmp	#OK1
	bne	error
	lda	crc
	cmp	#OK0
	bne	error
	mwa	#$af30	$d200
	jmp	*
error
	mwa	#$cfa0	$d200
	jmp	*

test_adc_sbc
	sta	zpflags
	mva	#0	zpdata
	ldy	#0
test_adc_sbc_byte
	ift	!SAP
	mva	zpdata	$2c8
	eif

	lda:pha	zpflags
	tya
	plp
	adc	zpdata
	php
	jsr	do_crc
	pla
	jsr	do_crc

	lda:pha	zpflags
	tya
	plp
	sbc	zpdata
	php
	jsr	do_crc
	pla
	jsr	do_crc

	iny
	bne	test_adc_sbc_byte
	inc	zpdata
	bne	test_adc_sbc_byte
	rts

init_crc
	ldx	#0
init_crc_entry
	lda	#0
	sta	crc+1
	sta	crc+2
	sta	crc+3
	ldy	#8
	txa
init_crc_bit
	sta	crc
	lsr	@
	bcc	init_crc_noxor
	lda	crc+3
	lsr	@
	eor	#CRC_POLY3
	sta	crc+3
	lda	crc+2
	ror	@
	eor	#CRC_POLY2
	sta	crc+2
	lda	crc+1
	ror	@
	eor	#CRC_POLY1
	sta	crc+1
	lda	crc
	ror	@
	eor	#CRC_POLY0
	bcs	init_crc_nextbit ; branch always
init_crc_noxor
	rol	@
	lsr	crc+3
	ror	crc+2
	ror	crc+1
	ror	@
init_crc_nextbit
	dey
	bne	init_crc_bit
	sta	crc_table_0,x
	mva	crc+1	crc_table_1,x
	mva	crc+2	crc_table_2,x
	mva	crc+3	crc_table_3,x
	inx
	bne	init_crc_entry
	mwa	#0	crc
	sta	crc+2
	sta	crc+3
	rts

; crc = (crc >> 8) ^ crc_table[(crc & 0xff) ^ input];
do_crc
	eor	crc
	tax
	lda	crc_table_0,x
	eor	crc+1
	sta	crc
	lda	crc_table_1,x
	eor	crc+2
	sta	crc+1
	lda	crc_table_2,x
	sta	crc+3
	sta	crc+2
	mva	crc_table_3,x	crc+3
	rts

	ift	!SAP
put_hex_byte
	pha
:4	lsr	@
	jsr	put_hex_nibble
	pla
	and	#$f
put_hex_nibble
	cmp	#10
	sed
	adc	#'0'
	cld
put_char
	mvx	#11	$342
	mwx	#0	$348
	jmp	$e456
	eif

crc_table_0	org	*+256
crc_table_1	org	*+256
crc_table_2	org	*+256
crc_table_3	org	*+256

	ift	!SAP
	run	main
	eif
