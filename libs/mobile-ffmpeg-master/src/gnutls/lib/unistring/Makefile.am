## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2002-2020 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by:
# gnulib-tool --import --local-dir=lib/unistring/override \
#  --lib=libunistring \
#  --source-base=lib/unistring \
#  --m4-base=lib/unistring/m4 \
#  --doc-base=doc \
#  --tests-base=tests \
#  --aux-dir=build-aux \
#  --lgpl=3orGPLv2 \
#  --no-conditional-dependencies \
#  --libtool \
#  --macro-prefix=unistring \
#  unictype/category-all \
#  unictype/property-default-ignorable-code-point \
#  unictype/property-join-control \
#  unictype/property-not-a-character \
#  uninorm/nfc \
#  uninorm/nfkc \
#  uninorm/u16-normalize \
#  uninorm/u32-normalize \
#  uninorm/u8-normalize \
#  unistr/u16-to-u8 \
#  unistr/u32-to-u8 \
#  unistr/u8-check \
#  unistr/u8-to-u16 \
#  unistr/u8-to-u32

AUTOMAKE_OPTIONS = 1.11 gnits subdir-objects

SUBDIRS =
noinst_HEADERS =
noinst_LIBRARIES =
noinst_LTLIBRARIES =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =
# No GNU Make output.
EXTRA_DIST += m4/gnulib-cache.m4

AM_CPPFLAGS =
AM_CFLAGS =

noinst_LTLIBRARIES += libunistring.la

libunistring_la_SOURCES =
libunistring_la_LIBADD = $(unistring_LTLIBOBJS)
libunistring_la_DEPENDENCIES = $(unistring_LTLIBOBJS)
EXTRA_libunistring_la_SOURCES =
libunistring_la_LDFLAGS = $(AM_LDFLAGS)
libunistring_la_LDFLAGS += -no-undefined

## begin gnulib module absolute-header

# Use this preprocessor expression to decide whether #include_next works.
# Do not rely on a 'configure'-time test for this, since the expression
# might appear in an installed header, which is used by some other compiler.
HAVE_INCLUDE_NEXT = (__GNUC__ || 60000000 <= __DECC_VER)

## end   gnulib module absolute-header

## begin gnulib module array-mergesort


EXTRA_DIST += array-mergesort.h

## end   gnulib module array-mergesort

## begin gnulib module gperf

GPERF = gperf
V_GPERF = $(V_GPERF_@AM_V@)
V_GPERF_ = $(V_GPERF_@AM_DEFAULT_V@)
V_GPERF_0 = @echo "  GPERF   " $@;

## end   gnulib module gperf

## begin gnulib module limits-h

BUILT_SOURCES += $(LIMITS_H)

# We need the following in order to create <limits.h> when the system
# doesn't have one that is compatible with GNU.
if GL_GENERATE_LIMITS_H
limits.h: limits.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */' && \
	  sed -e 's|@''GUARD_PREFIX''@|GL_UNISTRING|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_LIMITS_H''@|$(NEXT_LIMITS_H)|g' \
	      < $(srcdir)/limits.in.h; \
	} > $@-t && \
	mv $@-t $@
else
limits.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += limits.h limits.h-t

EXTRA_DIST += limits.in.h

## end   gnulib module limits-h

## begin gnulib module snippet/unused-parameter

# Because this Makefile snippet defines a variable used by other
# gnulib Makefile snippets, it must be present in all makefiles that
# need it. This is ensured by the applicability 'all' defined above.

UNUSED_PARAMETER_H=$(srcdir)/unused-parameter.h

EXTRA_DIST += unused-parameter.h

## end   gnulib module snippet/unused-parameter

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
if GL_GENERATE_STDBOOL_H
stdbool.h: stdbool.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool.in.h; \
	} > $@-t && \
	mv $@-t $@
else
stdbool.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

EXTRA_DIST += stdbool.in.h

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
if GL_GENERATE_STDINT_H
stdint.h: stdint.in.h $(top_builddir)/config.status
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL_UNISTRING|g' \
	      -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_STDINT_H''@|$(NEXT_STDINT_H)|g' \
	      -e 's/@''HAVE_C99_STDINT_H''@/$(HAVE_C99_STDINT_H)/g' \
	      -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	      -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	      -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	      -e 's/@''APPLE_UNIVERSAL_BUILD''@/$(APPLE_UNIVERSAL_BUILD)/g' \
	      -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	      -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	      -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	      -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	      -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	      -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	      -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	      -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	      -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	      -e 's/@''GNULIB_OVERRIDES_WINT_T''@/$(GNULIB_OVERRIDES_WINT_T)/g' \
	      < $(srcdir)/stdint.in.h; \
	} > $@-t && \
	mv $@-t $@
else
stdint.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += stdint.h stdint.h-t

EXTRA_DIST += stdint.in.h

## end   gnulib module stdint

## begin gnulib module sys_types

BUILT_SOURCES += sys/types.h

# We need the following in order to create <sys/types.h> when the system
# doesn't have one that works with the given compiler.
sys/types.h: sys_types.in.h $(top_builddir)/config.status
	$(AM_V_at)$(MKDIR_P) sys
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''GUARD_PREFIX''@|GL_UNISTRING|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_SYS_TYPES_H''@|$(NEXT_SYS_TYPES_H)|g' \
	      -e 's|@''WINDOWS_64_BIT_OFF_T''@|$(WINDOWS_64_BIT_OFF_T)|g' \
	      -e 's|@''WINDOWS_STAT_INODES''@|$(WINDOWS_STAT_INODES)|g' \
	      < $(srcdir)/sys_types.in.h; \
	} > $@-t && \
	mv $@-t $@
MOSTLYCLEANFILES += sys/types.h sys/types.h-t

EXTRA_DIST += sys_types.in.h

## end   gnulib module sys_types

## begin gnulib module unictype/base

BUILT_SOURCES += $(LIBUNISTRING_UNICTYPE_H)

unictype.h: unictype.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/unictype.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += unictype.h unictype.h-t

EXTRA_DIST += unictype.in.h

## end   gnulib module unictype/base

## begin gnulib module unictype/category-C

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_C
libunistring_la_SOURCES += unictype/categ_C.c
endif

EXTRA_DIST += unictype/categ_C.h

## end   gnulib module unictype/category-C

## begin gnulib module unictype/category-Cc

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_CC
libunistring_la_SOURCES += unictype/categ_Cc.c
endif

EXTRA_DIST += unictype/categ_Cc.h

## end   gnulib module unictype/category-Cc

## begin gnulib module unictype/category-Cf

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_CF
libunistring_la_SOURCES += unictype/categ_Cf.c
endif

EXTRA_DIST += unictype/categ_Cf.h

## end   gnulib module unictype/category-Cf

## begin gnulib module unictype/category-Cn

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_CN
libunistring_la_SOURCES += unictype/categ_Cn.c
endif

EXTRA_DIST += unictype/categ_Cn.h

## end   gnulib module unictype/category-Cn

## begin gnulib module unictype/category-Co

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_CO
libunistring_la_SOURCES += unictype/categ_Co.c
endif

EXTRA_DIST += unictype/categ_Co.h

## end   gnulib module unictype/category-Co

## begin gnulib module unictype/category-Cs

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_CS
libunistring_la_SOURCES += unictype/categ_Cs.c
endif

EXTRA_DIST += unictype/categ_Cs.h

## end   gnulib module unictype/category-Cs

## begin gnulib module unictype/category-L

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_L
libunistring_la_SOURCES += unictype/categ_L.c
endif

EXTRA_DIST += unictype/categ_L.h

## end   gnulib module unictype/category-L

## begin gnulib module unictype/category-LC

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_LC
libunistring_la_SOURCES += unictype/categ_LC.c
endif

EXTRA_DIST += unictype/categ_LC.h

## end   gnulib module unictype/category-LC

## begin gnulib module unictype/category-Ll

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_LL
libunistring_la_SOURCES += unictype/categ_Ll.c
endif

EXTRA_DIST += unictype/categ_Ll.h

## end   gnulib module unictype/category-Ll

## begin gnulib module unictype/category-Lm

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_LM
libunistring_la_SOURCES += unictype/categ_Lm.c
endif

EXTRA_DIST += unictype/categ_Lm.h

## end   gnulib module unictype/category-Lm

## begin gnulib module unictype/category-Lo

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_LO
libunistring_la_SOURCES += unictype/categ_Lo.c
endif

EXTRA_DIST += unictype/categ_Lo.h

## end   gnulib module unictype/category-Lo

## begin gnulib module unictype/category-Lt

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_LT
libunistring_la_SOURCES += unictype/categ_Lt.c
endif

EXTRA_DIST += unictype/categ_Lt.h

## end   gnulib module unictype/category-Lt

## begin gnulib module unictype/category-Lu

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_LU
libunistring_la_SOURCES += unictype/categ_Lu.c
endif

EXTRA_DIST += unictype/categ_Lu.h

## end   gnulib module unictype/category-Lu

## begin gnulib module unictype/category-M

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_M
libunistring_la_SOURCES += unictype/categ_M.c
endif

EXTRA_DIST += unictype/categ_M.h

## end   gnulib module unictype/category-M

## begin gnulib module unictype/category-Mc

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_MC
libunistring_la_SOURCES += unictype/categ_Mc.c
endif

EXTRA_DIST += unictype/categ_Mc.h

## end   gnulib module unictype/category-Mc

## begin gnulib module unictype/category-Me

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_ME
libunistring_la_SOURCES += unictype/categ_Me.c
endif

EXTRA_DIST += unictype/categ_Me.h

## end   gnulib module unictype/category-Me

## begin gnulib module unictype/category-Mn

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_MN
libunistring_la_SOURCES += unictype/categ_Mn.c
endif

EXTRA_DIST += unictype/categ_Mn.h

## end   gnulib module unictype/category-Mn

## begin gnulib module unictype/category-N

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_N
libunistring_la_SOURCES += unictype/categ_N.c
endif

EXTRA_DIST += unictype/categ_N.h

## end   gnulib module unictype/category-N

## begin gnulib module unictype/category-Nd

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_ND
libunistring_la_SOURCES += unictype/categ_Nd.c
endif

EXTRA_DIST += unictype/categ_Nd.h

## end   gnulib module unictype/category-Nd

## begin gnulib module unictype/category-Nl

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_NL
libunistring_la_SOURCES += unictype/categ_Nl.c
endif

EXTRA_DIST += unictype/categ_Nl.h

## end   gnulib module unictype/category-Nl

## begin gnulib module unictype/category-No

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_NO
libunistring_la_SOURCES += unictype/categ_No.c
endif

EXTRA_DIST += unictype/categ_No.h

## end   gnulib module unictype/category-No

## begin gnulib module unictype/category-P

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_P
libunistring_la_SOURCES += unictype/categ_P.c
endif

EXTRA_DIST += unictype/categ_P.h

## end   gnulib module unictype/category-P

## begin gnulib module unictype/category-Pc

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_PC
libunistring_la_SOURCES += unictype/categ_Pc.c
endif

EXTRA_DIST += unictype/categ_Pc.h

## end   gnulib module unictype/category-Pc

## begin gnulib module unictype/category-Pd

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_PD
libunistring_la_SOURCES += unictype/categ_Pd.c
endif

EXTRA_DIST += unictype/categ_Pd.h

## end   gnulib module unictype/category-Pd

## begin gnulib module unictype/category-Pe

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_PE
libunistring_la_SOURCES += unictype/categ_Pe.c
endif

EXTRA_DIST += unictype/categ_Pe.h

## end   gnulib module unictype/category-Pe

## begin gnulib module unictype/category-Pf

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_PF
libunistring_la_SOURCES += unictype/categ_Pf.c
endif

EXTRA_DIST += unictype/categ_Pf.h

## end   gnulib module unictype/category-Pf

## begin gnulib module unictype/category-Pi

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_PI
libunistring_la_SOURCES += unictype/categ_Pi.c
endif

EXTRA_DIST += unictype/categ_Pi.h

## end   gnulib module unictype/category-Pi

## begin gnulib module unictype/category-Po

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_PO
libunistring_la_SOURCES += unictype/categ_Po.c
endif

EXTRA_DIST += unictype/categ_Po.h

## end   gnulib module unictype/category-Po

## begin gnulib module unictype/category-Ps

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_PS
libunistring_la_SOURCES += unictype/categ_Ps.c
endif

EXTRA_DIST += unictype/categ_Ps.h

## end   gnulib module unictype/category-Ps

## begin gnulib module unictype/category-S

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_S
libunistring_la_SOURCES += unictype/categ_S.c
endif

EXTRA_DIST += unictype/categ_S.h

## end   gnulib module unictype/category-S

## begin gnulib module unictype/category-Sc

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_SC
libunistring_la_SOURCES += unictype/categ_Sc.c
endif

EXTRA_DIST += unictype/categ_Sc.h

## end   gnulib module unictype/category-Sc

## begin gnulib module unictype/category-Sk

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_SK
libunistring_la_SOURCES += unictype/categ_Sk.c
endif

EXTRA_DIST += unictype/categ_Sk.h

## end   gnulib module unictype/category-Sk

## begin gnulib module unictype/category-Sm

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_SM
libunistring_la_SOURCES += unictype/categ_Sm.c
endif

EXTRA_DIST += unictype/categ_Sm.h

## end   gnulib module unictype/category-Sm

## begin gnulib module unictype/category-So

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_SO
libunistring_la_SOURCES += unictype/categ_So.c
endif

EXTRA_DIST += unictype/categ_So.h

## end   gnulib module unictype/category-So

## begin gnulib module unictype/category-Z

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_Z
libunistring_la_SOURCES += unictype/categ_Z.c
endif

EXTRA_DIST += unictype/categ_Z.h

## end   gnulib module unictype/category-Z

## begin gnulib module unictype/category-Zl

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_ZL
libunistring_la_SOURCES += unictype/categ_Zl.c
endif

EXTRA_DIST += unictype/categ_Zl.h

## end   gnulib module unictype/category-Zl

## begin gnulib module unictype/category-Zp

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_ZP
libunistring_la_SOURCES += unictype/categ_Zp.c
endif

EXTRA_DIST += unictype/categ_Zp.h

## end   gnulib module unictype/category-Zp

## begin gnulib module unictype/category-Zs

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_ZS
libunistring_la_SOURCES += unictype/categ_Zs.c
endif

EXTRA_DIST += unictype/categ_Zs.h

## end   gnulib module unictype/category-Zs

## begin gnulib module unictype/category-and

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_AND
libunistring_la_SOURCES += unictype/categ_and.c
endif

## end   gnulib module unictype/category-and

## begin gnulib module unictype/category-and-not

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_AND_NOT
libunistring_la_SOURCES += unictype/categ_and_not.c
endif

## end   gnulib module unictype/category-and-not

## begin gnulib module unictype/category-byname

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_BYNAME
libunistring_la_SOURCES += unictype/categ_byname.c
endif

$(srcdir)/unictype/categ_byname.h: $(srcdir)/unictype/categ_byname.gperf
	$(V_GPERF)$(GPERF) -m 10 $(srcdir)/unictype/categ_byname.gperf > $(srcdir)/unictype/categ_byname.h-t && \
	mv $(srcdir)/unictype/categ_byname.h-t $(srcdir)/unictype/categ_byname.h
BUILT_SOURCES        += unictype/categ_byname.h
MOSTLYCLEANFILES     += unictype/categ_byname.h-t
MAINTAINERCLEANFILES += unictype/categ_byname.h
EXTRA_DIST           += unictype/categ_byname.h

EXTRA_DIST += unictype/categ_byname.gperf

## end   gnulib module unictype/category-byname

## begin gnulib module unictype/category-longname

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_LONGNAME
libunistring_la_SOURCES += unictype/categ_longname.c
endif

## end   gnulib module unictype/category-longname

## begin gnulib module unictype/category-name

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_NAME
libunistring_la_SOURCES += unictype/categ_name.c
endif

## end   gnulib module unictype/category-name

## begin gnulib module unictype/category-none

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_NONE
libunistring_la_SOURCES += unictype/categ_none.c
endif

## end   gnulib module unictype/category-none

## begin gnulib module unictype/category-of

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_OF
libunistring_la_SOURCES += unictype/categ_of.c
endif

EXTRA_DIST += unictype/categ_of.h

## end   gnulib module unictype/category-of

## begin gnulib module unictype/category-or

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_OR
libunistring_la_SOURCES += unictype/categ_or.c
endif

## end   gnulib module unictype/category-or

## begin gnulib module unictype/category-test

if LIBUNISTRING_COMPILE_UNICTYPE_CATEGORY_TEST
libunistring_la_SOURCES += unictype/categ_test.c
endif

EXTRA_DIST += unictype/bitmap.h

## end   gnulib module unictype/category-test

## begin gnulib module unictype/combining-class

if LIBUNISTRING_COMPILE_UNICTYPE_COMBINING_CLASS
libunistring_la_SOURCES += unictype/combiningclass.c
endif

EXTRA_DIST += unictype/combiningclass.h

## end   gnulib module unictype/combining-class

## begin gnulib module unictype/property-default-ignorable-code-point

if LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_DEFAULT_IGNORABLE_CODE_POINT
libunistring_la_SOURCES += unictype/pr_default_ignorable_code_point.c
endif

EXTRA_DIST += unictype/bitmap.h unictype/pr_default_ignorable_code_point.h

## end   gnulib module unictype/property-default-ignorable-code-point

## begin gnulib module unictype/property-join-control

if LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_JOIN_CONTROL
libunistring_la_SOURCES += unictype/pr_join_control.c
endif

EXTRA_DIST += unictype/bitmap.h unictype/pr_join_control.h

## end   gnulib module unictype/property-join-control

## begin gnulib module unictype/property-not-a-character

if LIBUNISTRING_COMPILE_UNICTYPE_PROPERTY_NOT_A_CHARACTER
libunistring_la_SOURCES += unictype/pr_not_a_character.c
endif

EXTRA_DIST += unictype/bitmap.h unictype/pr_not_a_character.h

## end   gnulib module unictype/property-not-a-character

## begin gnulib module uninorm/base

BUILT_SOURCES += $(LIBUNISTRING_UNINORM_H)

uninorm.h: uninorm.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/uninorm.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += uninorm.h uninorm.h-t

EXTRA_DIST += uninorm.in.h

## end   gnulib module uninorm/base

## begin gnulib module uninorm/canonical-decomposition

if LIBUNISTRING_COMPILE_UNINORM_CANONICAL_DECOMPOSITION
libunistring_la_SOURCES += uninorm/canonical-decomposition.c
endif

## end   gnulib module uninorm/canonical-decomposition

## begin gnulib module uninorm/compat-decomposition

libunistring_la_SOURCES += uninorm/compat-decomposition.c

EXTRA_DIST += uninorm/decompose-internal.h

## end   gnulib module uninorm/compat-decomposition

## begin gnulib module uninorm/composition

if LIBUNISTRING_COMPILE_UNINORM_COMPOSITION
libunistring_la_SOURCES += uninorm/composition.c
endif

$(srcdir)/uninorm/composition-table.h: $(srcdir)/uninorm/composition-table.gperf
	$(V_GPERF)$(GPERF) -m 1 $(srcdir)/uninorm/composition-table.gperf > $(srcdir)/uninorm/composition-table.h-t && \
	mv $(srcdir)/uninorm/composition-table.h-t $(srcdir)/uninorm/composition-table.h
BUILT_SOURCES        += uninorm/composition-table.h
MOSTLYCLEANFILES     += uninorm/composition-table.h-t
MAINTAINERCLEANFILES += uninorm/composition-table.h
EXTRA_DIST           += uninorm/composition-table.h

EXTRA_DIST += uninorm/composition-table.gperf

## end   gnulib module uninorm/composition

## begin gnulib module uninorm/decompose-internal

libunistring_la_SOURCES += uninorm/decompose-internal.c

EXTRA_DIST += uninorm/decompose-internal.h

## end   gnulib module uninorm/decompose-internal

## begin gnulib module uninorm/decomposition

if LIBUNISTRING_COMPILE_UNINORM_DECOMPOSITION
libunistring_la_SOURCES += uninorm/decomposition.c
endif

## end   gnulib module uninorm/decomposition

## begin gnulib module uninorm/decomposition-table

libunistring_la_SOURCES += uninorm/decomposition-table.c

EXTRA_DIST += uninorm/decomposition-table.h uninorm/decomposition-table1.h uninorm/decomposition-table2.h

## end   gnulib module uninorm/decomposition-table

## begin gnulib module uninorm/nfc

if LIBUNISTRING_COMPILE_UNINORM_NFC
libunistring_la_SOURCES += uninorm/nfc.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfc

## begin gnulib module uninorm/nfd

if LIBUNISTRING_COMPILE_UNINORM_NFD
libunistring_la_SOURCES += uninorm/nfd.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfd

## begin gnulib module uninorm/nfkc

if LIBUNISTRING_COMPILE_UNINORM_NFKC
libunistring_la_SOURCES += uninorm/nfkc.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfkc

## begin gnulib module uninorm/nfkd

if LIBUNISTRING_COMPILE_UNINORM_NFKD
libunistring_la_SOURCES += uninorm/nfkd.c
endif

EXTRA_DIST += uninorm/normalize-internal.h

## end   gnulib module uninorm/nfkd

## begin gnulib module uninorm/u16-normalize

if LIBUNISTRING_COMPILE_UNINORM_U16_NORMALIZE
libunistring_la_SOURCES += uninorm/u16-normalize.c
endif

EXTRA_DIST += uninorm/normalize-internal.h uninorm/u-normalize-internal.h

## end   gnulib module uninorm/u16-normalize

## begin gnulib module uninorm/u32-normalize

if LIBUNISTRING_COMPILE_UNINORM_U32_NORMALIZE
libunistring_la_SOURCES += uninorm/u32-normalize.c
endif

EXTRA_DIST += uninorm/normalize-internal.h uninorm/u-normalize-internal.h

## end   gnulib module uninorm/u32-normalize

## begin gnulib module uninorm/u8-normalize

if LIBUNISTRING_COMPILE_UNINORM_U8_NORMALIZE
libunistring_la_SOURCES += uninorm/u8-normalize.c
endif

EXTRA_DIST += uninorm/normalize-internal.h uninorm/u-normalize-internal.h

## end   gnulib module uninorm/u8-normalize

## begin gnulib module unistr/base

BUILT_SOURCES += $(LIBUNISTRING_UNISTR_H)

unistr.h: unistr.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/unistr.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += unistr.h unistr.h-t

EXTRA_DIST += unistr.in.h

## end   gnulib module unistr/base

## begin gnulib module unistr/u16-cpy

if LIBUNISTRING_COMPILE_UNISTR_U16_CPY
libunistring_la_SOURCES += unistr/u16-cpy.c
endif

EXTRA_DIST += unistr/u-cpy.h

## end   gnulib module unistr/u16-cpy

## begin gnulib module unistr/u16-mbtouc-unsafe

if LIBUNISTRING_COMPILE_UNISTR_U16_MBTOUC_UNSAFE
libunistring_la_SOURCES += unistr/u16-mbtouc-unsafe.c unistr/u16-mbtouc-unsafe-aux.c
endif

## end   gnulib module unistr/u16-mbtouc-unsafe

## begin gnulib module unistr/u16-mbtoucr

if LIBUNISTRING_COMPILE_UNISTR_U16_MBTOUCR
libunistring_la_SOURCES += unistr/u16-mbtoucr.c
endif

## end   gnulib module unistr/u16-mbtoucr

## begin gnulib module unistr/u16-to-u8

if LIBUNISTRING_COMPILE_UNISTR_U16_TO_U8
libunistring_la_SOURCES += unistr/u16-to-u8.c
endif

## end   gnulib module unistr/u16-to-u8

## begin gnulib module unistr/u16-uctomb

if LIBUNISTRING_COMPILE_UNISTR_U16_UCTOMB
libunistring_la_SOURCES += unistr/u16-uctomb.c unistr/u16-uctomb-aux.c
endif

## end   gnulib module unistr/u16-uctomb

## begin gnulib module unistr/u32-cpy

if LIBUNISTRING_COMPILE_UNISTR_U32_CPY
libunistring_la_SOURCES += unistr/u32-cpy.c
endif

EXTRA_DIST += unistr/u-cpy.h

## end   gnulib module unistr/u32-cpy

## begin gnulib module unistr/u32-mbtouc-unsafe

if LIBUNISTRING_COMPILE_UNISTR_U32_MBTOUC_UNSAFE
libunistring_la_SOURCES += unistr/u32-mbtouc-unsafe.c
endif

## end   gnulib module unistr/u32-mbtouc-unsafe

## begin gnulib module unistr/u32-to-u8

if LIBUNISTRING_COMPILE_UNISTR_U32_TO_U8
libunistring_la_SOURCES += unistr/u32-to-u8.c
endif

## end   gnulib module unistr/u32-to-u8

## begin gnulib module unistr/u32-uctomb

if LIBUNISTRING_COMPILE_UNISTR_U32_UCTOMB
libunistring_la_SOURCES += unistr/u32-uctomb.c
endif

## end   gnulib module unistr/u32-uctomb

## begin gnulib module unistr/u8-check

if LIBUNISTRING_COMPILE_UNISTR_U8_CHECK
libunistring_la_SOURCES += unistr/u8-check.c
endif

## end   gnulib module unistr/u8-check

## begin gnulib module unistr/u8-cpy

if LIBUNISTRING_COMPILE_UNISTR_U8_CPY
libunistring_la_SOURCES += unistr/u8-cpy.c
endif

EXTRA_DIST += unistr/u-cpy.h

## end   gnulib module unistr/u8-cpy

## begin gnulib module unistr/u8-mbtouc-unsafe

if LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUC_UNSAFE
libunistring_la_SOURCES += unistr/u8-mbtouc-unsafe.c unistr/u8-mbtouc-unsafe-aux.c
endif

## end   gnulib module unistr/u8-mbtouc-unsafe

## begin gnulib module unistr/u8-mbtoucr

if LIBUNISTRING_COMPILE_UNISTR_U8_MBTOUCR
libunistring_la_SOURCES += unistr/u8-mbtoucr.c
endif

## end   gnulib module unistr/u8-mbtoucr

## begin gnulib module unistr/u8-to-u16

if LIBUNISTRING_COMPILE_UNISTR_U8_TO_U16
libunistring_la_SOURCES += unistr/u8-to-u16.c
endif

## end   gnulib module unistr/u8-to-u16

## begin gnulib module unistr/u8-to-u32

if LIBUNISTRING_COMPILE_UNISTR_U8_TO_U32
libunistring_la_SOURCES += unistr/u8-to-u32.c
endif

## end   gnulib module unistr/u8-to-u32

## begin gnulib module unistr/u8-uctomb

if LIBUNISTRING_COMPILE_UNISTR_U8_UCTOMB
libunistring_la_SOURCES += unistr/u8-uctomb.c unistr/u8-uctomb-aux.c
endif

## end   gnulib module unistr/u8-uctomb

## begin gnulib module unitypes

BUILT_SOURCES += $(LIBUNISTRING_UNITYPES_H)

unitypes.h: unitypes.in.h
	$(AM_V_GEN)rm -f $@-t $@ && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/unitypes.in.h; \
	} > $@-t && \
	mv -f $@-t $@
MOSTLYCLEANFILES += unitypes.h unitypes.h-t

EXTRA_DIST += unitypes.in.h

## end   gnulib module unitypes


mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done; \
	:
