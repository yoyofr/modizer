/*   -*- buffer-read-only: t -*- vi: set ro:
 *
 *  DO NOT EDIT THIS FILE   (p11tool-args.c)
 *
 *  It has been AutoGen-ed
 *  From the definitions    p11tool-args.def
 *  and the template file   options
 *
 * Generated from AutoOpts 42:1:17 templates.
 *
 *  AutoOpts is a copyrighted work.  This source file is not encumbered
 *  by AutoOpts licensing, but is provided under the licensing terms chosen
 *  by the p11tool author or copyright holder.  AutoOpts is
 *  licensed under the terms of the LGPL.  The redistributable library
 *  (``libopts'') is licensed under the terms of either the LGPL or, at the
 *  users discretion, the BSD license.  See the AutoOpts and/or libopts sources
 *  for details.
 *
 * The p11tool program is copyrighted and licensed
 * under the following terms:
 *
 *  Copyright (C) 2000-2020 Free Software Foundation, and others, all rights reserved.
 *  This is free software. It is licensed for use, modification and
 *  redistribution under the terms of the GNU General Public License,
 *  version 3 or later <http://gnu.org/licenses/gpl.html>
 *
 *  p11tool is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  p11tool is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __doxygen__
#define OPTION_CODE_COMPILE 1
#include "p11tool-args.h"
#include <sys/types.h>
#include <sys/stat.h>

#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#ifdef  __cplusplus
extern "C" {
#endif
extern FILE * option_usage_fp;
#define zCopyright      (p11tool_opt_strs+0)
#define zLicenseDescrip (p11tool_opt_strs+283)


#ifndef NULL
#  define NULL 0
#endif

/**
 *  static const strings for p11tool options
 */
static char const p11tool_opt_strs[5984] =
/*     0 */ "p11tool 3.6.13\n"
            "Copyright (C) 2000-2020 Free Software Foundation, and others, all rights reserved.\n"
            "This is free software. It is licensed for use, modification and\n"
            "redistribution under the terms of the GNU General Public License,\n"
            "version 3 or later <http://gnu.org/licenses/gpl.html>\n\0"
/*   283 */ "p11tool is free software: you can redistribute it and/or modify it under\n"
            "the terms of the GNU General Public License as published by the Free\n"
            "Software Foundation, either version 3 of the License, or (at your option)\n"
            "any later version.\n\n"
            "p11tool is distributed in the hope that it will be useful, but WITHOUT ANY\n"
            "WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n"
            "FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n"
            "details.\n\n"
            "You should have received a copy of the GNU General Public License along\n"
            "with this program.  If not, see <http://www.gnu.org/licenses/>.\n\0"
/*   886 */ "Tokens:\0"
/*   894 */ "List all available tokens\0"
/*   920 */ "LIST_TOKENS\0"
/*   932 */ "list-tokens\0"
/*   944 */ "List the URLs available tokens\0"
/*   975 */ "LIST_TOKEN_URLS\0"
/*   991 */ "list-token-urls\0"
/*  1007 */ "List all available mechanisms in a token\0"
/*  1048 */ "LIST_MECHANISMS\0"
/*  1064 */ "list-mechanisms\0"
/*  1080 */ "Initializes a PKCS #11 token\0"
/*  1109 */ "INITIALIZE\0"
/*  1120 */ "initialize\0"
/*  1131 */ "Initializes/Resets a PKCS #11 token user PIN\0"
/*  1176 */ "INITIALIZE_PIN\0"
/*  1191 */ "initialize-pin\0"
/*  1206 */ "Initializes/Resets a PKCS #11 token security officer PIN.\0"
/*  1264 */ "INITIALIZE_SO_PIN\0"
/*  1282 */ "initialize-so-pin\0"
/*  1300 */ "Specify the PIN to use on token operations\0"
/*  1343 */ "SET_PIN\0"
/*  1351 */ "set-pin\0"
/*  1359 */ "Specify the Security Officer's PIN to use on token initialization\0"
/*  1425 */ "SET_SO_PIN\0"
/*  1436 */ "set-so-pin\0"
/*  1447 */ "Object listing:\0"
/*  1463 */ "List all available objects in a token\0"
/*  1501 */ "LIST_ALL\0"
/*  1510 */ "list-all\0"
/*  1519 */ "List all available certificates in a token\0"
/*  1562 */ "LIST_ALL_CERTS\0"
/*  1577 */ "list-all-certs\0"
/*  1592 */ "List all certificates that have an associated private key\0"
/*  1650 */ "LIST_CERTS\0"
/*  1661 */ "list-certs\0"
/*  1672 */ "List all available private keys in a token\0"
/*  1715 */ "LIST_ALL_PRIVKEYS\0"
/*  1733 */ "list-all-privkeys\0"
/*  1751 */ "an alias for the 'list-all-privkeys' option\0"
/*  1795 */ "list-privkeys\0"
/*  1809 */ "list-keys\0"
/*  1819 */ "List all available certificates marked as trusted\0"
/*  1869 */ "LIST_ALL_TRUSTED\0"
/*  1886 */ "list-all-trusted\0"
/*  1903 */ "Export the object specified by the URL\0"
/*  1942 */ "EXPORT\0"
/*  1949 */ "export\0"
/*  1956 */ "Export the certificate object specified by the URL\0"
/*  2007 */ "EXPORT_STAPLED\0"
/*  2022 */ "export-stapled\0"
/*  2037 */ "Export the certificate specified by the URL and its chain of trust\0"
/*  2104 */ "EXPORT_CHAIN\0"
/*  2117 */ "export-chain\0"
/*  2130 */ "Export the public key for a private key\0"
/*  2170 */ "EXPORT_PUBKEY\0"
/*  2184 */ "export-pubkey\0"
/*  2198 */ "List information on an available object in a token\0"
/*  2249 */ "INFO\0"
/*  2254 */ "info\0"
/*  2259 */ "an alias for the 'mark-trusted' option\0"
/*  2298 */ "trusted\0"
/*  2306 */ "an alias for the 'mark-distrusted' option\0"
/*  2348 */ "distrusted\0"
/*  2359 */ "Key generation:\0"
/*  2375 */ "Generate private-public key pair of given type\0"
/*  2422 */ "GENERATE_PRIVKEY\0"
/*  2439 */ "generate-privkey\0"
/*  2456 */ "Generate an RSA private-public key pair (deprecated)\0"
/*  2509 */ "GENERATE_RSA\0"
/*  2522 */ "generate-rsa\0"
/*  2535 */ "Generate a DSA private-public key pair (deprecated)\0"
/*  2587 */ "GENERATE_DSA\0"
/*  2600 */ "generate-dsa\0"
/*  2613 */ "Generate an ECDSA private-public key pair (deprecated)\0"
/*  2668 */ "GENERATE_ECC\0"
/*  2681 */ "generate-ecc\0"
/*  2694 */ "Specify the number of bits for the key generate\0"
/*  2742 */ "BITS\0"
/*  2747 */ "bits\0"
/*  2752 */ "Specify the curve used for EC key generation\0"
/*  2797 */ "CURVE\0"
/*  2803 */ "curve\0"
/*  2809 */ "Specify the security level\0"
/*  2836 */ "SEC_PARAM\0"
/*  2846 */ "sec-param\0"
/*  2856 */ "Writing objects:\0"
/*  2873 */ "Set the CKA_ID (in hex) for the specified by the URL object\0"
/*  2933 */ "SET_ID\0"
/*  2940 */ "set-id\0"
/*  2947 */ "Set the CKA_LABEL for the specified by the URL object\0"
/*  3001 */ "SET_LABEL\0"
/*  3011 */ "set-label\0"
/*  3021 */ "Writes the loaded objects to a PKCS #11 token\0"
/*  3067 */ "WRITE\0"
/*  3073 */ "write\0"
/*  3079 */ "Deletes the objects matching the given PKCS #11 URL\0"
/*  3131 */ "DELETE\0"
/*  3138 */ "delete\0"
/*  3145 */ "Sets a label for the write operation\0"
/*  3182 */ "LABEL\0"
/*  3188 */ "label\0"
/*  3194 */ "Sets an ID for the write operation\0"
/*  3229 */ "ID\0"
/*  3232 */ "id\0"
/*  3235 */ "Marks the generated key to be a wrapping key\0"
/*  3280 */ "MARK_WRAP\0"
/*  3290 */ "no-mark-wrap\0"
/*  3303 */ "no\0"
/*  3306 */ "Marks the object to be written as trusted\0"
/*  3348 */ "MARK_TRUSTED\0"
/*  3361 */ "no-mark-trusted\0"
/*  3377 */ "When retrieving objects, it requires the objects to be distrusted\n"
            "(blacklisted)\0"
/*  3457 */ "MARK_DISTRUSTED\0"
/*  3473 */ "mark-distrusted\0"
/*  3489 */ "Marks the object to be written for decryption\0"
/*  3535 */ "MARK_DECRYPT\0"
/*  3548 */ "no-mark-decrypt\0"
/*  3564 */ "Marks the object to be written for signature generation\0"
/*  3620 */ "MARK_SIGN\0"
/*  3630 */ "no-mark-sign\0"
/*  3643 */ "Marks the object to be written as a CA\0"
/*  3682 */ "MARK_CA\0"
/*  3690 */ "no-mark-ca\0"
/*  3701 */ "Marks the object to be written as private\0"
/*  3743 */ "MARK_PRIVATE\0"
/*  3756 */ "no-mark-private\0"
/*  3772 */ "an alias for the 'mark-ca' option\0"
/*  3806 */ "ca\0"
/*  3809 */ "an alias for the 'mark-private' option\0"
/*  3848 */ "private\0"
/*  3856 */ "Provide a hex encoded secret key\0"
/*  3889 */ "SECRET_KEY\0"
/*  3900 */ "secret-key\0"
/*  3911 */ "Private key file to use\0"
/*  3935 */ "LOAD_PRIVKEY\0"
/*  3948 */ "load-privkey\0"
/*  3961 */ "Public key file to use\0"
/*  3984 */ "LOAD_PUBKEY\0"
/*  3996 */ "load-pubkey\0"
/*  4008 */ "Certificate file to use\0"
/*  4032 */ "LOAD_CERTIFICATE\0"
/*  4049 */ "load-certificate\0"
/*  4066 */ "Other options:\0"
/*  4081 */ "Enable debugging\0"
/*  4098 */ "DEBUG\0"
/*  4104 */ "debug\0"
/*  4110 */ "Output file\0"
/*  4122 */ "OUTFILE\0"
/*  4130 */ "outfile\0"
/*  4138 */ "Force (user) login to token\0"
/*  4166 */ "LOGIN\0"
/*  4172 */ "no-login\0"
/*  4181 */ "Force security officer login to token\0"
/*  4219 */ "SO_LOGIN\0"
/*  4228 */ "no-so-login\0"
/*  4240 */ "an alias for the 'so-login' option\0"
/*  4275 */ "admin-login\0"
/*  4287 */ "Tests the signature operation of the provided object\0"
/*  4340 */ "TEST_SIGN\0"
/*  4350 */ "test-sign\0"
/*  4360 */ "Sign with a specific signature algorithm\0"
/*  4401 */ "SIGN_PARAMS\0"
/*  4413 */ "sign-params\0"
/*  4425 */ "Hash algorithm to use for signing\0"
/*  4459 */ "HASH\0"
/*  4464 */ "hash\0"
/*  4469 */ "Generate random data\0"
/*  4490 */ "GENERATE_RANDOM\0"
/*  4506 */ "generate-random\0"
/*  4522 */ "Use PKCS #8 format for private keys\0"
/*  4558 */ "PKCS8\0"
/*  4564 */ "pkcs8\0"
/*  4570 */ "Use DER/RAW format for input\0"
/*  4599 */ "INDER\0"
/*  4605 */ "no-inder\0"
/*  4614 */ "an alias for the 'inder' option\0"
/*  4646 */ "inraw\0"
/*  4652 */ "Use DER format for output certificates, private keys, and DH parameters\0"
/*  4724 */ "OUTDER\0"
/*  4731 */ "no-outder\0"
/*  4741 */ "an alias for the 'outder' option\0"
/*  4774 */ "outraw\0"
/*  4781 */ "Specify the PKCS #11 provider library\0"
/*  4819 */ "PROVIDER\0"
/*  4828 */ "provider\0"
/*  4837 */ "Specify parameters for the PKCS #11 provider library (deprecated)\0"
/*  4903 */ "PROVIDER_OPTS\0"
/*  4917 */ "provider-opts\0"
/*  4931 */ "Print detailed URLs\0"
/*  4951 */ "DETAILED_URL\0"
/*  4964 */ "no-detailed-url\0"
/*  4980 */ "Print a compact listing using only the URLs\0"
/*  5024 */ "ONLY_URLS\0"
/*  5034 */ "only-urls\0"
/*  5044 */ "Disable all interaction with the tool\0"
/*  5082 */ "BATCH\0"
/*  5088 */ "batch\0"
/*  5094 */ "display extended usage information and exit\0"
/*  5138 */ "help\0"
/*  5143 */ "extended usage information passed thru pager\0"
/*  5188 */ "more-help\0"
/*  5198 */ "output version information and exit\0"
/*  5234 */ "version\0"
/*  5242 */ "P11TOOL\0"
/*  5250 */ "p11tool - GnuTLS PKCS #11 tool\n"
            "Usage:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]... [url]\n\0"
/*  5345 */ "bugs@gnutls.org\0"
/*  5361 */ "\n\0"
/*  5363 */ "Program that allows operations on PKCS #11 smart cards and security\n"
            "modules.\n\n"
            "To use PKCS #11 tokens with GnuTLS the p11-kit configuration files need to\n"
            "be setup.  That is create a .module file in /etc/pkcs11/modules with the\n"
            "contents 'module: /path/to/pkcs11.so'.  Alternatively the configuration\n"
            "file /etc/gnutls/pkcs11.conf has to exist and contain a number of lines of\n"
            "the form 'load=/usr/lib/opensc-pkcs11.so'.\n\n"
            "You can provide the PIN to be used for the PKCS #11 operations with the\n"
            "environment variables GNUTLS_PIN and GNUTLS_SO_PIN.\n\0"
/*  5905 */ "p11tool 3.6.13\0"
/*  5920 */ "p11tool [options] [url]\n"
            "p11tool --help for usage instructions.\n";

/**
 *  token_related_options option description:
 */
/** token_related_options option separation text */
#define TOKEN_RELATED_OPTIONS_DESC      (p11tool_opt_strs+886)
#define TOKEN_RELATED_OPTIONS_FLAGS     (OPTST_DOCUMENT | OPTST_NO_INIT)

/**
 *  list-tokens option description:
 */
/** Descriptive text for the list-tokens option */
#define LIST_TOKENS_DESC      (p11tool_opt_strs+894)
/** Upper-cased name for the list-tokens option */
#define LIST_TOKENS_NAME      (p11tool_opt_strs+920)
/** Name string for the list-tokens option */
#define LIST_TOKENS_name      (p11tool_opt_strs+932)
/** Compiled in flag settings for the list-tokens option */
#define LIST_TOKENS_FLAGS     (OPTST_DISABLED)

/**
 *  list-token-urls option description:
 */
/** Descriptive text for the list-token-urls option */
#define LIST_TOKEN_URLS_DESC      (p11tool_opt_strs+944)
/** Upper-cased name for the list-token-urls option */
#define LIST_TOKEN_URLS_NAME      (p11tool_opt_strs+975)
/** Name string for the list-token-urls option */
#define LIST_TOKEN_URLS_name      (p11tool_opt_strs+991)
/** Compiled in flag settings for the list-token-urls option */
#define LIST_TOKEN_URLS_FLAGS     (OPTST_DISABLED)

/**
 *  list-mechanisms option description:
 */
/** Descriptive text for the list-mechanisms option */
#define LIST_MECHANISMS_DESC      (p11tool_opt_strs+1007)
/** Upper-cased name for the list-mechanisms option */
#define LIST_MECHANISMS_NAME      (p11tool_opt_strs+1048)
/** Name string for the list-mechanisms option */
#define LIST_MECHANISMS_name      (p11tool_opt_strs+1064)
/** Compiled in flag settings for the list-mechanisms option */
#define LIST_MECHANISMS_FLAGS     (OPTST_DISABLED)

/**
 *  initialize option description:
 */
/** Descriptive text for the initialize option */
#define INITIALIZE_DESC      (p11tool_opt_strs+1080)
/** Upper-cased name for the initialize option */
#define INITIALIZE_NAME      (p11tool_opt_strs+1109)
/** Name string for the initialize option */
#define INITIALIZE_name      (p11tool_opt_strs+1120)
/** Compiled in flag settings for the initialize option */
#define INITIALIZE_FLAGS     (OPTST_DISABLED)

/**
 *  initialize-pin option description:
 */
/** Descriptive text for the initialize-pin option */
#define INITIALIZE_PIN_DESC      (p11tool_opt_strs+1131)
/** Upper-cased name for the initialize-pin option */
#define INITIALIZE_PIN_NAME      (p11tool_opt_strs+1176)
/** Name string for the initialize-pin option */
#define INITIALIZE_PIN_name      (p11tool_opt_strs+1191)
/** Compiled in flag settings for the initialize-pin option */
#define INITIALIZE_PIN_FLAGS     (OPTST_DISABLED)

/**
 *  initialize-so-pin option description:
 */
/** Descriptive text for the initialize-so-pin option */
#define INITIALIZE_SO_PIN_DESC      (p11tool_opt_strs+1206)
/** Upper-cased name for the initialize-so-pin option */
#define INITIALIZE_SO_PIN_NAME      (p11tool_opt_strs+1264)
/** Name string for the initialize-so-pin option */
#define INITIALIZE_SO_PIN_name      (p11tool_opt_strs+1282)
/** Compiled in flag settings for the initialize-so-pin option */
#define INITIALIZE_SO_PIN_FLAGS     (OPTST_DISABLED)

/**
 *  set-pin option description:
 */
/** Descriptive text for the set-pin option */
#define SET_PIN_DESC      (p11tool_opt_strs+1300)
/** Upper-cased name for the set-pin option */
#define SET_PIN_NAME      (p11tool_opt_strs+1343)
/** Name string for the set-pin option */
#define SET_PIN_name      (p11tool_opt_strs+1351)
/** Compiled in flag settings for the set-pin option */
#define SET_PIN_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  set-so-pin option description:
 */
/** Descriptive text for the set-so-pin option */
#define SET_SO_PIN_DESC      (p11tool_opt_strs+1359)
/** Upper-cased name for the set-so-pin option */
#define SET_SO_PIN_NAME      (p11tool_opt_strs+1425)
/** Name string for the set-so-pin option */
#define SET_SO_PIN_name      (p11tool_opt_strs+1436)
/** Compiled in flag settings for the set-so-pin option */
#define SET_SO_PIN_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  object_list_related_options option description:
 */
/** object_list_related_options option separation text */
#define OBJECT_LIST_RELATED_OPTIONS_DESC      (p11tool_opt_strs+1447)
#define OBJECT_LIST_RELATED_OPTIONS_FLAGS     (OPTST_DOCUMENT | OPTST_NO_INIT)

/**
 *  list-all option description:
 */
/** Descriptive text for the list-all option */
#define LIST_ALL_DESC      (p11tool_opt_strs+1463)
/** Upper-cased name for the list-all option */
#define LIST_ALL_NAME      (p11tool_opt_strs+1501)
/** Name string for the list-all option */
#define LIST_ALL_name      (p11tool_opt_strs+1510)
/** Compiled in flag settings for the list-all option */
#define LIST_ALL_FLAGS     (OPTST_DISABLED)

/**
 *  list-all-certs option description:
 */
/** Descriptive text for the list-all-certs option */
#define LIST_ALL_CERTS_DESC      (p11tool_opt_strs+1519)
/** Upper-cased name for the list-all-certs option */
#define LIST_ALL_CERTS_NAME      (p11tool_opt_strs+1562)
/** Name string for the list-all-certs option */
#define LIST_ALL_CERTS_name      (p11tool_opt_strs+1577)
/** Compiled in flag settings for the list-all-certs option */
#define LIST_ALL_CERTS_FLAGS     (OPTST_DISABLED)

/**
 *  list-certs option description:
 */
/** Descriptive text for the list-certs option */
#define LIST_CERTS_DESC      (p11tool_opt_strs+1592)
/** Upper-cased name for the list-certs option */
#define LIST_CERTS_NAME      (p11tool_opt_strs+1650)
/** Name string for the list-certs option */
#define LIST_CERTS_name      (p11tool_opt_strs+1661)
/** Compiled in flag settings for the list-certs option */
#define LIST_CERTS_FLAGS     (OPTST_DISABLED)

/**
 *  list-all-privkeys option description:
 */
/** Descriptive text for the list-all-privkeys option */
#define LIST_ALL_PRIVKEYS_DESC      (p11tool_opt_strs+1672)
/** Upper-cased name for the list-all-privkeys option */
#define LIST_ALL_PRIVKEYS_NAME      (p11tool_opt_strs+1715)
/** Name string for the list-all-privkeys option */
#define LIST_ALL_PRIVKEYS_name      (p11tool_opt_strs+1733)
/** Compiled in flag settings for the list-all-privkeys option */
#define LIST_ALL_PRIVKEYS_FLAGS     (OPTST_DISABLED)

/**
 *  list-privkeys option description:
 */
/** Descriptive text for the list-privkeys option */
#define LIST_PRIVKEYS_DESC    (p11tool_opt_strs+1751)
#define LIST_PRIVKEYS_NAME    NULL
/** Unmodified name string for the list-privkeys option */
#define LIST_PRIVKEYS_name    (p11tool_opt_strs+1795)
/** Compiled in flag settings for the list-privkeys option */
#define LIST_PRIVKEYS_FLAGS     (LIST_ALL_PRIVKEYS_FLAGS | OPTST_ALIAS)

/**
 *  list-keys option description:
 */
/** Descriptive text for the list-keys option */
#define LIST_KEYS_DESC    (p11tool_opt_strs+1751)
#define LIST_KEYS_NAME    NULL
/** Unmodified name string for the list-keys option */
#define LIST_KEYS_name    (p11tool_opt_strs+1809)
/** Compiled in flag settings for the list-keys option */
#define LIST_KEYS_FLAGS     (LIST_ALL_PRIVKEYS_FLAGS | OPTST_ALIAS)

/**
 *  list-all-trusted option description:
 */
/** Descriptive text for the list-all-trusted option */
#define LIST_ALL_TRUSTED_DESC      (p11tool_opt_strs+1819)
/** Upper-cased name for the list-all-trusted option */
#define LIST_ALL_TRUSTED_NAME      (p11tool_opt_strs+1869)
/** Name string for the list-all-trusted option */
#define LIST_ALL_TRUSTED_name      (p11tool_opt_strs+1886)
/** Compiled in flag settings for the list-all-trusted option */
#define LIST_ALL_TRUSTED_FLAGS     (OPTST_DISABLED)

/**
 *  export option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the export option */
#define EXPORT_DESC      (p11tool_opt_strs+1903)
/** Upper-cased name for the export option */
#define EXPORT_NAME      (p11tool_opt_strs+1942)
/** Name string for the export option */
#define EXPORT_name      (p11tool_opt_strs+1949)
/** Other options that appear in conjunction with the export option */
static int const aExportCantList[] = {
    INDEX_OPT_EXPORT_STAPLED,
    INDEX_OPT_EXPORT_CHAIN,
    INDEX_OPT_EXPORT_PUBKEY, NO_EQUIVALENT };
/** Compiled in flag settings for the export option */
#define EXPORT_FLAGS     (OPTST_DISABLED)

/**
 *  export-stapled option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the export-stapled option */
#define EXPORT_STAPLED_DESC      (p11tool_opt_strs+1956)
/** Upper-cased name for the export-stapled option */
#define EXPORT_STAPLED_NAME      (p11tool_opt_strs+2007)
/** Name string for the export-stapled option */
#define EXPORT_STAPLED_name      (p11tool_opt_strs+2022)
/** Other options that appear in conjunction with the export-stapled option */
static int const aExport_StapledCantList[] = {
    INDEX_OPT_EXPORT,
    INDEX_OPT_EXPORT_CHAIN,
    INDEX_OPT_EXPORT_PUBKEY, NO_EQUIVALENT };
/** Compiled in flag settings for the export-stapled option */
#define EXPORT_STAPLED_FLAGS     (OPTST_DISABLED)

/**
 *  export-chain option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the export-chain option */
#define EXPORT_CHAIN_DESC      (p11tool_opt_strs+2037)
/** Upper-cased name for the export-chain option */
#define EXPORT_CHAIN_NAME      (p11tool_opt_strs+2104)
/** Name string for the export-chain option */
#define EXPORT_CHAIN_name      (p11tool_opt_strs+2117)
/** Other options that appear in conjunction with the export-chain option */
static int const aExport_ChainCantList[] = {
    INDEX_OPT_EXPORT_STAPLED,
    INDEX_OPT_EXPORT,
    INDEX_OPT_EXPORT_PUBKEY, NO_EQUIVALENT };
/** Compiled in flag settings for the export-chain option */
#define EXPORT_CHAIN_FLAGS     (OPTST_DISABLED)

/**
 *  export-pubkey option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the export-pubkey option */
#define EXPORT_PUBKEY_DESC      (p11tool_opt_strs+2130)
/** Upper-cased name for the export-pubkey option */
#define EXPORT_PUBKEY_NAME      (p11tool_opt_strs+2170)
/** Name string for the export-pubkey option */
#define EXPORT_PUBKEY_name      (p11tool_opt_strs+2184)
/** Other options that appear in conjunction with the export-pubkey option */
static int const aExport_PubkeyCantList[] = {
    INDEX_OPT_EXPORT_STAPLED,
    INDEX_OPT_EXPORT,
    INDEX_OPT_EXPORT_CHAIN, NO_EQUIVALENT };
/** Compiled in flag settings for the export-pubkey option */
#define EXPORT_PUBKEY_FLAGS     (OPTST_DISABLED)

/**
 *  info option description:
 */
/** Descriptive text for the info option */
#define INFO_DESC      (p11tool_opt_strs+2198)
/** Upper-cased name for the info option */
#define INFO_NAME      (p11tool_opt_strs+2249)
/** Name string for the info option */
#define INFO_name      (p11tool_opt_strs+2254)
/** Compiled in flag settings for the info option */
#define INFO_FLAGS     (OPTST_DISABLED)

/**
 *  trusted option description:
 */
/** Descriptive text for the trusted option */
#define TRUSTED_DESC    (p11tool_opt_strs+2259)
#define TRUSTED_NAME    NULL
/** Unmodified name string for the trusted option */
#define TRUSTED_name    (p11tool_opt_strs+2298)
/** Compiled in flag settings for the trusted option */
#define TRUSTED_FLAGS     (MARK_TRUSTED_FLAGS | OPTST_ALIAS)

/**
 *  distrusted option description:
 */
/** Descriptive text for the distrusted option */
#define DISTRUSTED_DESC    (p11tool_opt_strs+2306)
#define DISTRUSTED_NAME    NULL
/** Unmodified name string for the distrusted option */
#define DISTRUSTED_name    (p11tool_opt_strs+2348)
/** Compiled in flag settings for the distrusted option */
#define DISTRUSTED_FLAGS     (MARK_DISTRUSTED_FLAGS | OPTST_ALIAS)

/**
 *  keygen_related_options option description:
 */
/** keygen_related_options option separation text */
#define KEYGEN_RELATED_OPTIONS_DESC      (p11tool_opt_strs+2359)
#define KEYGEN_RELATED_OPTIONS_FLAGS     (OPTST_DOCUMENT | OPTST_NO_INIT)

/**
 *  generate-privkey option description:
 */
/** Descriptive text for the generate-privkey option */
#define GENERATE_PRIVKEY_DESC      (p11tool_opt_strs+2375)
/** Upper-cased name for the generate-privkey option */
#define GENERATE_PRIVKEY_NAME      (p11tool_opt_strs+2422)
/** Name string for the generate-privkey option */
#define GENERATE_PRIVKEY_name      (p11tool_opt_strs+2439)
/** Compiled in flag settings for the generate-privkey option */
#define GENERATE_PRIVKEY_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  generate-rsa option description:
 */
/** Descriptive text for the generate-rsa option */
#define GENERATE_RSA_DESC      (p11tool_opt_strs+2456)
/** Upper-cased name for the generate-rsa option */
#define GENERATE_RSA_NAME      (p11tool_opt_strs+2509)
/** Name string for the generate-rsa option */
#define GENERATE_RSA_name      (p11tool_opt_strs+2522)
/** Compiled in flag settings for the generate-rsa option */
#define GENERATE_RSA_FLAGS     (OPTST_DISABLED | OPTST_DEPRECATED)

/**
 *  generate-dsa option description:
 */
/** Descriptive text for the generate-dsa option */
#define GENERATE_DSA_DESC      (p11tool_opt_strs+2535)
/** Upper-cased name for the generate-dsa option */
#define GENERATE_DSA_NAME      (p11tool_opt_strs+2587)
/** Name string for the generate-dsa option */
#define GENERATE_DSA_name      (p11tool_opt_strs+2600)
/** Compiled in flag settings for the generate-dsa option */
#define GENERATE_DSA_FLAGS     (OPTST_DISABLED | OPTST_DEPRECATED)

/**
 *  generate-ecc option description:
 */
/** Descriptive text for the generate-ecc option */
#define GENERATE_ECC_DESC      (p11tool_opt_strs+2613)
/** Upper-cased name for the generate-ecc option */
#define GENERATE_ECC_NAME      (p11tool_opt_strs+2668)
/** Name string for the generate-ecc option */
#define GENERATE_ECC_name      (p11tool_opt_strs+2681)
/** Compiled in flag settings for the generate-ecc option */
#define GENERATE_ECC_FLAGS     (OPTST_DISABLED | OPTST_DEPRECATED)

/**
 *  bits option description:
 */
/** Descriptive text for the bits option */
#define BITS_DESC      (p11tool_opt_strs+2694)
/** Upper-cased name for the bits option */
#define BITS_NAME      (p11tool_opt_strs+2742)
/** Name string for the bits option */
#define BITS_name      (p11tool_opt_strs+2747)
/** Compiled in flag settings for the bits option */
#define BITS_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_NUMERIC))

/**
 *  curve option description:
 */
/** Descriptive text for the curve option */
#define CURVE_DESC      (p11tool_opt_strs+2752)
/** Upper-cased name for the curve option */
#define CURVE_NAME      (p11tool_opt_strs+2797)
/** Name string for the curve option */
#define CURVE_name      (p11tool_opt_strs+2803)
/** Compiled in flag settings for the curve option */
#define CURVE_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  sec-param option description:
 */
/** Descriptive text for the sec-param option */
#define SEC_PARAM_DESC      (p11tool_opt_strs+2809)
/** Upper-cased name for the sec-param option */
#define SEC_PARAM_NAME      (p11tool_opt_strs+2836)
/** Name string for the sec-param option */
#define SEC_PARAM_name      (p11tool_opt_strs+2846)
/** Compiled in flag settings for the sec-param option */
#define SEC_PARAM_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  write_object_related_options option description:
 */
/** write_object_related_options option separation text */
#define WRITE_OBJECT_RELATED_OPTIONS_DESC      (p11tool_opt_strs+2856)
#define WRITE_OBJECT_RELATED_OPTIONS_FLAGS     (OPTST_DOCUMENT | OPTST_NO_INIT)

/**
 *  set-id option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the set-id option */
#define SET_ID_DESC      (p11tool_opt_strs+2873)
/** Upper-cased name for the set-id option */
#define SET_ID_NAME      (p11tool_opt_strs+2933)
/** Name string for the set-id option */
#define SET_ID_name      (p11tool_opt_strs+2940)
/** Other options that appear in conjunction with the set-id option */
static int const aSet_IdCantList[] = {
    INDEX_OPT_WRITE, NO_EQUIVALENT };
/** Compiled in flag settings for the set-id option */
#define SET_ID_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  set-label option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the set-label option */
#define SET_LABEL_DESC      (p11tool_opt_strs+2947)
/** Upper-cased name for the set-label option */
#define SET_LABEL_NAME      (p11tool_opt_strs+3001)
/** Name string for the set-label option */
#define SET_LABEL_name      (p11tool_opt_strs+3011)
/** Other options that appear in conjunction with the set-label option */
static int const aSet_LabelCantList[] = {
    INDEX_OPT_WRITE,
    INDEX_OPT_SET_ID, NO_EQUIVALENT };
/** Compiled in flag settings for the set-label option */
#define SET_LABEL_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  write option description:
 */
/** Descriptive text for the write option */
#define WRITE_DESC      (p11tool_opt_strs+3021)
/** Upper-cased name for the write option */
#define WRITE_NAME      (p11tool_opt_strs+3067)
/** Name string for the write option */
#define WRITE_name      (p11tool_opt_strs+3073)
/** Compiled in flag settings for the write option */
#define WRITE_FLAGS     (OPTST_DISABLED)

/**
 *  delete option description:
 */
/** Descriptive text for the delete option */
#define DELETE_DESC      (p11tool_opt_strs+3079)
/** Upper-cased name for the delete option */
#define DELETE_NAME      (p11tool_opt_strs+3131)
/** Name string for the delete option */
#define DELETE_name      (p11tool_opt_strs+3138)
/** Compiled in flag settings for the delete option */
#define DELETE_FLAGS     (OPTST_DISABLED)

/**
 *  label option description:
 */
/** Descriptive text for the label option */
#define LABEL_DESC      (p11tool_opt_strs+3145)
/** Upper-cased name for the label option */
#define LABEL_NAME      (p11tool_opt_strs+3182)
/** Name string for the label option */
#define LABEL_name      (p11tool_opt_strs+3188)
/** Compiled in flag settings for the label option */
#define LABEL_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  id option description:
 */
/** Descriptive text for the id option */
#define ID_DESC      (p11tool_opt_strs+3194)
/** Upper-cased name for the id option */
#define ID_NAME      (p11tool_opt_strs+3229)
/** Name string for the id option */
#define ID_name      (p11tool_opt_strs+3232)
/** Compiled in flag settings for the id option */
#define ID_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  mark-wrap option description:
 */
/** Descriptive text for the mark-wrap option */
#define MARK_WRAP_DESC      (p11tool_opt_strs+3235)
/** Upper-cased name for the mark-wrap option */
#define MARK_WRAP_NAME      (p11tool_opt_strs+3280)
/** disablement name for the mark-wrap option */
#define NOT_MARK_WRAP_name  (p11tool_opt_strs+3290)
/** disablement prefix for the mark-wrap option */
#define NOT_MARK_WRAP_PFX   (p11tool_opt_strs+3303)
/** Name string for the mark-wrap option */
#define MARK_WRAP_name      (NOT_MARK_WRAP_name + 3)
/** Compiled in flag settings for the mark-wrap option */
#define MARK_WRAP_FLAGS     (OPTST_DISABLED)

/**
 *  mark-trusted option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the mark-trusted option */
#define MARK_TRUSTED_DESC      (p11tool_opt_strs+3306)
/** Upper-cased name for the mark-trusted option */
#define MARK_TRUSTED_NAME      (p11tool_opt_strs+3348)
/** disablement name for the mark-trusted option */
#define NOT_MARK_TRUSTED_name  (p11tool_opt_strs+3361)
/** disablement prefix for the mark-trusted option */
#define NOT_MARK_TRUSTED_PFX   (p11tool_opt_strs+3303)
/** Name string for the mark-trusted option */
#define MARK_TRUSTED_name      (NOT_MARK_TRUSTED_name + 3)
/** Other options that appear in conjunction with the mark-trusted option */
static int const aMark_TrustedCantList[] = {
    INDEX_OPT_MARK_DISTRUSTED, NO_EQUIVALENT };
/** Compiled in flag settings for the mark-trusted option */
#define MARK_TRUSTED_FLAGS     (OPTST_DISABLED)

/**
 *  mark-distrusted option description with
 *  "Must also have options" and "Incompatible options":
 */
/** Descriptive text for the mark-distrusted option */
#define MARK_DISTRUSTED_DESC      (p11tool_opt_strs+3377)
/** Upper-cased name for the mark-distrusted option */
#define MARK_DISTRUSTED_NAME      (p11tool_opt_strs+3457)
/** Name string for the mark-distrusted option */
#define MARK_DISTRUSTED_name      (p11tool_opt_strs+3473)
/** Other options that appear in conjunction with the mark-distrusted option */
static int const aMark_DistrustedCantList[] = {
    INDEX_OPT_MARK_TRUSTED, NO_EQUIVALENT };
/** Compiled in flag settings for the mark-distrusted option */
#define MARK_DISTRUSTED_FLAGS     (OPTST_DISABLED)

/**
 *  mark-decrypt option description:
 */
/** Descriptive text for the mark-decrypt option */
#define MARK_DECRYPT_DESC      (p11tool_opt_strs+3489)
/** Upper-cased name for the mark-decrypt option */
#define MARK_DECRYPT_NAME      (p11tool_opt_strs+3535)
/** disablement name for the mark-decrypt option */
#define NOT_MARK_DECRYPT_name  (p11tool_opt_strs+3548)
/** disablement prefix for the mark-decrypt option */
#define NOT_MARK_DECRYPT_PFX   (p11tool_opt_strs+3303)
/** Name string for the mark-decrypt option */
#define MARK_DECRYPT_name      (NOT_MARK_DECRYPT_name + 3)
/** Compiled in flag settings for the mark-decrypt option */
#define MARK_DECRYPT_FLAGS     (OPTST_DISABLED)

/**
 *  mark-sign option description:
 */
/** Descriptive text for the mark-sign option */
#define MARK_SIGN_DESC      (p11tool_opt_strs+3564)
/** Upper-cased name for the mark-sign option */
#define MARK_SIGN_NAME      (p11tool_opt_strs+3620)
/** disablement name for the mark-sign option */
#define NOT_MARK_SIGN_name  (p11tool_opt_strs+3630)
/** disablement prefix for the mark-sign option */
#define NOT_MARK_SIGN_PFX   (p11tool_opt_strs+3303)
/** Name string for the mark-sign option */
#define MARK_SIGN_name      (NOT_MARK_SIGN_name + 3)
/** Compiled in flag settings for the mark-sign option */
#define MARK_SIGN_FLAGS     (OPTST_DISABLED)

/**
 *  mark-ca option description:
 */
/** Descriptive text for the mark-ca option */
#define MARK_CA_DESC      (p11tool_opt_strs+3643)
/** Upper-cased name for the mark-ca option */
#define MARK_CA_NAME      (p11tool_opt_strs+3682)
/** disablement name for the mark-ca option */
#define NOT_MARK_CA_name  (p11tool_opt_strs+3690)
/** disablement prefix for the mark-ca option */
#define NOT_MARK_CA_PFX   (p11tool_opt_strs+3303)
/** Name string for the mark-ca option */
#define MARK_CA_name      (NOT_MARK_CA_name + 3)
/** Compiled in flag settings for the mark-ca option */
#define MARK_CA_FLAGS     (OPTST_DISABLED)

/**
 *  mark-private option description:
 */
/** Descriptive text for the mark-private option */
#define MARK_PRIVATE_DESC      (p11tool_opt_strs+3701)
/** Upper-cased name for the mark-private option */
#define MARK_PRIVATE_NAME      (p11tool_opt_strs+3743)
/** disablement name for the mark-private option */
#define NOT_MARK_PRIVATE_name  (p11tool_opt_strs+3756)
/** disablement prefix for the mark-private option */
#define NOT_MARK_PRIVATE_PFX   (p11tool_opt_strs+3303)
/** Name string for the mark-private option */
#define MARK_PRIVATE_name      (NOT_MARK_PRIVATE_name + 3)
/** Compiled in flag settings for the mark-private option */
#define MARK_PRIVATE_FLAGS     (OPTST_DISABLED)

/**
 *  ca option description:
 */
/** Descriptive text for the ca option */
#define CA_DESC    (p11tool_opt_strs+3772)
#define CA_NAME    NULL
/** Unmodified name string for the ca option */
#define CA_name    (p11tool_opt_strs+3806)
/** Compiled in flag settings for the ca option */
#define CA_FLAGS     (MARK_CA_FLAGS | OPTST_ALIAS)

/**
 *  private option description:
 */
/** Descriptive text for the private option */
#define PRIVATE_DESC    (p11tool_opt_strs+3809)
#define PRIVATE_NAME    NULL
/** Unmodified name string for the private option */
#define PRIVATE_name    (p11tool_opt_strs+3848)
/** Compiled in flag settings for the private option */
#define PRIVATE_FLAGS     (MARK_PRIVATE_FLAGS | OPTST_ALIAS)

/**
 *  secret-key option description:
 */
/** Descriptive text for the secret-key option */
#define SECRET_KEY_DESC      (p11tool_opt_strs+3856)
/** Upper-cased name for the secret-key option */
#define SECRET_KEY_NAME      (p11tool_opt_strs+3889)
/** Name string for the secret-key option */
#define SECRET_KEY_name      (p11tool_opt_strs+3900)
/** Compiled in flag settings for the secret-key option */
#define SECRET_KEY_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  load-privkey option description:
 */
/** Descriptive text for the load-privkey option */
#define LOAD_PRIVKEY_DESC      (p11tool_opt_strs+3911)
/** Upper-cased name for the load-privkey option */
#define LOAD_PRIVKEY_NAME      (p11tool_opt_strs+3935)
/** Name string for the load-privkey option */
#define LOAD_PRIVKEY_name      (p11tool_opt_strs+3948)
/** Compiled in flag settings for the load-privkey option */
#define LOAD_PRIVKEY_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_FILE))

/**
 *  load-pubkey option description:
 */
/** Descriptive text for the load-pubkey option */
#define LOAD_PUBKEY_DESC      (p11tool_opt_strs+3961)
/** Upper-cased name for the load-pubkey option */
#define LOAD_PUBKEY_NAME      (p11tool_opt_strs+3984)
/** Name string for the load-pubkey option */
#define LOAD_PUBKEY_name      (p11tool_opt_strs+3996)
/** Compiled in flag settings for the load-pubkey option */
#define LOAD_PUBKEY_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_FILE))

/**
 *  load-certificate option description:
 */
/** Descriptive text for the load-certificate option */
#define LOAD_CERTIFICATE_DESC      (p11tool_opt_strs+4008)
/** Upper-cased name for the load-certificate option */
#define LOAD_CERTIFICATE_NAME      (p11tool_opt_strs+4032)
/** Name string for the load-certificate option */
#define LOAD_CERTIFICATE_name      (p11tool_opt_strs+4049)
/** Compiled in flag settings for the load-certificate option */
#define LOAD_CERTIFICATE_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_FILE))

/**
 *  other_options option description:
 */
/** other_options option separation text */
#define OTHER_OPTIONS_DESC      (p11tool_opt_strs+4066)
#define OTHER_OPTIONS_FLAGS     (OPTST_DOCUMENT | OPTST_NO_INIT)

/**
 *  debug option description:
 */
/** Descriptive text for the debug option */
#define DEBUG_DESC      (p11tool_opt_strs+4081)
/** Upper-cased name for the debug option */
#define DEBUG_NAME      (p11tool_opt_strs+4098)
/** Name string for the debug option */
#define DEBUG_name      (p11tool_opt_strs+4104)
/** Compiled in flag settings for the debug option */
#define DEBUG_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_NUMERIC))

/**
 *  outfile option description:
 */
/** Descriptive text for the outfile option */
#define OUTFILE_DESC      (p11tool_opt_strs+4110)
/** Upper-cased name for the outfile option */
#define OUTFILE_NAME      (p11tool_opt_strs+4122)
/** Name string for the outfile option */
#define OUTFILE_name      (p11tool_opt_strs+4130)
/** Compiled in flag settings for the outfile option */
#define OUTFILE_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  login option description:
 */
/** Descriptive text for the login option */
#define LOGIN_DESC      (p11tool_opt_strs+4138)
/** Upper-cased name for the login option */
#define LOGIN_NAME      (p11tool_opt_strs+4166)
/** disablement name for the login option */
#define NOT_LOGIN_name  (p11tool_opt_strs+4172)
/** disablement prefix for the login option */
#define NOT_LOGIN_PFX   (p11tool_opt_strs+3303)
/** Name string for the login option */
#define LOGIN_name      (NOT_LOGIN_name + 3)
/** Compiled in flag settings for the login option */
#define LOGIN_FLAGS     (OPTST_DISABLED)

/**
 *  so-login option description:
 */
/** Descriptive text for the so-login option */
#define SO_LOGIN_DESC      (p11tool_opt_strs+4181)
/** Upper-cased name for the so-login option */
#define SO_LOGIN_NAME      (p11tool_opt_strs+4219)
/** disablement name for the so-login option */
#define NOT_SO_LOGIN_name  (p11tool_opt_strs+4228)
/** disablement prefix for the so-login option */
#define NOT_SO_LOGIN_PFX   (p11tool_opt_strs+3303)
/** Name string for the so-login option */
#define SO_LOGIN_name      (NOT_SO_LOGIN_name + 3)
/** Compiled in flag settings for the so-login option */
#define SO_LOGIN_FLAGS     (OPTST_DISABLED)

/**
 *  admin-login option description:
 */
/** Descriptive text for the admin-login option */
#define ADMIN_LOGIN_DESC    (p11tool_opt_strs+4240)
#define ADMIN_LOGIN_NAME    NULL
/** Unmodified name string for the admin-login option */
#define ADMIN_LOGIN_name    (p11tool_opt_strs+4275)
/** Compiled in flag settings for the admin-login option */
#define ADMIN_LOGIN_FLAGS     (SO_LOGIN_FLAGS | OPTST_ALIAS)

/**
 *  test-sign option description:
 */
/** Descriptive text for the test-sign option */
#define TEST_SIGN_DESC      (p11tool_opt_strs+4287)
/** Upper-cased name for the test-sign option */
#define TEST_SIGN_NAME      (p11tool_opt_strs+4340)
/** Name string for the test-sign option */
#define TEST_SIGN_name      (p11tool_opt_strs+4350)
/** Compiled in flag settings for the test-sign option */
#define TEST_SIGN_FLAGS     (OPTST_DISABLED)

/**
 *  sign-params option description:
 */
/** Descriptive text for the sign-params option */
#define SIGN_PARAMS_DESC      (p11tool_opt_strs+4360)
/** Upper-cased name for the sign-params option */
#define SIGN_PARAMS_NAME      (p11tool_opt_strs+4401)
/** Name string for the sign-params option */
#define SIGN_PARAMS_name      (p11tool_opt_strs+4413)
/** Compiled in flag settings for the sign-params option */
#define SIGN_PARAMS_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  hash option description:
 */
/** Descriptive text for the hash option */
#define HASH_DESC      (p11tool_opt_strs+4425)
/** Upper-cased name for the hash option */
#define HASH_NAME      (p11tool_opt_strs+4459)
/** Name string for the hash option */
#define HASH_name      (p11tool_opt_strs+4464)
/** Compiled in flag settings for the hash option */
#define HASH_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  generate-random option description:
 */
/** Descriptive text for the generate-random option */
#define GENERATE_RANDOM_DESC      (p11tool_opt_strs+4469)
/** Upper-cased name for the generate-random option */
#define GENERATE_RANDOM_NAME      (p11tool_opt_strs+4490)
/** Name string for the generate-random option */
#define GENERATE_RANDOM_name      (p11tool_opt_strs+4506)
/** Compiled in flag settings for the generate-random option */
#define GENERATE_RANDOM_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_NUMERIC))

/**
 *  pkcs8 option description:
 */
/** Descriptive text for the pkcs8 option */
#define PKCS8_DESC      (p11tool_opt_strs+4522)
/** Upper-cased name for the pkcs8 option */
#define PKCS8_NAME      (p11tool_opt_strs+4558)
/** Name string for the pkcs8 option */
#define PKCS8_name      (p11tool_opt_strs+4564)
/** Compiled in flag settings for the pkcs8 option */
#define PKCS8_FLAGS     (OPTST_DISABLED)

/**
 *  inder option description:
 */
/** Descriptive text for the inder option */
#define INDER_DESC      (p11tool_opt_strs+4570)
/** Upper-cased name for the inder option */
#define INDER_NAME      (p11tool_opt_strs+4599)
/** disablement name for the inder option */
#define NOT_INDER_name  (p11tool_opt_strs+4605)
/** disablement prefix for the inder option */
#define NOT_INDER_PFX   (p11tool_opt_strs+3303)
/** Name string for the inder option */
#define INDER_name      (NOT_INDER_name + 3)
/** Compiled in flag settings for the inder option */
#define INDER_FLAGS     (OPTST_DISABLED)

/**
 *  inraw option description:
 */
/** Descriptive text for the inraw option */
#define INRAW_DESC    (p11tool_opt_strs+4614)
#define INRAW_NAME    NULL
/** Unmodified name string for the inraw option */
#define INRAW_name    (p11tool_opt_strs+4646)
/** Compiled in flag settings for the inraw option */
#define INRAW_FLAGS     (INDER_FLAGS | OPTST_ALIAS)

/**
 *  outder option description:
 */
/** Descriptive text for the outder option */
#define OUTDER_DESC      (p11tool_opt_strs+4652)
/** Upper-cased name for the outder option */
#define OUTDER_NAME      (p11tool_opt_strs+4724)
/** disablement name for the outder option */
#define NOT_OUTDER_name  (p11tool_opt_strs+4731)
/** disablement prefix for the outder option */
#define NOT_OUTDER_PFX   (p11tool_opt_strs+3303)
/** Name string for the outder option */
#define OUTDER_name      (NOT_OUTDER_name + 3)
/** Compiled in flag settings for the outder option */
#define OUTDER_FLAGS     (OPTST_DISABLED)

/**
 *  outraw option description:
 */
/** Descriptive text for the outraw option */
#define OUTRAW_DESC    (p11tool_opt_strs+4741)
#define OUTRAW_NAME    NULL
/** Unmodified name string for the outraw option */
#define OUTRAW_name    (p11tool_opt_strs+4774)
/** Compiled in flag settings for the outraw option */
#define OUTRAW_FLAGS     (OUTDER_FLAGS | OPTST_ALIAS)

/**
 *  provider option description:
 */
/** Descriptive text for the provider option */
#define PROVIDER_DESC      (p11tool_opt_strs+4781)
/** Upper-cased name for the provider option */
#define PROVIDER_NAME      (p11tool_opt_strs+4819)
/** Name string for the provider option */
#define PROVIDER_name      (p11tool_opt_strs+4828)
/** Compiled in flag settings for the provider option */
#define PROVIDER_FLAGS     (OPTST_DISABLED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_FILE))

/**
 *  provider-opts option description:
 */
/** Descriptive text for the provider-opts option */
#define PROVIDER_OPTS_DESC      (p11tool_opt_strs+4837)
/** Upper-cased name for the provider-opts option */
#define PROVIDER_OPTS_NAME      (p11tool_opt_strs+4903)
/** Name string for the provider-opts option */
#define PROVIDER_OPTS_name      (p11tool_opt_strs+4917)
/** Compiled in flag settings for the provider-opts option */
#define PROVIDER_OPTS_FLAGS     (OPTST_DISABLED | OPTST_DEPRECATED \
        | OPTST_SET_ARGTYPE(OPARG_TYPE_STRING))

/**
 *  detailed-url option description:
 */
/** Descriptive text for the detailed-url option */
#define DETAILED_URL_DESC      (p11tool_opt_strs+4931)
/** Upper-cased name for the detailed-url option */
#define DETAILED_URL_NAME      (p11tool_opt_strs+4951)
/** disablement name for the detailed-url option */
#define NOT_DETAILED_URL_name  (p11tool_opt_strs+4964)
/** disablement prefix for the detailed-url option */
#define NOT_DETAILED_URL_PFX   (p11tool_opt_strs+3303)
/** Name string for the detailed-url option */
#define DETAILED_URL_name      (NOT_DETAILED_URL_name + 3)
/** Compiled in flag settings for the detailed-url option */
#define DETAILED_URL_FLAGS     (OPTST_DISABLED)

/**
 *  only-urls option description:
 */
/** Descriptive text for the only-urls option */
#define ONLY_URLS_DESC      (p11tool_opt_strs+4980)
/** Upper-cased name for the only-urls option */
#define ONLY_URLS_NAME      (p11tool_opt_strs+5024)
/** Name string for the only-urls option */
#define ONLY_URLS_name      (p11tool_opt_strs+5034)
/** Compiled in flag settings for the only-urls option */
#define ONLY_URLS_FLAGS     (OPTST_DISABLED)

/**
 *  batch option description:
 */
/** Descriptive text for the batch option */
#define BATCH_DESC      (p11tool_opt_strs+5044)
/** Upper-cased name for the batch option */
#define BATCH_NAME      (p11tool_opt_strs+5082)
/** Name string for the batch option */
#define BATCH_name      (p11tool_opt_strs+5088)
/** Compiled in flag settings for the batch option */
#define BATCH_FLAGS     (OPTST_DISABLED)

/*
 *  Help/More_Help/Version option descriptions:
 */
#define HELP_DESC       (p11tool_opt_strs+5094)
#define HELP_name       (p11tool_opt_strs+5138)
#ifdef HAVE_WORKING_FORK
#define MORE_HELP_DESC  (p11tool_opt_strs+5143)
#define MORE_HELP_name  (p11tool_opt_strs+5188)
#define MORE_HELP_FLAGS (OPTST_IMM | OPTST_NO_INIT)
#else
#define MORE_HELP_DESC  HELP_DESC
#define MORE_HELP_name  HELP_name
#define MORE_HELP_FLAGS (OPTST_OMITTED | OPTST_NO_INIT)
#endif
#ifdef NO_OPTIONAL_OPT_ARGS
#  define VER_FLAGS     (OPTST_IMM | OPTST_NO_INIT)
#else
#  define VER_FLAGS     (OPTST_SET_ARGTYPE(OPARG_TYPE_STRING) | \
                         OPTST_ARG_OPTIONAL | OPTST_IMM | OPTST_NO_INIT)
#endif
#define VER_DESC        (p11tool_opt_strs+5198)
#define VER_name        (p11tool_opt_strs+5234)
/**
 *  Declare option callback procedures
 */
extern tOptProc
    optionBooleanVal,   optionNestedVal,    optionNumericVal,
    optionPagedUsage,   optionPrintVersion, optionResetOpt,
    optionStackArg,     optionTimeDate,     optionTimeVal,
    optionUnstackArg,   optionVendorOption;
static tOptProc
    doOptAdmin_Login,      doOptCa,               doOptDebug,
    doOptDistrusted,       doOptInraw,            doOptList_Keys,
    doOptList_Privkeys,    doOptLoad_Certificate, doOptLoad_Privkey,
    doOptLoad_Pubkey,      doOptOutraw,           doOptPrivate,
    doOptProvider,         doOptTrusted,          doUsageOpt;
#define VER_PROC        optionPrintVersion

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 *  Define the p11tool Option Descriptions.
 * This is an array of OPTION_CT entries, one for each
 * option that the p11tool program responds to.
 */
static tOptDesc optDesc[OPTION_CT] = {
  {  /* entry idx, value */ 0, 0,
     /* equiv idx, value */ 0, 0,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 0, 0,
     /* opt state flags  */ TOKEN_RELATED_OPTIONS_FLAGS, 0,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ TOKEN_RELATED_OPTIONS_DESC, NULL, NULL,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 1, VALUE_OPT_LIST_TOKENS,
     /* equiv idx, value */ 1, VALUE_OPT_LIST_TOKENS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_TOKENS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-tokens */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_TOKENS_DESC, LIST_TOKENS_NAME, LIST_TOKENS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 2, VALUE_OPT_LIST_TOKEN_URLS,
     /* equiv idx, value */ 2, VALUE_OPT_LIST_TOKEN_URLS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_TOKEN_URLS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-token-urls */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_TOKEN_URLS_DESC, LIST_TOKEN_URLS_NAME, LIST_TOKEN_URLS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 3, VALUE_OPT_LIST_MECHANISMS,
     /* equiv idx, value */ 3, VALUE_OPT_LIST_MECHANISMS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_MECHANISMS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-mechanisms */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_MECHANISMS_DESC, LIST_MECHANISMS_NAME, LIST_MECHANISMS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 4, VALUE_OPT_INITIALIZE,
     /* equiv idx, value */ 4, VALUE_OPT_INITIALIZE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ INITIALIZE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --initialize */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ INITIALIZE_DESC, INITIALIZE_NAME, INITIALIZE_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 5, VALUE_OPT_INITIALIZE_PIN,
     /* equiv idx, value */ 5, VALUE_OPT_INITIALIZE_PIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ INITIALIZE_PIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --initialize-pin */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ INITIALIZE_PIN_DESC, INITIALIZE_PIN_NAME, INITIALIZE_PIN_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 6, VALUE_OPT_INITIALIZE_SO_PIN,
     /* equiv idx, value */ 6, VALUE_OPT_INITIALIZE_SO_PIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ INITIALIZE_SO_PIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --initialize-so-pin */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ INITIALIZE_SO_PIN_DESC, INITIALIZE_SO_PIN_NAME, INITIALIZE_SO_PIN_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 7, VALUE_OPT_SET_PIN,
     /* equiv idx, value */ 7, VALUE_OPT_SET_PIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SET_PIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --set-pin */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SET_PIN_DESC, SET_PIN_NAME, SET_PIN_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 8, VALUE_OPT_SET_SO_PIN,
     /* equiv idx, value */ 8, VALUE_OPT_SET_SO_PIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SET_SO_PIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --set-so-pin */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SET_SO_PIN_DESC, SET_SO_PIN_NAME, SET_SO_PIN_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 0, 0,
     /* equiv idx, value */ 0, 0,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 0, 0,
     /* opt state flags  */ OBJECT_LIST_RELATED_OPTIONS_FLAGS, 0,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ OBJECT_LIST_RELATED_OPTIONS_DESC, NULL, NULL,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 10, VALUE_OPT_LIST_ALL,
     /* equiv idx, value */ 10, VALUE_OPT_LIST_ALL,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_ALL_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-all */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_ALL_DESC, LIST_ALL_NAME, LIST_ALL_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 11, VALUE_OPT_LIST_ALL_CERTS,
     /* equiv idx, value */ 11, VALUE_OPT_LIST_ALL_CERTS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_ALL_CERTS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-all-certs */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_ALL_CERTS_DESC, LIST_ALL_CERTS_NAME, LIST_ALL_CERTS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 12, VALUE_OPT_LIST_CERTS,
     /* equiv idx, value */ 12, VALUE_OPT_LIST_CERTS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_CERTS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-certs */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_CERTS_DESC, LIST_CERTS_NAME, LIST_CERTS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 13, VALUE_OPT_LIST_ALL_PRIVKEYS,
     /* equiv idx, value */ 13, VALUE_OPT_LIST_ALL_PRIVKEYS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_ALL_PRIVKEYS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-all-privkeys */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_ALL_PRIVKEYS_DESC, LIST_ALL_PRIVKEYS_NAME, LIST_ALL_PRIVKEYS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 14, VALUE_OPT_LIST_PRIVKEYS,
     /* equiv idx, value */ 14, VALUE_OPT_LIST_PRIVKEYS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_PRIVKEYS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-privkeys */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptList_Privkeys,
     /* desc, NAME, name */ LIST_PRIVKEYS_DESC, LIST_PRIVKEYS_NAME, LIST_PRIVKEYS_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 15, VALUE_OPT_LIST_KEYS,
     /* equiv idx, value */ 15, VALUE_OPT_LIST_KEYS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_KEYS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-keys */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptList_Keys,
     /* desc, NAME, name */ LIST_KEYS_DESC, LIST_KEYS_NAME, LIST_KEYS_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 16, VALUE_OPT_LIST_ALL_TRUSTED,
     /* equiv idx, value */ 16, VALUE_OPT_LIST_ALL_TRUSTED,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LIST_ALL_TRUSTED_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --list-all-trusted */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LIST_ALL_TRUSTED_DESC, LIST_ALL_TRUSTED_NAME, LIST_ALL_TRUSTED_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 17, VALUE_OPT_EXPORT,
     /* equiv idx, value */ 17, VALUE_OPT_EXPORT,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ EXPORT_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --export */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aExportCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ EXPORT_DESC, EXPORT_NAME, EXPORT_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 18, VALUE_OPT_EXPORT_STAPLED,
     /* equiv idx, value */ 18, VALUE_OPT_EXPORT_STAPLED,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ EXPORT_STAPLED_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --export-stapled */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aExport_StapledCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ EXPORT_STAPLED_DESC, EXPORT_STAPLED_NAME, EXPORT_STAPLED_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 19, VALUE_OPT_EXPORT_CHAIN,
     /* equiv idx, value */ 19, VALUE_OPT_EXPORT_CHAIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ EXPORT_CHAIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --export-chain */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aExport_ChainCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ EXPORT_CHAIN_DESC, EXPORT_CHAIN_NAME, EXPORT_CHAIN_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 20, VALUE_OPT_EXPORT_PUBKEY,
     /* equiv idx, value */ 20, VALUE_OPT_EXPORT_PUBKEY,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ EXPORT_PUBKEY_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --export-pubkey */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aExport_PubkeyCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ EXPORT_PUBKEY_DESC, EXPORT_PUBKEY_NAME, EXPORT_PUBKEY_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 21, VALUE_OPT_INFO,
     /* equiv idx, value */ 21, VALUE_OPT_INFO,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ INFO_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --info */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ INFO_DESC, INFO_NAME, INFO_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 22, VALUE_OPT_TRUSTED,
     /* equiv idx, value */ 22, VALUE_OPT_TRUSTED,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ TRUSTED_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --trusted */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptTrusted,
     /* desc, NAME, name */ TRUSTED_DESC, TRUSTED_NAME, TRUSTED_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 23, VALUE_OPT_DISTRUSTED,
     /* equiv idx, value */ 23, VALUE_OPT_DISTRUSTED,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ DISTRUSTED_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --distrusted */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptDistrusted,
     /* desc, NAME, name */ DISTRUSTED_DESC, DISTRUSTED_NAME, DISTRUSTED_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 0, 0,
     /* equiv idx, value */ 0, 0,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 0, 0,
     /* opt state flags  */ KEYGEN_RELATED_OPTIONS_FLAGS, 0,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ KEYGEN_RELATED_OPTIONS_DESC, NULL, NULL,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 25, VALUE_OPT_GENERATE_PRIVKEY,
     /* equiv idx, value */ 25, VALUE_OPT_GENERATE_PRIVKEY,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ GENERATE_PRIVKEY_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --generate-privkey */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ GENERATE_PRIVKEY_DESC, GENERATE_PRIVKEY_NAME, GENERATE_PRIVKEY_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 26, VALUE_OPT_GENERATE_RSA,
     /* equiv idx, value */ 26, VALUE_OPT_GENERATE_RSA,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ GENERATE_RSA_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --generate-rsa */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ GENERATE_RSA_DESC, GENERATE_RSA_NAME, GENERATE_RSA_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 27, VALUE_OPT_GENERATE_DSA,
     /* equiv idx, value */ 27, VALUE_OPT_GENERATE_DSA,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ GENERATE_DSA_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --generate-dsa */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ GENERATE_DSA_DESC, GENERATE_DSA_NAME, GENERATE_DSA_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 28, VALUE_OPT_GENERATE_ECC,
     /* equiv idx, value */ 28, VALUE_OPT_GENERATE_ECC,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ GENERATE_ECC_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --generate-ecc */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ GENERATE_ECC_DESC, GENERATE_ECC_NAME, GENERATE_ECC_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 29, VALUE_OPT_BITS,
     /* equiv idx, value */ 29, VALUE_OPT_BITS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ BITS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --bits */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ optionNumericVal,
     /* desc, NAME, name */ BITS_DESC, BITS_NAME, BITS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 30, VALUE_OPT_CURVE,
     /* equiv idx, value */ 30, VALUE_OPT_CURVE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ CURVE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --curve */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ CURVE_DESC, CURVE_NAME, CURVE_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 31, VALUE_OPT_SEC_PARAM,
     /* equiv idx, value */ 31, VALUE_OPT_SEC_PARAM,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SEC_PARAM_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --sec-param */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SEC_PARAM_DESC, SEC_PARAM_NAME, SEC_PARAM_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 0, 0,
     /* equiv idx, value */ 0, 0,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 0, 0,
     /* opt state flags  */ WRITE_OBJECT_RELATED_OPTIONS_FLAGS, 0,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ WRITE_OBJECT_RELATED_OPTIONS_DESC, NULL, NULL,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 33, VALUE_OPT_SET_ID,
     /* equiv idx, value */ 33, VALUE_OPT_SET_ID,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SET_ID_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --set-id */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aSet_IdCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SET_ID_DESC, SET_ID_NAME, SET_ID_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 34, VALUE_OPT_SET_LABEL,
     /* equiv idx, value */ 34, VALUE_OPT_SET_LABEL,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SET_LABEL_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --set-label */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aSet_LabelCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SET_LABEL_DESC, SET_LABEL_NAME, SET_LABEL_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 35, VALUE_OPT_WRITE,
     /* equiv idx, value */ 35, VALUE_OPT_WRITE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ WRITE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --write */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ WRITE_DESC, WRITE_NAME, WRITE_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 36, VALUE_OPT_DELETE,
     /* equiv idx, value */ 36, VALUE_OPT_DELETE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ DELETE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --delete */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ DELETE_DESC, DELETE_NAME, DELETE_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 37, VALUE_OPT_LABEL,
     /* equiv idx, value */ 37, VALUE_OPT_LABEL,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LABEL_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --label */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LABEL_DESC, LABEL_NAME, LABEL_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 38, VALUE_OPT_ID,
     /* equiv idx, value */ 38, VALUE_OPT_ID,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ ID_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --id */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ ID_DESC, ID_NAME, ID_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 39, VALUE_OPT_MARK_WRAP,
     /* equiv idx, value */ 39, VALUE_OPT_MARK_WRAP,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MARK_WRAP_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --mark-wrap */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ MARK_WRAP_DESC, MARK_WRAP_NAME, MARK_WRAP_name,
     /* disablement strs */ NOT_MARK_WRAP_name, NOT_MARK_WRAP_PFX },

  {  /* entry idx, value */ 40, VALUE_OPT_MARK_TRUSTED,
     /* equiv idx, value */ 40, VALUE_OPT_MARK_TRUSTED,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MARK_TRUSTED_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --mark-trusted */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aMark_TrustedCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ MARK_TRUSTED_DESC, MARK_TRUSTED_NAME, MARK_TRUSTED_name,
     /* disablement strs */ NOT_MARK_TRUSTED_name, NOT_MARK_TRUSTED_PFX },

  {  /* entry idx, value */ 41, VALUE_OPT_MARK_DISTRUSTED,
     /* equiv idx, value */ 41, VALUE_OPT_MARK_DISTRUSTED,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MARK_DISTRUSTED_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --mark-distrusted */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, aMark_DistrustedCantList,
     /* option proc      */ NULL,
     /* desc, NAME, name */ MARK_DISTRUSTED_DESC, MARK_DISTRUSTED_NAME, MARK_DISTRUSTED_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 42, VALUE_OPT_MARK_DECRYPT,
     /* equiv idx, value */ 42, VALUE_OPT_MARK_DECRYPT,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MARK_DECRYPT_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --mark-decrypt */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ MARK_DECRYPT_DESC, MARK_DECRYPT_NAME, MARK_DECRYPT_name,
     /* disablement strs */ NOT_MARK_DECRYPT_name, NOT_MARK_DECRYPT_PFX },

  {  /* entry idx, value */ 43, VALUE_OPT_MARK_SIGN,
     /* equiv idx, value */ 43, VALUE_OPT_MARK_SIGN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MARK_SIGN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --mark-sign */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ MARK_SIGN_DESC, MARK_SIGN_NAME, MARK_SIGN_name,
     /* disablement strs */ NOT_MARK_SIGN_name, NOT_MARK_SIGN_PFX },

  {  /* entry idx, value */ 44, VALUE_OPT_MARK_CA,
     /* equiv idx, value */ 44, VALUE_OPT_MARK_CA,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MARK_CA_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --mark-ca */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ MARK_CA_DESC, MARK_CA_NAME, MARK_CA_name,
     /* disablement strs */ NOT_MARK_CA_name, NOT_MARK_CA_PFX },

  {  /* entry idx, value */ 45, VALUE_OPT_MARK_PRIVATE,
     /* equiv idx, value */ 45, VALUE_OPT_MARK_PRIVATE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MARK_PRIVATE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --mark-private */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ MARK_PRIVATE_DESC, MARK_PRIVATE_NAME, MARK_PRIVATE_name,
     /* disablement strs */ NOT_MARK_PRIVATE_name, NOT_MARK_PRIVATE_PFX },

  {  /* entry idx, value */ 46, VALUE_OPT_CA,
     /* equiv idx, value */ 46, VALUE_OPT_CA,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ CA_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --ca */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptCa,
     /* desc, NAME, name */ CA_DESC, CA_NAME, CA_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 47, VALUE_OPT_PRIVATE,
     /* equiv idx, value */ 47, VALUE_OPT_PRIVATE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ PRIVATE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --private */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptPrivate,
     /* desc, NAME, name */ PRIVATE_DESC, PRIVATE_NAME, PRIVATE_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 48, VALUE_OPT_SECRET_KEY,
     /* equiv idx, value */ 48, VALUE_OPT_SECRET_KEY,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SECRET_KEY_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --secret-key */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SECRET_KEY_DESC, SECRET_KEY_NAME, SECRET_KEY_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 49, VALUE_OPT_LOAD_PRIVKEY,
     /* equiv idx, value */ 49, VALUE_OPT_LOAD_PRIVKEY,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LOAD_PRIVKEY_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --load-privkey */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptLoad_Privkey,
     /* desc, NAME, name */ LOAD_PRIVKEY_DESC, LOAD_PRIVKEY_NAME, LOAD_PRIVKEY_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 50, VALUE_OPT_LOAD_PUBKEY,
     /* equiv idx, value */ 50, VALUE_OPT_LOAD_PUBKEY,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LOAD_PUBKEY_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --load-pubkey */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptLoad_Pubkey,
     /* desc, NAME, name */ LOAD_PUBKEY_DESC, LOAD_PUBKEY_NAME, LOAD_PUBKEY_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 51, VALUE_OPT_LOAD_CERTIFICATE,
     /* equiv idx, value */ 51, VALUE_OPT_LOAD_CERTIFICATE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LOAD_CERTIFICATE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --load-certificate */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptLoad_Certificate,
     /* desc, NAME, name */ LOAD_CERTIFICATE_DESC, LOAD_CERTIFICATE_NAME, LOAD_CERTIFICATE_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 0, 0,
     /* equiv idx, value */ 0, 0,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 0, 0,
     /* opt state flags  */ OTHER_OPTIONS_FLAGS, 0,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ OTHER_OPTIONS_DESC, NULL, NULL,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 53, VALUE_OPT_DEBUG,
     /* equiv idx, value */ 53, VALUE_OPT_DEBUG,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ DEBUG_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --debug */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptDebug,
     /* desc, NAME, name */ DEBUG_DESC, DEBUG_NAME, DEBUG_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 54, VALUE_OPT_OUTFILE,
     /* equiv idx, value */ 54, VALUE_OPT_OUTFILE,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ OUTFILE_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --outfile */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ OUTFILE_DESC, OUTFILE_NAME, OUTFILE_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 55, VALUE_OPT_LOGIN,
     /* equiv idx, value */ 55, VALUE_OPT_LOGIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ LOGIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --login */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ LOGIN_DESC, LOGIN_NAME, LOGIN_name,
     /* disablement strs */ NOT_LOGIN_name, NOT_LOGIN_PFX },

  {  /* entry idx, value */ 56, VALUE_OPT_SO_LOGIN,
     /* equiv idx, value */ 56, VALUE_OPT_SO_LOGIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SO_LOGIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --so-login */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SO_LOGIN_DESC, SO_LOGIN_NAME, SO_LOGIN_name,
     /* disablement strs */ NOT_SO_LOGIN_name, NOT_SO_LOGIN_PFX },

  {  /* entry idx, value */ 57, VALUE_OPT_ADMIN_LOGIN,
     /* equiv idx, value */ 57, VALUE_OPT_ADMIN_LOGIN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ ADMIN_LOGIN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --admin-login */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptAdmin_Login,
     /* desc, NAME, name */ ADMIN_LOGIN_DESC, ADMIN_LOGIN_NAME, ADMIN_LOGIN_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 58, VALUE_OPT_TEST_SIGN,
     /* equiv idx, value */ 58, VALUE_OPT_TEST_SIGN,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ TEST_SIGN_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --test-sign */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ TEST_SIGN_DESC, TEST_SIGN_NAME, TEST_SIGN_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 59, VALUE_OPT_SIGN_PARAMS,
     /* equiv idx, value */ 59, VALUE_OPT_SIGN_PARAMS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ SIGN_PARAMS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --sign-params */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ SIGN_PARAMS_DESC, SIGN_PARAMS_NAME, SIGN_PARAMS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 60, VALUE_OPT_HASH,
     /* equiv idx, value */ 60, VALUE_OPT_HASH,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ HASH_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --hash */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ HASH_DESC, HASH_NAME, HASH_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 61, VALUE_OPT_GENERATE_RANDOM,
     /* equiv idx, value */ 61, VALUE_OPT_GENERATE_RANDOM,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ GENERATE_RANDOM_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --generate-random */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ optionNumericVal,
     /* desc, NAME, name */ GENERATE_RANDOM_DESC, GENERATE_RANDOM_NAME, GENERATE_RANDOM_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 62, VALUE_OPT_PKCS8,
     /* equiv idx, value */ 62, VALUE_OPT_PKCS8,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ PKCS8_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --pkcs8 */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ PKCS8_DESC, PKCS8_NAME, PKCS8_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 63, VALUE_OPT_INDER,
     /* equiv idx, value */ 63, VALUE_OPT_INDER,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ INDER_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --inder */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ INDER_DESC, INDER_NAME, INDER_name,
     /* disablement strs */ NOT_INDER_name, NOT_INDER_PFX },

  {  /* entry idx, value */ 64, VALUE_OPT_INRAW,
     /* equiv idx, value */ 64, VALUE_OPT_INRAW,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ INRAW_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --inraw */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptInraw,
     /* desc, NAME, name */ INRAW_DESC, INRAW_NAME, INRAW_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 65, VALUE_OPT_OUTDER,
     /* equiv idx, value */ 65, VALUE_OPT_OUTDER,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ OUTDER_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --outder */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ OUTDER_DESC, OUTDER_NAME, OUTDER_name,
     /* disablement strs */ NOT_OUTDER_name, NOT_OUTDER_PFX },

  {  /* entry idx, value */ 66, VALUE_OPT_OUTRAW,
     /* equiv idx, value */ 66, VALUE_OPT_OUTRAW,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ OUTRAW_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --outraw */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptOutraw,
     /* desc, NAME, name */ OUTRAW_DESC, OUTRAW_NAME, OUTRAW_name,
     /* disablement strs */ 0, 0 },

  {  /* entry idx, value */ 67, VALUE_OPT_PROVIDER,
     /* equiv idx, value */ 67, VALUE_OPT_PROVIDER,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ PROVIDER_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --provider */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doOptProvider,
     /* desc, NAME, name */ PROVIDER_DESC, PROVIDER_NAME, PROVIDER_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 68, VALUE_OPT_PROVIDER_OPTS,
     /* equiv idx, value */ 68, VALUE_OPT_PROVIDER_OPTS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ PROVIDER_OPTS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --provider-opts */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ PROVIDER_OPTS_DESC, PROVIDER_OPTS_NAME, PROVIDER_OPTS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 69, VALUE_OPT_DETAILED_URL,
     /* equiv idx, value */ 69, VALUE_OPT_DETAILED_URL,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ DETAILED_URL_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --detailed-url */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ DETAILED_URL_DESC, DETAILED_URL_NAME, DETAILED_URL_name,
     /* disablement strs */ NOT_DETAILED_URL_name, NOT_DETAILED_URL_PFX },

  {  /* entry idx, value */ 70, VALUE_OPT_ONLY_URLS,
     /* equiv idx, value */ 70, VALUE_OPT_ONLY_URLS,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ ONLY_URLS_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --only-urls */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ ONLY_URLS_DESC, ONLY_URLS_NAME, ONLY_URLS_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ 71, VALUE_OPT_BATCH,
     /* equiv idx, value */ 71, VALUE_OPT_BATCH,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ BATCH_FLAGS, 0,
     /* last opt argumnt */ { NULL }, /* --batch */
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ NULL,
     /* desc, NAME, name */ BATCH_DESC, BATCH_NAME, BATCH_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ INDEX_OPT_VERSION, VALUE_OPT_VERSION,
     /* equiv idx value  */ NO_EQUIVALENT, VALUE_OPT_VERSION,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ VER_FLAGS, AOUSE_VERSION,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ VER_PROC,
     /* desc, NAME, name */ VER_DESC, NULL, VER_name,
     /* disablement strs */ NULL, NULL },



  {  /* entry idx, value */ INDEX_OPT_HELP, VALUE_OPT_HELP,
     /* equiv idx value  */ NO_EQUIVALENT, VALUE_OPT_HELP,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ OPTST_IMM | OPTST_NO_INIT, AOUSE_HELP,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL, NULL,
     /* option proc      */ doUsageOpt,
     /* desc, NAME, name */ HELP_DESC, NULL, HELP_name,
     /* disablement strs */ NULL, NULL },

  {  /* entry idx, value */ INDEX_OPT_MORE_HELP, VALUE_OPT_MORE_HELP,
     /* equiv idx value  */ NO_EQUIVALENT, VALUE_OPT_MORE_HELP,
     /* equivalenced to  */ NO_EQUIVALENT,
     /* min, max, act ct */ 0, 1, 0,
     /* opt state flags  */ MORE_HELP_FLAGS, AOUSE_MORE_HELP,
     /* last opt argumnt */ { NULL },
     /* arg list/cookie  */ NULL,
     /* must/cannot opts */ NULL,  NULL,
     /* option proc      */ optionPagedUsage,
     /* desc, NAME, name */ MORE_HELP_DESC, NULL, MORE_HELP_name,
     /* disablement strs */ NULL, NULL }
};


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/** Reference to the upper cased version of p11tool. */
#define zPROGNAME       (p11tool_opt_strs+5242)
/** Reference to the title line for p11tool usage. */
#define zUsageTitle     (p11tool_opt_strs+5250)
/** There is no p11tool configuration file. */
#define zRcName         NULL
/** There are no directories to search for p11tool config files. */
#define apzHomeList     NULL
/** The p11tool program bug email address. */
#define zBugsAddr       (p11tool_opt_strs+5345)
/** Clarification/explanation of what p11tool does. */
#define zExplain        (p11tool_opt_strs+5361)
/** Extra detail explaining what p11tool does. */
#define zDetail         (p11tool_opt_strs+5363)
/** The full version string for p11tool. */
#define zFullVersion    (p11tool_opt_strs+5905)
/* extracted from optcode.tlib near line 342 */

#if defined(ENABLE_NLS)
# define OPTPROC_BASE OPTPROC_TRANSLATE | OPTPROC_NXLAT_OPT
  static tOptionXlateProc translate_option_strings;
#else
# define OPTPROC_BASE OPTPROC_NONE
# define translate_option_strings NULL
#endif /* ENABLE_NLS */

#define p11tool_full_usage (NULL)
#define p11tool_short_usage (p11tool_opt_strs+5920)

#endif /* not defined __doxygen__ */

/*
 *  Create the static procedure(s) declared above.
 */
/**
 * The callout function that invokes the optionUsage function.
 *
 * @param[in] opts the AutoOpts option description structure
 * @param[in] od   the descriptor for the "help" (usage) option.
 * @noreturn
 */
static void
doUsageOpt(tOptions * opts, tOptDesc * od)
{
    int ex_code;
    ex_code = P11TOOL_EXIT_SUCCESS;
    optionUsage(&p11toolOptions, ex_code);
    /* NOTREACHED */
    exit(P11TOOL_EXIT_FAILURE);
    (void)opts;
    (void)od;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the list-privkeys option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptList_Privkeys(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_LIST_ALL_PRIVKEYS);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the list-keys option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptList_Keys(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_LIST_ALL_PRIVKEYS);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the trusted option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptTrusted(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_MARK_TRUSTED);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the distrusted option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptDistrusted(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_MARK_DISTRUSTED);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the ca option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptCa(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_MARK_CA);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the private option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptPrivate(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_MARK_PRIVATE);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the load-privkey option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptLoad_Privkey(tOptions* pOptions, tOptDesc* pOptDesc)
{
    static teOptFileType const  type =
        FTYPE_MODE_MUST_EXIST + FTYPE_MODE_NO_OPEN;
    static tuFileMode           mode;
#ifndef O_CLOEXEC
#  define O_CLOEXEC 0
#endif
    mode.file_flags = O_CLOEXEC;

    /*
     * This function handles special invalid values for "pOptions"
     */
    optionFileCheck(pOptions, pOptDesc, type, mode);
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the load-pubkey option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptLoad_Pubkey(tOptions* pOptions, tOptDesc* pOptDesc)
{
    static teOptFileType const  type =
        FTYPE_MODE_MUST_EXIST + FTYPE_MODE_NO_OPEN;
    static tuFileMode           mode;
#ifndef O_CLOEXEC
#  define O_CLOEXEC 0
#endif
    mode.file_flags = O_CLOEXEC;

    /*
     * This function handles special invalid values for "pOptions"
     */
    optionFileCheck(pOptions, pOptDesc, type, mode);
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the load-certificate option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptLoad_Certificate(tOptions* pOptions, tOptDesc* pOptDesc)
{
    static teOptFileType const  type =
        FTYPE_MODE_MUST_EXIST + FTYPE_MODE_NO_OPEN;
    static tuFileMode           mode;
#ifndef O_CLOEXEC
#  define O_CLOEXEC 0
#endif
    mode.file_flags = O_CLOEXEC;

    /*
     * This function handles special invalid values for "pOptions"
     */
    optionFileCheck(pOptions, pOptDesc, type, mode);
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the debug option.
 * Specifies the debug level.
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptDebug(tOptions* pOptions, tOptDesc* pOptDesc)
{
    static struct {long rmin, rmax;} const rng[1] = {
        { 0 ,  9999 } };
    int  ix;

    if (pOptions <= OPTPROC_EMIT_LIMIT)
        goto emit_ranges;
    optionNumericVal(pOptions, pOptDesc);

    for (ix = 0; ix < 1; ix++) {
        if (pOptDesc->optArg.argInt < rng[ix].rmin)
            continue;  /* ranges need not be ordered. */
        if (pOptDesc->optArg.argInt == rng[ix].rmin)
            return;
        if (rng[ix].rmax == LONG_MIN)
            continue;
        if (pOptDesc->optArg.argInt <= rng[ix].rmax)
            return;
    }

    option_usage_fp = stderr;

 emit_ranges:
optionShowRange(pOptions, pOptDesc, VOIDP(rng), 1);
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the admin-login option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptAdmin_Login(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_SO_LOGIN);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the inraw option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptInraw(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_INDER);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the outraw option.
 *
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptOutraw(tOptions* pOptions, tOptDesc* pOptDesc)
{
    int res = optionAlias(pOptions, pOptDesc, INDEX_OPT_OUTDER);
    if ((res != 0) && ((pOptions->fOptSet & OPTPROC_ERRSTOP) != 0))
        USAGE(P11TOOL_EXIT_USAGE_ERROR);

}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/**
 * Code to handle the provider option.
 * This will override the default options in /etc/gnutls/pkcs11.conf
 * @param[in] pOptions the p11tool options data structure
 * @param[in,out] pOptDesc the option descriptor for this option.
 */
static void
doOptProvider(tOptions* pOptions, tOptDesc* pOptDesc)
{
    static teOptFileType const  type =
        FTYPE_MODE_MAY_EXIST + FTYPE_MODE_NO_OPEN;
    static tuFileMode           mode;
#ifndef O_CLOEXEC
#  define O_CLOEXEC 0
#endif
    mode.file_flags = O_CLOEXEC;

    /*
     * This function handles special invalid values for "pOptions"
     */
    optionFileCheck(pOptions, pOptDesc, type, mode);
}
/* extracted from optmain.tlib near line 1250 */

/**
 * The directory containing the data associated with p11tool.
 */
#ifndef  PKGDATADIR
# define PKGDATADIR ""
#endif

/**
 * Information about the person or institution that packaged p11tool
 * for the current distribution.
 */
#ifndef  WITH_PACKAGER
# define p11tool_packager_info NULL
#else
/** Packager information for p11tool. */
static char const p11tool_packager_info[] =
    "Packaged by " WITH_PACKAGER

# ifdef WITH_PACKAGER_VERSION
        " ("WITH_PACKAGER_VERSION")"
# endif

# ifdef WITH_PACKAGER_BUG_REPORTS
    "\nReport p11tool bugs to " WITH_PACKAGER_BUG_REPORTS
# endif
    "\n";
#endif
#ifndef __doxygen__

#endif /* __doxygen__ */
/**
 * The option definitions for p11tool.  The one structure that
 * binds them all.
 */
tOptions p11toolOptions = {
    OPTIONS_STRUCT_VERSION,
    0, NULL,                    /* original argc + argv    */
    ( OPTPROC_BASE
    + OPTPROC_ERRSTOP
    + OPTPROC_SHORTOPT
    + OPTPROC_LONGOPT
    + OPTPROC_NO_REQ_OPT
    + OPTPROC_NEGATIONS
    + OPTPROC_REORDER
    + OPTPROC_GNUUSAGE
    + OPTPROC_MISUSE ),
    0, NULL,                    /* current option index, current option */
    NULL,         NULL,         zPROGNAME,
    zRcName,      zCopyright,   zLicenseDescrip,
    zFullVersion, apzHomeList,  zUsageTitle,
    zExplain,     zDetail,      optDesc,
    zBugsAddr,                  /* address to send bugs to */
    NULL, NULL,                 /* extensions/saved state  */
    optionUsage, /* usage procedure */
    translate_option_strings,   /* translation procedure */
    /*
     *  Indexes to special options
     */
    { INDEX_OPT_MORE_HELP, /* more-help option index */
      NO_EQUIVALENT, /* save option index */
      NO_EQUIVALENT, /* '-#' option index */
      NO_EQUIVALENT /* index of default opt */
    },
    75 /* full option count */, 72 /* user option count */,
    p11tool_full_usage, p11tool_short_usage,
    NULL, NULL,
    PKGDATADIR, p11tool_packager_info
};

#if ENABLE_NLS
/**
 * This code is designed to translate translatable option text for the
 * p11tool program.  These translations happen upon entry
 * to optionProcess().
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#ifdef HAVE_DCGETTEXT
# include <gettext.h>
#endif
#include <autoopts/usage-txt.h>

static char * AO_gettext(char const * pz);
static void   coerce_it(void ** s);

/**
 * AutoGen specific wrapper function for gettext.  It relies on the macro _()
 * to convert from English to the target language, then strdup-duplicates the
 * result string.  It tries the "libopts" domain first, then whatever has been
 * set via the \a textdomain(3) call.
 *
 * @param[in] pz the input text used as a lookup key.
 * @returns the translated text (if there is one),
 *   or the original text (if not).
 */
static char *
AO_gettext(char const * pz)
{
    char * res;
    if (pz == NULL)
        return NULL;
#ifdef HAVE_DCGETTEXT
    /*
     * While processing the option_xlateable_txt data, try to use the
     * "libopts" domain.  Once we switch to the option descriptor data,
     * do *not* use that domain.
     */
    if (option_xlateable_txt.field_ct != 0) {
        res = dgettext("libopts", pz);
        if (res == pz)
            res = (char *)VOIDP(_(pz));
    } else
        res = (char *)VOIDP(_(pz));
#else
    res = (char *)VOIDP(_(pz));
#endif
    if (res == pz)
        return res;
    res = strdup(res);
    if (res == NULL) {
        fputs(_("No memory for duping translated strings\n"), stderr);
        exit(P11TOOL_EXIT_FAILURE);
    }
    return res;
}

/**
 * All the pointers we use are marked "* const", but they are stored in
 * writable memory.  Coerce the mutability and set the pointer.
 */
static void coerce_it(void ** s) { *s = AO_gettext(*s);
}

/**
 * Translate all the translatable strings in the p11toolOptions
 * structure defined above.  This is done only once.
 */
static void
translate_option_strings(void)
{
    tOptions * const opts = &p11toolOptions;

    /*
     *  Guard against re-translation.  It won't work.  The strings will have
     *  been changed by the first pass through this code.  One shot only.
     */
    if (option_xlateable_txt.field_ct != 0) {
        /*
         *  Do the translations.  The first pointer follows the field count
         *  field.  The field count field is the size of a pointer.
         */
        char ** ppz = (char**)VOIDP(&(option_xlateable_txt));
        int     ix  = option_xlateable_txt.field_ct;

        do {
            ppz++; /* skip over field_ct */
            *ppz = AO_gettext(*ppz);
        } while (--ix > 0);
        /* prevent re-translation and disable "libopts" domain lookup */
        option_xlateable_txt.field_ct = 0;

        coerce_it(VOIDP(&(opts->pzCopyright)));
        coerce_it(VOIDP(&(opts->pzCopyNotice)));
        coerce_it(VOIDP(&(opts->pzFullVersion)));
        coerce_it(VOIDP(&(opts->pzUsageTitle)));
        coerce_it(VOIDP(&(opts->pzExplain)));
        coerce_it(VOIDP(&(opts->pzDetail)));
        {
            tOptDesc * od = opts->pOptDesc;
            for (ix = opts->optCt; ix > 0; ix--, od++)
                coerce_it(VOIDP(&(od->pzText)));
        }
    }
}
#endif /* ENABLE_NLS */

#ifdef DO_NOT_COMPILE_THIS_CODE_IT_IS_FOR_GETTEXT
/** I18N function strictly for xgettext.  Do not compile. */
static void bogus_function(void) {
  /* TRANSLATORS:

     The following dummy function was crated solely so that xgettext can
     extract the correct strings.  These strings are actually referenced
     by a field name in the p11toolOptions structure noted in the
     comments below.  The literal text is defined in p11tool_opt_strs.

     NOTE: the strings below are segmented with respect to the source string
     p11tool_opt_strs.  The strings above are handed off for translation
     at run time a paragraph at a time.  Consequently, they are presented here
     for translation a paragraph at a time.

     ALSO: often the description for an option will reference another option
     by name.  These are set off with apostrophe quotes (I hope).  Do not
     translate option names.
   */
  /* referenced via p11toolOptions.pzCopyright */
  puts(_("p11tool 3.6.13\n\
Copyright (C) 2000-2020 Free Software Foundation, and others, all rights reserved.\n\
This is free software. It is licensed for use, modification and\n\
redistribution under the terms of the GNU General Public License,\n\
version 3 or later <http://gnu.org/licenses/gpl.html>\n"));

  /* referenced via p11toolOptions.pzCopyNotice */
  puts(_("p11tool is free software: you can redistribute it and/or modify it under\n\
the terms of the GNU General Public License as published by the Free\n\
Software Foundation, either version 3 of the License, or (at your option)\n\
any later version.\n\n"));
  puts(_("p11tool is distributed in the hope that it will be useful, but WITHOUT ANY\n\
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n\
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n\
details.\n\n"));
  puts(_("You should have received a copy of the GNU General Public License along\n\
with this program.  If not, see <http://www.gnu.org/licenses/>.\n"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Tokens:"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List all available tokens"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List the URLs available tokens"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List all available mechanisms in a token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Initializes a PKCS #11 token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Initializes/Resets a PKCS #11 token user PIN"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Initializes/Resets a PKCS #11 token security officer PIN."));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Specify the PIN to use on token operations"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Specify the Security Officer's PIN to use on token initialization"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Object listing:"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List all available objects in a token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List all available certificates in a token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List all certificates that have an associated private key"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List all available private keys in a token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'list-all-privkeys' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'list-all-privkeys' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List all available certificates marked as trusted"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Export the object specified by the URL"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Export the certificate object specified by the URL"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Export the certificate specified by the URL and its chain of trust"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Export the public key for a private key"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("List information on an available object in a token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'mark-trusted' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'mark-distrusted' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Key generation:"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Generate private-public key pair of given type"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Generate an RSA private-public key pair (deprecated)"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Generate a DSA private-public key pair (deprecated)"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Generate an ECDSA private-public key pair (deprecated)"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Specify the number of bits for the key generate"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Specify the curve used for EC key generation"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Specify the security level"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Writing objects:"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Set the CKA_ID (in hex) for the specified by the URL object"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Set the CKA_LABEL for the specified by the URL object"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Writes the loaded objects to a PKCS #11 token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Deletes the objects matching the given PKCS #11 URL"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Sets a label for the write operation"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Sets an ID for the write operation"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Marks the generated key to be a wrapping key"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Marks the object to be written as trusted"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("When retrieving objects, it requires the objects to be distrusted\n\
(blacklisted)"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Marks the object to be written for decryption"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Marks the object to be written for signature generation"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Marks the object to be written as a CA"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Marks the object to be written as private"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'mark-ca' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'mark-private' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Provide a hex encoded secret key"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Private key file to use"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Public key file to use"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Certificate file to use"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Other options:"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Enable debugging"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Output file"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Force (user) login to token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Force security officer login to token"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'so-login' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Tests the signature operation of the provided object"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Sign with a specific signature algorithm"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Hash algorithm to use for signing"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Generate random data"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Use PKCS #8 format for private keys"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Use DER/RAW format for input"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'inder' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Use DER format for output certificates, private keys, and DH parameters"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("an alias for the 'outder' option"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Specify the PKCS #11 provider library"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Specify parameters for the PKCS #11 provider library (deprecated)"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Print detailed URLs"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Print a compact listing using only the URLs"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("Disable all interaction with the tool"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("display extended usage information and exit"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("extended usage information passed thru pager"));

  /* referenced via p11toolOptions.pOptDesc->pzText */
  puts(_("output version information and exit"));

  /* referenced via p11toolOptions.pzUsageTitle */
  puts(_("p11tool - GnuTLS PKCS #11 tool\n\
Usage:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]... [url]\n"));

  /* referenced via p11toolOptions.pzExplain */
  puts(_("\n"));

  /* referenced via p11toolOptions.pzDetail */
  puts(_("Program that allows operations on PKCS #11 smart cards and security\n\
modules.\n\n"));
  puts(_("To use PKCS #11 tokens with GnuTLS the p11-kit configuration files need to\n\
be setup.  That is create a .module file in /etc/pkcs11/modules with the\n\
contents 'module: /path/to/pkcs11.so'.  Alternatively the configuration\n\
file /etc/gnutls/pkcs11.conf has to exist and contain a number of lines of\n\
the form 'load=/usr/lib/opensc-pkcs11.so'.\n\n"));
  puts(_("You can provide the PIN to be used for the PKCS #11 operations with the\n\
environment variables GNUTLS_PIN and GNUTLS_SO_PIN.\n"));

  /* referenced via p11toolOptions.pzFullVersion */
  puts(_("p11tool 3.6.13"));

  /* referenced via p11toolOptions.pzFullUsage */
  puts(_("<<<NOT-FOUND>>>"));

  /* referenced via p11toolOptions.pzShortUsage */
  puts(_("p11tool [options] [url]\n\
p11tool --help for usage instructions.\n"));
  /* LIBOPTS-MESSAGES: */
#line 67 "../autoopts.c"
  puts(_("allocation of %d bytes failed\n"));
#line 89 "../autoopts.c"
  puts(_("allocation of %d bytes failed\n"));
#line 48 "../init.c"
  puts(_("AutoOpts function called without option descriptor\n"));
#line 81 "../init.c"
  puts(_("\tThis exceeds the compiled library version:  "));
#line 79 "../init.c"
  puts(_("Automated Options Processing Error!\n"
       "\t%s called AutoOpts function with structure version %d:%d:%d.\n"));
#line 78 "../autoopts.c"
  puts(_("realloc of %d bytes at 0x%p failed\n"));
#line 83 "../init.c"
  puts(_("\tThis is less than the minimum library version:  "));
#line 121 "../version.c"
  puts(_("Automated Options version %s\n"
       "\tCopyright (C) 1999-2017 by Bruce Korb - all rights reserved\n"));
#line 49 "../makeshell.c"
  puts(_("(AutoOpts bug):  %s.\n"));
#line 90 "../reset.c"
  puts(_("optionResetOpt() called, but reset-option not configured"));
#line 241 "../usage.c"
  puts(_("could not locate the 'help' option"));
#line 330 "../autoopts.c"
  puts(_("optionProcess() was called with invalid data"));
#line 697 "../usage.c"
  puts(_("invalid argument type specified"));
#line 568 "../find.c"
  puts(_("defaulted to option with optional arg"));
#line 76 "../alias.c"
  puts(_("aliasing option is out of range."));
#line 210 "../enum.c"
  puts(_("%s error:  the keyword '%s' is ambiguous for %s\n"));
#line 78 "../find.c"
  puts(_("  The following options match:\n"));
#line 263 "../find.c"
  puts(_("%s: ambiguous option name: %s (matches %d options)\n"));
#line 161 "../check.c"
  puts(_("%s: Command line arguments required\n"));
#line 43 "../alias.c"
  puts(_("%d %s%s options allowed\n"));
#line 56 "../makeshell.c"
  puts(_("%s error %d (%s) calling %s for '%s'\n"));
#line 268 "../makeshell.c"
  puts(_("interprocess pipe"));
#line 171 "../version.c"
  puts(_("error: version option argument '%c' invalid.  Use:\n"
       "\t'v' - version only\n"
       "\t'c' - version and copyright\n"
       "\t'n' - version and full copyright notice\n"));
#line 58 "../check.c"
  puts(_("%s error:  the '%s' and '%s' options conflict\n"));
#line 187 "../find.c"
  puts(_("%s: The '%s' option has been disabled."));
#line 400 "../find.c"
  puts(_("%s: The '%s' option has been disabled."));
#line 38 "../alias.c"
  puts(_("-equivalence"));
#line 439 "../find.c"
  puts(_("%s: illegal option -- %c\n"));
#line 110 "../reset.c"
  puts(_("%s: illegal option -- %c\n"));
#line 241 "../find.c"
  puts(_("%s: illegal option -- %s\n"));
#line 740 "../find.c"
  puts(_("%s: illegal option -- %s\n"));
#line 118 "../reset.c"
  puts(_("%s: illegal option -- %s\n"));
#line 305 "../find.c"
  puts(_("%s: unknown vendor extension option -- %s\n"));
#line 135 "../enum.c"
  puts(_("  or an integer from %d through %d\n"));
#line 145 "../enum.c"
  puts(_("  or an integer from %d through %d\n"));
#line 696 "../usage.c"
  puts(_("%s error:  invalid option descriptor for %s\n"));
#line 1030 "../usage.c"
  puts(_("%s error:  invalid option descriptor for %s\n"));
#line 355 "../find.c"
  puts(_("%s: invalid option name: %s\n"));
#line 497 "../find.c"
  puts(_("%s: The '%s' option requires an argument.\n"));
#line 150 "../autoopts.c"
  puts(_("(AutoOpts bug):  Equivalenced option '%s' was equivalenced to both\n"
       "\t'%s' and '%s'."));
#line 94 "../check.c"
  puts(_("%s error:  The %s option is required\n"));
#line 602 "../find.c"
  puts(_("%s: The '%s' option cannot have an argument.\n"));
#line 151 "../check.c"
  puts(_("%s: Command line arguments are not allowed.\n"));
#line 568 "../save.c"
  puts(_("error %d (%s) creating %s\n"));
#line 210 "../enum.c"
  puts(_("%s error:  '%s' does not match any %s keywords.\n"));
#line 93 "../reset.c"
  puts(_("%s error: The '%s' option requires an argument.\n"));
#line 122 "../save.c"
  puts(_("error %d (%s) stat-ing %s\n"));
#line 175 "../save.c"
  puts(_("error %d (%s) stat-ing %s\n"));
#line 143 "../restore.c"
  puts(_("%s error: no saved option state\n"));
#line 225 "../autoopts.c"
  puts(_("'%s' is not a command line option.\n"));
#line 113 "../time.c"
  puts(_("%s error:  '%s' is not a recognizable date/time.\n"));
#line 50 "../time.c"
  puts(_("%s error:  '%s' is not a recognizable time duration.\n"));
#line 92 "../check.c"
  puts(_("%s error:  The %s option must appear %d times.\n"));
#line 165 "../numeric.c"
  puts(_("%s error:  '%s' is not a recognizable number.\n"));
#line 176 "../enum.c"
  puts(_("%s error:  %s exceeds %s keyword count\n"));
#line 279 "../usage.c"
  puts(_("Try '%s %s' for more information.\n"));
#line 45 "../alias.c"
  puts(_("one %s%s option allowed\n"));
#line 170 "../makeshell.c"
  puts(_("standard output"));
#line 905 "../makeshell.c"
  puts(_("standard output"));
#line 223 "../usage.c"
  puts(_("standard output"));
#line 364 "../usage.c"
  puts(_("standard output"));
#line 574 "../usage.c"
  puts(_("standard output"));
#line 178 "../version.c"
  puts(_("standard output"));
#line 223 "../usage.c"
  puts(_("standard error"));
#line 364 "../usage.c"
  puts(_("standard error"));
#line 574 "../usage.c"
  puts(_("standard error"));
#line 178 "../version.c"
  puts(_("standard error"));
#line 170 "../makeshell.c"
  puts(_("write"));
#line 905 "../makeshell.c"
  puts(_("write"));
#line 222 "../usage.c"
  puts(_("write"));
#line 363 "../usage.c"
  puts(_("write"));
#line 573 "../usage.c"
  puts(_("write"));
#line 177 "../version.c"
  puts(_("write"));
#line 60 "../numeric.c"
  puts(_("%s error:  %s option value %ld is out of range.\n"));
#line 44 "../check.c"
  puts(_("%s error:  %s option requires the %s option\n"));
#line 121 "../save.c"
  puts(_("%s warning:  cannot save options - %s not regular file\n"));
#line 174 "../save.c"
  puts(_("%s warning:  cannot save options - %s not regular file\n"));
#line 193 "../save.c"
  puts(_("%s warning:  cannot save options - %s not regular file\n"));
#line 567 "../save.c"
  puts(_("%s warning:  cannot save options - %s not regular file\n"));
  /* END-LIBOPTS-MESSAGES */

  /* USAGE-TEXT: */
#line 822 "../usage.c"
  puts(_("\t\t\t\t- an alternate for '%s'\n"));
#line 1097 "../usage.c"
  puts(_("Version, usage and configuration options:"));
#line 873 "../usage.c"
  puts(_("\t\t\t\t- default option for unnamed options\n"));
#line 786 "../usage.c"
  puts(_("\t\t\t\t- disabled as '--%s'\n"));
#line 1066 "../usage.c"
  puts(_(" --- %-14s %s\n"));
#line 1064 "../usage.c"
  puts(_("This option has been disabled"));
#line 813 "../usage.c"
  puts(_("\t\t\t\t- enabled by default\n"));
#line 40 "../alias.c"
  puts(_("%s error:  only "));
#line 1143 "../usage.c"
  puts(_(" - examining environment variables named %s_*\n"));
#line 168 "../file.c"
  puts(_("\t\t\t\t- file must not pre-exist\n"));
#line 172 "../file.c"
  puts(_("\t\t\t\t- file must pre-exist\n"));
#line 329 "../usage.c"
  puts(_("Options are specified by doubled hyphens and their name or by a single\n"
       "hyphen and the flag character.\n"));
#line 882 "../makeshell.c"
  puts(_("\n"
       "= = = = = = = =\n\n"
       "This incarnation of genshell will produce\n"
       "a shell script to parse the options for %s:\n\n"));
#line 142 "../enum.c"
  puts(_("  or an integer mask with any of the lower %d bits set\n"));
#line 846 "../usage.c"
  puts(_("\t\t\t\t- is a set membership option\n"));
#line 867 "../usage.c"
  puts(_("\t\t\t\t- must appear between %d and %d times\n"));
#line 331 "../usage.c"
  puts(_("Options are specified by single or double hyphens and their name.\n"));
#line 853 "../usage.c"
  puts(_("\t\t\t\t- may appear multiple times\n"));
#line 840 "../usage.c"
  puts(_("\t\t\t\t- may not be preset\n"));
#line 1258 "../usage.c"
  puts(_("   Arg Option-Name    Description\n"));
#line 1194 "../usage.c"
  puts(_("  Flg Arg Option-Name    Description\n"));
#line 1252 "../usage.c"
  puts(_("  Flg Arg Option-Name    Description\n"));
#line 1253 "../usage.c"
  puts(_(" %3s %s"));
#line 1259 "../usage.c"
  puts(_(" %3s %s"));
#line 336 "../usage.c"
  puts(_("The '-#<number>' option may omit the hash char\n"));
#line 332 "../usage.c"
  puts(_("All arguments are named options.\n"));
#line 920 "../usage.c"
  puts(_(" - reading file %s"));
#line 358 "../usage.c"
  puts(_("\n"
       "Please send bug reports to:  <%s>\n"));
#line 100 "../version.c"
  puts(_("\n"
       "Please send bug reports to:  <%s>\n"));
#line 129 "../version.c"
  puts(_("\n"
       "Please send bug reports to:  <%s>\n"));
#line 852 "../usage.c"
  puts(_("\t\t\t\t- may NOT appear - preset only\n"));
#line 893 "../usage.c"
  puts(_("\n"
       "The following option preset mechanisms are supported:\n"));
#line 1141 "../usage.c"
  puts(_("\n"
       "The following option preset mechanisms are supported:\n"));
#line 631 "../usage.c"
  puts(_("prohibits these options:\n"));
#line 626 "../usage.c"
  puts(_("prohibits the option '%s'\n"));
#line 81 "../numeric.c"
  puts(_("%s%ld to %ld"));
#line 79 "../numeric.c"
  puts(_("%sgreater than or equal to %ld"));
#line 75 "../numeric.c"
  puts(_("%s%ld exactly"));
#line 68 "../numeric.c"
  puts(_("%sit must lie in one of the ranges:\n"));
#line 68 "../numeric.c"
  puts(_("%sit must be in the range:\n"));
#line 88 "../numeric.c"
  puts(_(", or\n"));
#line 66 "../numeric.c"
  puts(_("%sis scalable with a suffix: k/K/m/M/g/G/t/T\n"));
#line 77 "../numeric.c"
  puts(_("%sless than or equal to %ld"));
#line 339 "../usage.c"
  puts(_("Operands and options may be intermixed.  They will be reordered.\n"));
#line 601 "../usage.c"
  puts(_("requires the option '%s'\n"));
#line 604 "../usage.c"
  puts(_("requires these options:\n"));
#line 1270 "../usage.c"
  puts(_("   Arg Option-Name   Req?  Description\n"));
#line 1264 "../usage.c"
  puts(_("  Flg Arg Option-Name   Req?  Description\n"));
#line 143 "../enum.c"
  puts(_("or you may use a numeric representation.  Preceding these with a '!'\n"
       "will clear the bits, specifying 'none' will clear all bits, and 'all'\n"
       "will set them all.  Multiple entries may be passed as an option\n"
       "argument list.\n"));
#line 859 "../usage.c"
  puts(_("\t\t\t\t- may appear up to %d times\n"));
#line 52 "../enum.c"
  puts(_("The valid \"%s\" option keywords are:\n"));
#line 1101 "../usage.c"
  puts(_("The next option supports vendor supported extra options:"));
#line 722 "../usage.c"
  puts(_("These additional options are:"));
  /* END-USAGE-TEXT */
}
#endif /* uncompilable code */
#ifdef  __cplusplus
}
#endif
/* p11tool-args.c ends here */
