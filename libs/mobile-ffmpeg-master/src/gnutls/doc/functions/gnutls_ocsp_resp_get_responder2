



@deftypefun {int} {gnutls_ocsp_resp_get_responder2} (gnutls_ocsp_resp_const_t @var{resp}, gnutls_datum_t * @var{dn}, unsigned @var{flags})
@var{resp}: should contain a @code{gnutls_ocsp_resp_t}  type

@var{dn}: newly allocated buffer with name

@var{flags}: zero or @code{GNUTLS_X509_DN_FLAG_COMPAT} 

This function will extract the name of the Basic OCSP Response in
the provided buffer. The name will be in the form
"C=xxxx,O=yyyy,CN=zzzz" as described in RFC2253. The output string
will be ASCII or UTF-8 encoded, depending on the certificate data.

If the responder ID is not a name but a hash, this function
will return zero and the  @code{dn} elements will be set to @code{NULL} .

The caller needs to deallocate memory by calling @code{gnutls_free()}  on
 @code{dn} ->data.

When the flag @code{GNUTLS_X509_DN_FLAG_COMPAT}  is specified, the output
format will match the format output by previous to 3.5.6 versions of GnuTLS
which was not not fully RFC4514-compliant.

@strong{Returns:} On success, @code{GNUTLS_E_SUCCESS}  (0) is returned, otherwise a
negative error code is returned. When no data exist it will return
@code{GNUTLS_E_REQUESTED_DATA_NOT_AVAILABLE} .
@end deftypefun
