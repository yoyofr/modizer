.\" auto-generated by docbook2man-spec from docbook-utils package
.TH "FcPatternBuild" "3" "09 8æœˆ 2019" "Fontconfig 2.13.92" ""
.SH NAME
FcPatternBuild, FcPatternVaBuild, FcPatternVapBuild \- Create patterns from arguments
.SH SYNOPSIS
.nf
\fB#include <fontconfig/fontconfig.h>
.sp
FcPattern * FcPatternBuild (FcPattern *\fIpattern\fB, \&...\fI\fB);
.sp
FcPattern * FcPatternVaBuild (FcPattern *\fIpattern\fB, va_list \fIva\fB);
.sp
void FcPatternVapBuild (FcPattern *\fIresult\fB, FcPattern *\fIpattern\fB, va_list \fIva\fB);
.fi\fR
.SH "DESCRIPTION"
.PP
Builds a pattern using a list of objects, types and values. Each
value to be entered in the pattern is specified with three arguments:
.IP 1. 
Object name, a string describing the property to be added.
.IP 2. 
Object type, one of the FcType enumerated values
.IP 3. 
Value, not an FcValue, but the raw type as passed to any of the
FcPatternAdd<type> functions. Must match the type of the second
argument.
.PP
The argument list is terminated by a null object name, no object type nor
value need be passed for this. The values are added to `pattern', if
`pattern' is null, a new pattern is created. In either case, the pattern is
returned. Example
.PP
.sp
.nf
pattern = FcPatternBuild (0, FC_FAMILY, FcTypeString, "Times", (char *) 0);
.sp
.fi
.PP
FcPatternVaBuild is used when the arguments are already in the form of a
varargs value. FcPatternVapBuild is a macro version of FcPatternVaBuild
which returns its result directly in the \fIresult\fR
variable.
.PP
