OpenMPT - Full Version History
------------------------------

[Fix]: bug fix
[New]: new feature
[Imp]: improvement
[Reg]: known issue / regression / feature removal
[Mod]: change
[Var]: other
(tx XYZ): thanks to XYZ for telling us about the bug / requesting the feature


Developers:
<initials> nick name  / real name        [email @openmpt.org]
   <al>    Relabs     / Ahti Leppänen    [relabs]
   <ec>    Ericus     / Eric Chavanon    [ericus]
   <jh>    manx       / Jörn Heusipp     [manx]
   <js>    Saga Musix / Johannes Schultz [sagamusix]
   <rf>    rewbs      / Robin Fernandes  [rewbs]
   <sp>    pelya      / Sergiy Pylypenko [pelya]
   <tn>    plastik_s  / Trevor Nunes     [plastik_s]
Patch submitters:
   <cm>    kode54     / Chris Moeller
   <da>    Revenant   / Devin Acker
   <ih>    xaimus     / Imran Hameed
   <ks>    coda       / Ken Snyder


v1.26.04.00 (7 August 2016, revision 6772)
------------------------------------------
Pattern tab
   [New] <js> Can now record MIDI Pitch Wheel changes to pattern as MIDI macros (http://forum.openmpt.org/index.php?topic=1615.0).
   [Imp] <js> Redirect keys entered in the instrument column to the note column if they didn't trigger any action (tx coda).
   [Mod] <js> Switch direction of instrument selection buttons (http://bugs.openmpt.org/view.php?id=841).
   [Fix] <js> Note Properties: Parameter for "fine portamento up" command was not displayed correctly in MOD / XM files.

Sample tab
   [New] <js> Can now mix-paste from clipboard.
   [New] <js> Can now Paste (Insert) instead of just Paste (Replace) as well.
   [New] <js> Can now import Sun Audio (AU / SND) samples.
   [New] <js> Can now import 64-bit float, a-law and u-law WAV and AIFF samples.
   [Imp] <js> Remember previously used resampler across sessions (http://bugs.openmpt.org/view.php?id=830).
   [Imp] <js> If there is no loop yet, allow setting the loop start via context menu sample end becomes loop end).
   [Fix] <js> Cue points were not written correctly to FLAC files.

Comments tab
   [Imp] <js> Ctrl+A can now be used for selecting all text (http://bugs.openmpt.org/view.php?id=706).

Mod Conversion
   [Imp] <js> When converting restart positions to pattern commands, ensure that the modified pattern is unique, so that other instances of the pattern remain unaffected of the change.
   [Fix] <js> Since OpenMPT 1.26.01.00, converting to IT / S3M converted the restart position to a pattern jump command, but did not actually remove the restart position property.

VST / DMO Plugins
   [New] <js> Can now rename plugin presets by clicking on the preset name in the editor. Not all plugins support this.
   [Fix] <js> OpenMPT 1.26.01.00 introduced a behaviour change when restoring plugin parameters: If less plugin parameters could be restored from the file than the plugin actually has (which could happen when upgrading to a new plugin version), they were no longer ignored completely. The old behaviour is now in place again.

VST::Specific Plugin Fixes
   [Fix] <js> Work around strange crash in Admiral Quality NaiveLPF.

MPTM
   [Fix] <js> Possible crash when loading malformed tunings.

S3M
   [Mod] <js> For old ModPlug-made S3Ms, cut notes early rather than limiting them to the maximum supported frequency (fixes off-key frequency slide in watcha.s3m).

MOD
   [Fix] <js> Sample swapping with portamento didn't work as intended for ProTracker MODs.
   [Fix] <js> More accurate ProTracker arpeggio wrap-around emulation.
   [Fix] <js> ADPCM-compressed samples were broken since OpenMPT 1.26.01.00 (http://bugs.openmpt.org/view.php?id=832).

Other formats
   [Imp] <js> MDL: Vastly improved loader.
   [Fix] <js> 669: Unis 669 pan slide effect was too deep.
   [Fix] <js> DMF: Sample loop lengths were off by one.
   [Fix] <js> DSM: Some pattern commands were not imported correctly.
   [Fix] <js> MT2: Ignore plugin automation data for pre-2.5 files.
   [Fix] <js> PSM16: More accurate sample tuning.
   [Fix] <js> STM: Do not load garbage samples in some files (e.g. acidlamb.stm).
   [Fix] <js> ULT: Only import pattern commands supported by the UltraTracker version that was used to save the file. Add support for command 5-C (end loop).
   [Fix] <js> OpenMPT 1.26.03.00 broke import of many pattern commands in DBM, DMF and ULT files.
   [Fix] <js> Several valid (but slightly corrupted possibly due to disk failures or data transfer errors) SoundTracker files were no longer loading in OpenMPT 1.26.03.00.

Module cleanup
   [New] <js> Added option to remove all unused channels (http://bugs.openmpt.org/view.php?id=835).

Misc
   [Mod] <js> Update check: Operating system version is now transmitted if basic update statistics are allowed. We need this information for planning build configurations of future OpenMPT versions.
   [Fix] <js> Memory leak when loading stereo SF2 instruments.

Third-Party Libraries
   [Mod] Update opus (v1.1.3) and UnRAR (v5.4.4).


v1.26.03.00 (11 July 2016, revision 6609)
-----------------------------------------
General tab
   [Fix] <js> Show scaled Dry / Wet ratio when Expanded Mix is enabled.

Pattern tab
   [Imp] <js> When jumping around in the song, update plugin parameters to their latest value.
   [Imp] <js> Grey out add / duplicate / remove channel context menu entries when the maximum / minimum number of channels is reached (http://bugs.openmpt.org/view.php?id=820).
   [Mod] <js> Right-clicking outside a selection no longer cancels the selection (http://bugs.openmpt.org/view.php?id=823).
   [Fix] <js> Position Jump with Parameter Extension was not interpreted correctly if pattern loop was active (http://bugs.openmpt.org/view.php?id=806).
   [Fix] <js> Clicking very quickly on the order list while it was not fully initialized yet could lead to a crash.
   [Fix] <js> Pasting multiple patterns didn't update the pattern list in the tree view (http://bugs.openmpt.org/view.php?id=811).
   [Fix] <js> After removing commands from patterns, their parameters could still show up in clipboard data.

Pattern tab::Find/Replace
   [Fix] <js> Manually entering hexadecimal parameters did not work (http://bugs.openmpt.org/view.php?id=825).

Sample tab
   [New] <js> Can now use any of OpenMPT's own filters for resampling (http://bugs.openmpt.org/view.php?id=740).

Mod Conversion
   [Imp] <js> Better handling of volume slide and portamento command memory when converting from IT / MPTM / S3M to XM.

VST::Specific Plugin Fixes
   [Fix] <js> VOPM no longer crashes randomly when pressing cancel in OPM import / export dialogs.

VST::Plugin Bridge
   [Mod] <js> Initialize COM for plugins that need it.

MPTM
   [Fix] <jh> Fix possible crash when saving modules with custom tunings after deleting instruments from the tree view.

IT
   [Fix] <js> IT-compatible auto-vibrato jumped very coarsely when being applied to high-pitched notes in non-linear mode.

S3M
   [Imp] <js> Warn when writing too much pattern or sample data when saving S3M files.

MOD
   [Mod] <js> Allow MOD files with 1 to 3 channels to be created.
   [Fix] <js> MOD files with more than 128 patterns were not loaded correctly (e.g. NIETNU.MOD).

Other formats
   [Fix] <js> GDM: Some pattern commands were not imported properly since OpenMPT 1.20.
   [Fix] <js> MDL: Pattern import was broken for all but the first pattern.
   [Fix] <js> MT2: Fix some modules with "modern" tempo interpretation.
   [Fix] <js> MTM: Vibrato depth is approximately half as deep as in MOD.
   [Fix] <js> Tighten SoundTracker heuristics to reject more non-module files (e.g. SNES SPC and MP3 files).

Stream Export
   [Imp] <js> Show which sample / instrument / channel is being exported (http://bugs.openmpt.org/view.php?id=808).
   [Imp] <js> Do not export sampless and instruments that only appear on muted channels in instrument export mode (http://bugs.openmpt.org/view.php?id=808).
   [Fix] <js> Do not export muted samples and instruments in instrument export mode (http://bugs.openmpt.org/view.php?id=808).
   [Fix] <jh> Exported Ogg and Opus streams almost always had the same serial number.

Audio I/O
   [Imp] <jh> Allow setting the priority (XP) or MMCSS class (Vista) used for boosting the sound device thread. The hidden options and defaults are "Sound Settings.BoostedThreadPriority" (2) and "Sound Settings.BoostedThreadMMCSSClass" (Pro Audio) (http://forum.openmpt.org/index.php?topic=5655.0).

Misc
   [New] <jh> Allow setting the process priority class through hidden setting "Misc.ProcessPriorityClass" (default is "normal", http://forum.openmpt.org/index.php?topic=5655.0).
   [Mod] <js> Finally completely deprecate MPT 1.16 mix mode and only show it for legacy modules.
   [Fix] <jh> Some input dialogs were not sized correctly when using the build for old Windows versions (http://bugs.openmpt.org/view.php?id=810).

Third-Party Libraries
   [Mod] Update opusfile (v0.8) and UnRAR (v5.4.2).


v1.26.02.00 (22 May 2016, revision 6410)
----------------------------------------
Audio I/O
   [Fix] <jh> Fix playback on some Wave Out drivers (e.g. in Wine 1.7.46, possibly also fixes http://bugs.openmpt.org/view.php?id=620).

Misc
   [Fix] <js> Song length estimation: Length was reported incorrectly for some modules in modern tempo mode and estimation disturbed real-time playback in songs with per-pattern time signature.
   [Fix] <jh> OpenMPT did not detect Wine reliably in the previous release.


v1.26.01.00 (21 May 2016, revision 6400)
----------------------------------------
General tab
   [Imp] <js> In the plugin "Output To" box, there is now also an option to add a new plugin to which the output should be routed.
   [Imp] <js> Cloning an instrument plugin also creates a new module instrument for it.
   [Mod] <js> When cloning plugins, slightly offset the cloned editor window to not confuse it with the original window.

Pattern tab
   [Imp] <js> Double-clicking an empty order list cell creates a new pattern.
   [Mod] <js> Make Play Row behaviour consistent with cursor movement behaviour if "Continuous Scroll" is disabled: When "Cursor Wrap in Pattern Editor" is disabled, the cursor remains on the last row when reaching the pattern end (http://bugs.openmpt.org/view.php?id=753).
   [Mod] <js> When jumping around during live playback and crossing a pattern border, reset all voices.
   [Mod] <js> To make Data Entry more useful, it is now only applied to the first column type of selection, even if it spans several channels (e.g. if the selection starts in the volume column, only volume will be changed).
   [Fix] <js> Show correct (summed up) parameter for commands augmented with Parameter Extension (#xx) in the status bar.
   [Fix] <js> Note Properties: Pre-select correct item in plugin parameter list if plugin has more than 100 parameters.
   [Fix] <js> Recording automation from plugin parameters in IT/XM modules wrote incorrect Zxx parameters.
   [Fix] <js> With "follow song" enabled, order list multi-selections are no longer modified on pattern transitions.
   [Fix] <js> Redraw issues with right-click drawing in the parameter editor.
   [Fix] <js> Patterns were not drawn at all in OpenMPT 1.25 at 0 rows per measure.

Pattern tab::Find/Replace
   [New] <js> Can now find ranges of data (e.g. notes C-5 to D-6) and replace them also with relative values or percentages (http://bugs.openmpt.org/view.php?id=742).
   [Imp] <js> Can now find and replace all columns of PC events (http://bugs.openmpt.org/view.php?id=44).
   [Imp] <js> Replacing notes by +/-1 octave now works as intended for instruments with custom tunings.

Sample tab
   [New] <jh> Ogg Vorbis and Opus sample loading support.
   [New] <js> New shortcuts: Zoom to sample start (1) / end (2), trim to loop end (Ctrl+Shift+T).
   [Imp] <js> Loop cross-fader now also works with sustain loops.
   [Imp] <js> MP3-compressed WAV samples are now also tried to be decoded using Media Foundation rather than just mpg123.
   [Fix] <js> Sample tuner was broken for XM modules.
   [Fix] <js> Stereo IMA ADPCM WAV samples were not read correctly.
   [Fix] <js> Splitting a stereo sample into two mono samples didn't update the tree view.
   [Fix] <js> When extracting a single sample from an SF2 bank, import the sample name rather than the patch name (http://bugs.openmpt.org/view.php?id=758).

Instrument tab
   [New] <js> Added keyboard shortcuts for selecting loop points and moving envelope points by one beat.
   [Imp] <js> Draw selected loop points in different colour.
   [Imp] <js> Show fade-out length in ticks when hovering its edit field.
   [Imp] <js> When entering a MIDI program > 128, automatically convert it to a program + bank combination.
   [Imp] <js> Show plugin program name when hovering MIDI program / bank input fields.
   [Imp] <js> Update status bar when moving envelope points around using the keyboard.
   [Fix] <js> Preview the correct note when pressing octave keys (tx eightbitbubsy).

Tree view
   [Imp] <js> Speed up display of very long order lists.
   [Fix] <js> When removing a plugin, all other plugins were removed from the tree view as well, despite still being present in the module.

VST / DMO Plugins
   [New] <js> Disable the remove button in the plugin manager for DMO plugins, as it confused several users how to re-add the removed plugins.
   [New] <js> Shift-clicking a plugin editor toggle button closes all other editors (tx coda).
   [New] <js> OpenMPT now reads the VST plugin vendor. Searching for a plugin in the plugin manager also searches in the vendor names.
   [Imp] <js> When opening an instrument plugin editor, check if the currently selected instrument would be suitable input instrument for the plugin, rather than just the first instrument that uses this plugin.
   [Imp] <js> If available (on DirectX 9 and newer), DMO plugins now process in floating-point precision rather than 16-bit PCM.
   [Imp] <js> DMO plugins can now be tagged as well.
   [Mod] <js> Editing integer parameters of DMO plugins should be easier now.
   [Mod] <js> Always send both LSB and MSB of bank select. Otherwise some synths (e.g. Roland XV-5080) ignore it.
   [Fix] <js> Plugin editor position was not restored properly on multi-monitor setups.
   [Fix] <js> Possible drift in precision for DMO plugins that query the current play time.
   [Fix] <js> Only the first VST plugin in a module got informed about transport changes.
   [Fix] <js> Some plugins (e.g. Electri-Q) don't like it when querying the names of non-existent parameters, which could e.g. happen when entering PC events into patterns.
   [Fix] <js> Possible crash in 64-bit version of OpenMPT with any plugin (http://forum.openmpt.org/index.php?topic=5651.0).

VST::Specific Plugin Fixes
   [Fix] <js> Image-Line Sawer does not like MIDI CC 121 and 123, so do not send them when resetting playback (tx mallo).
   [Fix] <js> Superior Drummer did not load its samples until playback starts (http://bugs.openmpt.org/view.php?id=750).

Playback
   [Mod] <js> Instead of having one "compatible playback" per file, every playback quirk now has its own flag. This includes a dialog to edit these flags. These flags should not be edited manually, except for the "Set Defaults" functionality.
   [Mod] <js> For old files made with MPT / OpenMPT before v1.24, sample rates are now computed in periods again in linear slide mode. This fixes for example the drum line sample in Zanoma's "Late At Night". Similarly, old OpenMPT-made files that use portamento at speed 1 now sound as in OpenMPT 1.17 - 1.20 again.
   [Fix] <js> Volume column offset + retrigger effect combination was broken for looped samples and could lead to crashes.
   [Fix] <js> Playing a sample at a sample rate close to the mix rate could lead to small clicks when using vibrato.
   [Fix] <js> If no instrument number was provided, New Note Action with empty sample slot and Duplicate Note Action sample checks were broken.
   [Fix] <js> Do not apply offset command next to a note mapped to a non-existing sample slot in instrument mode.
   [Fix] <jh> Bass Expansion DSP was not applied to rear channels (broken since the dawn of time).
   [Fix] <js> Possible crash with excessive portamento down in some formats.

MPTM
   [New] <js> Each sequence now has its own restart position.
   [New] <js> Parameter Extension (#xx) now also works with Position Jump command (http://bugs.openmpt.org/view.php?id=789).
   [Imp] <js> Warn when trying to save too large IT / MPTM files.
   [Mod] <js> Samples are now compressed by default (lossless IT compression).
   [Fix] <js> Extra fine portamento didn't work properly with custom tunings. EEx / FEx now changes the pitch by x finetune steps on the first tick (http://bugs.openmpt.org/view.php?id=731).

IT
   [Fix] <js> Even after fixing it in OpenMPT 1.18, instrument Pitch/Pan Separation was only half as deep as it should be.
   [Fix] <js> Portamento with no active note still applied the portamento effect if the previous note just stopped playing on the previous tick.

IT::Compatible Playback Mode
   [Fix] <js> Default volume of the instrument is recalled if an instrument number is next to a note-off.
   [Fix] <js> Resuming sample playback using a note without instrument number after a note cut was broken.
   [Fix] <js> Remember new instrument number for next instrument-less note even when sample playback is stopped.
   [Fix] <js> A note-less instrument number next to an out-of-range note delay resulted in playing the new sample but using the old sample's length, leading to possible crashes (re-fixes player abuse test 08, got severely broken in OpenMPT 1.23).
   [Fix] <js> Only applies global volume on (multiples of) the first tick (re-fixes player abuse test 16, broke in OpenMPT 1.19).

XM
   [Fix] <js> Some probably hex-edited XM files (e.g. cybernostra weekend.xm) were not loaded correctly.
   [Fix] <js> MadTracker 2 plays portamento-ed notes even if previously no note was playing. Disable this FT2 compatibility fix for XMs made with MadTracker (fixes m3_cha.xm).
   [Fix] <js> Skale Tracker plays notes with out-of-range offset commands. Disable this FT2 compatibility fix for XMs made with Skale Tracker.
  
XM::Compatible Playback Mode 
   [Fix] <js> Portamento with no active note still played the new note if the previous note just stopped playing on the previous tick (fixes u-k3symb.xm).

S3M
   [New] <js> Added support for old vibrato style which cannot be enabled in the ScreamTracker UI and is probably not used by any modules anyway.
   [Fix] <js> Pattern loop start resets on pattern transitions (http://bugs.openmpt.org/view.php?id=757).
   [Fix] <js> Do not distinguish between vibrato types in effect memory, so that e.g. U1F followed by H00 causes the second effect to play a H1F vibrato. Effectively, this also means that Kxx will never play a fine vibrato (tx eightbitbubsy).

MOD
   [New] <js & da> Support for ProTracker 3.6 IFF-style modules (http://bugs.openmpt.org/view.php?id=752)
   [Fix] <js> ProTracker does not validate the sample loop length, which can lead to detuned chip samples if the loop length is longer than the actual sample (fixes MOD.shorttune2).
   [Fix] <js & da> Try to detect NoiseTracker files disguising as ProTracker MODs and fix Dxx pattern commands for such files (http://bugs.openmpt.org/view.php?id=749, fixes 1.11song2.mod and 2-3song6.mod).
   [Fix] <js & da> Properly import finetune of His Master's Noise Tracker modules (fixes abridge.mod, questioff.mod and others, http://bugs.openmpt.org/view.php?id=749)
   [Fix] <js> Some trimmed MOD files were not loaded correctly (fixes quartex.mod).
   [Fix] <js> Infinite pattern loops were not handled properly.
   [Fix] <js> With Amiga limits enabled, do not go below period 113, independent of finetune setting.

Other formats
   [New] <js & da> Can now read SoundFX / MultiMedia Sound (SFX / MMS) modules (http://bugs.openmpt.org/view.php?id=741).
   [New] <js> DBM: Added support for echo DSP.
   [New] <js & jh> Added built-in MO3 support that does not rely on the closed-source UNMO3.
   [Imp] <js> MT2: Support for the full dynamic range of drum channels.
   [Imp] <js> MT2: Try to apply track routing by copying plugin chains.
   [Fix] <js> MT2: Plugin parameters were not restored correctly.
   [Fix] <js> MT2: Do not reset instrument fade value if NNA is set to Note Fade (fixes driven.mt2 by Screes)
   [Imp] <js> MT2: Import more pattern commands.
   [Fix] <js> MT2: Some sample to instrument associations were missing (fixes Dream Alone by Sonic)
   [Fix] <js & da> Various Ultimate SoundTracker heuristic fixes (http://bugs.openmpt.org/view.php?id=751).
   [Fix] <js> MDL: The tail of compressed samples was slightly off in OpenMPT 1.25.
   [Fix] <js> J2B: Properly import non-existing patterns.
   [Fix] <js> Files with lots of NUL bytes at the start are no longer falsely detected as Ultimate SoundTracker modules.
   [Fix] <js> Possible crashes with malformed AMF, AMS, DBM, IT, MDL, MED, MPTM, MT2, PSM and MMCMP-, XPK- and PP20-compressed files. 

Module cleanup
   [New] <js> Add option to merge identical patterns (http://bugs.openmpt.org/view.php?id=738).
   [Fix] <js> Detecting unused samples in instrument mode will now get slightly less confused about instrument-less notes.

Stream Export
   [Imp] <jh> Ogg Vorbis and Opus support is now built-in and no longer requires an external library.
   [Imp] <jh> Add a new "MP3 (compatible)" export file type that is implemented only via libmp3lame and is the same as the old libmp3lame CBR mode with strictly ID3v1 tags only.
   [Imp] <jh> Switch libmp3lame non-compatible MP3 export from CBR to ABR mode since ABR gives better quality.
   [Imp] <js> Temporary export files are now marked as temporary in the file system to avoid writing them to disk if possible.
   [Mod] <jh> Relax Lame CBR mode restrictions: Allow bit reservoir, do not enforce ISO padding and bit reservoir restrictions, write out lame info tag, always use ID3v2.
   [Fix] <jh> Render to Sample slot failed when exporting quad surround. As quad surround samples cannot be loaded yet, the channel count selection is now limited to mono or stereo for Render to Sample.
   [Reg] <jh> Only show a single MP3 encoder. If libmp3lame is available, it is by far the best option. If the user provided a BladeEnc.dll, they almost certainly want it preferred to any ACM encoder. Selecting a different encoder is still possible by disabling the components of higher priority encoders.
   [Reg] <jh> Remove hidden setting Export.MP3LameAllowID3v2inCBR (now always true for "MP3 / CBR" and always false for "MP3 (compatible) / CBR").

Misc
   [New] <js> Added hidden setting Misc.DistinguishModifiers to distinguish between left and right modifiers (e.g. to create FT2-like play pattern shortcuts).
   [New] <js> Update check: Add possibility to ignore automatic notifications for a specific OpenMPT version.
   [New] <jh> Added command line switch /noWine which disables any Wine-specific code when running OpenMPT in Wine. Only use when instructed to do so by the OpenMPT developers.
   [Imp] <js> SF2: Try to load instruments with left and right layer as stereo samples.
   [Imp] <js> Add browse item in example song and template module menus (http://bugs.openmpt.org/view.php?id=220).
   [Mod] <js> When saving a module file, do not change its extension. Prompt for a new filename when saving a file loaded from an import-only format (http://bugs.openmpt.org/view.php?id=762).
   [Mod] <js> Update check: Use HTTPS by default. On Windows XP and older, always fall back to HTTP as TLS 1.0 is disabled by default on these systems.
   [Fix] <js> MIDI Export: Note cuts were exported incorrectly and bloated the MIDI size (http://bugs.openmpt.org/view.php?id=746).
   [Fix] <js> SF2: Many soundfont samples were completely detuned since OpenMPT 1.20.
   [Fix] <js> Sometimes a wrong MIDI input device was remembered (http://bugs.openmpt.org/view.php?id=756).
   [Fix] <js> Creating / loading a looped 16-bit stereo sample shorter than 4 samples could lead to a crash.
   [Reg] <jh> The bandwidth of the polyphase 8-tap resampling filter is no longer configurable and fixed at the previous default of 97% now. The setting only affected the upsampling part of the filter and not the downsampling part, which was rather unintuitive. The bandwidth stays configurable for the XMMS-ModPlug filter.

Bundled plugins
   [New] <js> DigiBooster Pro Echo DSP is now a built-in plugin that can also be used in module types other than DBM.
   [New] <js> The MIDI Input / Output plugin now sends MIDI Clock events.
   [Mod] <js> The MIDI Input / Output plugin is now built right into OpenMPT and no longer shipped as a separate DLL file.
   [Fix] <js> SysEx messages received from a MIDI device are now handled properly by the MIDI Input / Output plugin.

Third-Party Libraries
   [Mod] Update lhasa (v0.3.1) and UnRAR (v5.3.11).

Installer/release package
   [Fix] <js> Note Off shortcut was missing in US_mpt-ft2_classic.mkb / US_mpt-it2_classic.mkb keymaps (tx Garian).
   [Mod] <js> Added FT2-like "play pattern from start" / "play song from pattern start" shortcuts to US_mpt-ft2_classic.mkb.


v1.25.04.00 (21 November 2015, revision 5785)
---------------------------------------------
General tab
   [Fix] <js> Plugin gain control was not accessible to screen readers (http://bugs.openmpt.org/view.php?id=337).

Pattern tab
   [New] <js> Allow to skip forward / backward with navigation keyboard shortcuts and scroll wheel during playback if "follow song" is enabled.
   [Fix] <js> Recording MIDI CCs from MIDI was broken in MPTM files since OpenMPT 1.25.01.00.

VST::Plugin Bridge
   [Fix] <js> Opening the MIDI Mapping Dialog from a bridged plugin GUI could freeze the tracker.

IT/MPTM
   [Fix] <js> Global time signature values exceeding 255 rows were not loaded (but saved) correctly.

XM::Loading
   [Fix] <js> If the order list is empty, fill it with pattern 0 instead (fixes lamb_-_dark_lighthouse.xm).

MOD::Loading
   [New] <js> Support CD61 (6-channel Octalyser), FA04-FA08 (Digital Tracker), NSMS and LARD (unknown 4-channel, probably hex-edited) magic bytes in MOD files.
   [Imp] <js> Relaxed format detection heuristics for SoundTracker modules to allow more (broken) files to be loaded.

Other formats
   [Fix] <js> 669: More thorough file validation to reject files that vaguely resemble 669 files. MOD files with a song title starting with the letters "if" or "JN" had a high chance of being mis-identified as 669 modules.
   [Fix] <js> AMF: Some malformed files could result in very long loading times.
   [Fix] <js> IMF, MT2: Possible crash with some malformed files.
   [Fix] <js> MTM: Files generated by UNMO3 were not loaded properly. Generally improved playback compatibility.

Stream Export
   [Fix] <jh> ID3v2.4 tags were malformed in OpenMPT 1.25.03.00, leading to the first audio frame being skipped when playing the MP3 file (http://bugs.openmpt.org/view.php?id=725).

Misc
   [Fix] <js> MIDI Mapping Dialog: MIDI Learn did not work when opening the dialog from a plugin editor (http://forum.openmpt.org/index.php?topic=5550.0).
   [Fix] <js> Using key bindings in paths longer than 260 characters should now work properly.
   [Fix] <js> Disabling "Repeat notes on hold" for all notes at once was broken.
   

v1.25.03.00 (31 October 2015, revision 5703)
--------------------------------------------
Pattern tab
   [New] <js> Added hidden setting "Pattern Editor.EditStepAppliesToCommands" to also apply edit step to command letters (tx uctumi).
   [Imp] <js> Support effect-column volume slides when using sample sync.
   [Imp] <js> Forward / backward mouse buttons can be used to switch to next / previous order.
   [Fix] <js> Go To Dialog was not filled with sensible default values since OpenMPT 1.25.01.00.

Sample tab
   [Imp] <js> Pre-select the input field in the sample resize dialog (http://bugs.openmpt.org/view.php?id=705).
   [Imp] <js> Silence tool now works the same way for stereo samples as it does for mono samples.
   [Imp] <js> Time stretch and pitch shift are now abortable.
   [Imp] <js> When trying to load a module into a sample slot, open it directly in the tree view for importing samples.
   [Imp] <js> Forward / backward mouse buttons can be used to switch to next / previous sample.
   [Mod] <js> When loading several samples, only ask once if they should be associated with an instrument (http://bugs.openmpt.org/view.php?id=340).
   [Fix] <js> Properly update all sample lists when slicing a sample.
   [Fix] <js> Resampling a sample with a very high sample rate (> 1 MHz) crashed the program.

Instrument tab
   [New] <js> Option in sample map context menu to remove all sample associations.
   [Imp] <js> Added keyboard shortcut for scaling envelopes (default: Ctrl+E).
   [Imp] <js> Ctrl+Right-click can now also be used to delete an envelope point.
   [Imp] <js> Nicer envelope drawing at higher zoom levels. Adjust default zoom level for High-DPI screens.
   [Imp] <js> After grabbing a sustain or loop point with the mouse, it can now also be moved using the keyboard shortcuts for moving nodes.
   [Imp] <js> Show sample numbers in Sample Map editor (http://forum.openmpt.org/index.php?topic=1795.msg15678#msg15678).
   [Imp] <js> When trying to load a module into an instrument slot, open it directly in the tree view for importing instruments.
   [Imp] <js> Forward / backward mouse buttons can be used to switch to next / previous instrument.
   [Fix] <js> Previewing several notes at once was broken for XM modules.
   [Fix] <js> Bogus shortcuts were added for some envelope editor shortcuts.

VST / DMO Plugins
   [New] <js> Allow the user to enter plugin-specific tags in the plugin selection dialog. The name filter now searches for both plugin names and tags (patch partially provided by arseniiv, http://bugs.openmpt.org/view.php?id=541).
   [Imp] <js> When loading a module, indicate which plugin is being loaded in the status bar (http://forum.openmpt.org/index.php?topic=1693.0).
   [Fix] <js> Plugin editor minimizing should now also work with Wine. As a consequence, minimizing now only works through double-clicking, there are no minimize / maximize buttons any more.
   [Fix] <js> No longer apply auto-suspend logic to plugins that don't output any audio, as they can never fulfil it.

VST::Specific Plugin Fixes
   [Fix] <js> When closing Electri-Q's editor while it was minimized and having its resizeable GUI enabled, the GUI would no longer work on any host as it stored a bogus default window size.

VST::Plugin Bridge
   [Imp] <js> Implement audioMasterOpenFileSelector opcode for opening load / save file dialogs from some plugin GUIs (e.g. VOPM; http://bugs.openmpt.org/view.php?id=539).
   [Imp] <js> Speed up preset and parameter name retrieval (e.g. in plugin editor preset menu).
   [Mod] <js> Optimized audioMasterGetTime opcode caching.

MPTM::Custom Tuning
   [Fix] <js> Pitch effects (portamento, arpeggio) triggered after a note-off were broken since OpenMPT 1.22.

MOD
   [Mod] <js> As the majority of trackers including ProTracker seem to interpret F20 as tempo rather than speed, OpenMPT now does the same. The only other programs I could find that treat F20 as speed are ScreamTracker 3 and Impulse Tracker.
   [Fix] <js> Invert Loop position was not reset with instrument numbers.
   [Fix] <js> Offset beyond sample loop end was broken.

MOD::ProTracker 1/2 Mode
   [Fix] <js> Very short sample loops starting at the first sample point were detuned.

Other formats
   [Imp] <js> Better handling of tempos > 255 in MED.
   [Mod] <js> ITP: For the rare case that an ITP file loaded a 24-bit or higher quality WAV sample as an instrument, always enable the auto-normalize feature for those samples, as this was the default and fixed setting for loading such samples during most of the time when the ITP format was actively supported.
   [Fix] <js> MT2: Better handling of filters and synchronized samples.
   [Fix] <js> Crash in MED loader.
 
Stream Export
   [Imp] <jh> Write ReplayGain tags when exporting VBR MP3 using libmp3lame (http://bugs.openmpt.org/view.php?id=712). Can be disabled using "Export.MP3LameCalculateReplayGain", "Export.MP3LameCalculatePeakSample" and "Export.MP3ID3v2WriteReplayGainTXXX" settings. 
   [Imp] <jh> ID3v2 padding size is now configurable via hidden settings "Export.MP3ID3v2MinPadding" and "Export.MP3ID3v2PaddingAlignHint".
   [Imp] <jh> Use ID3v2.4 tags also when exporting VBR MP3 using libmp3lame. Toggle hidden setting "Export.MP3LameID3v2UseLame" to revert to ID3v2.3 tags.

Misc
   [New] <js> Allow to change between sharp and flat accidentals in Display settings.
   [New] <js> Added hidden settings "Display.HighResUI", which can be used to enable DPI-awareness in OpenMPT. Right now it is disabled by default because there are no high-DPI icons yet. In the future, people may want to keep this setting disabled when using plugin UIs that are not DPI-aware.
   [Fix] <js> Do not process keyboard commands while export dialogs are active (http://bugs.openmpt.org/view.php?id=704).
   [Fix] <js> Crash in 64-bit builds when trying to append a module.
   [Fix] <js> After changing the default rows per beat, the new value was not used in tempo approximation for classic and alternative tempo mode if the song was not currently playing.
   [Fix] <js> Some menu items were not greyed out when they should have been (http://bugs.openmpt.org/view.php?id=710).
   [Fix] <jh> Fix resource exhaustion on Wine when invoking any popup windows via a keyboard hotkey (http://bugs.openmpt.org/view.php?id=713).
   [Reg] <js> Remove hidden setting "Misc.ShowHackControls". All it did was showing an input field for changing the sequence margins, which can already be controlled through a different setting "Pattern Editor.DefaultSequenceMargins".

Third-Party Libraries
   [Mod] Update PortAudio (SVN r1963) and SoundTouch (v1.9.2).


v1.25.02.00 (13 September 2015, revision 5600)
----------------------------------------------
General tab
   [Fix] <js> Cloning plugins failed to copy the patch data in 32-bit legacy builds (and regular 32-bit builds before OpenMPT 1.25).

Pattern tab
   [Imp] <js> Update vibrato effect memory when seeking.
   [Fix] <js> Undoing pattern size changes didn't update the scrollbar size (http://bugs.openmpt.org/view.php?id=702).
   [Fix] <js> Possible crash when resizing pattern during playback with smooth pattern scrolling enabled.
   [Fix] <js> In smooth scroll mode, the dragging rectangle sometimes had the wrong colours.

Sample tab
   [New] <js> Can now slice samples at their cue points into several separate samples.
   [Imp] <js> Add support for Vorbis comments LOOPSTART and LOOPLENGTH in FLAC files to specify loop points (some audio engines seem to use this).
   [Fix] <js> Writing FLAC samples with a sample rate above 65535 Hz that was not a multiple of 10 Hz, or any sample rate above 655350 Hz failed. Note for software developers: Since FLAC sample rates are capped at 655350 Hz, OpenMPT now writes the real sample rate in a Vorbis comment called SAMPLERATE if it exceeds this limit. Feel free to add support for this tag in your software.

Instrument tab
   [Imp] <js> Also show the currently playing note in the status bar for notes received via MIDI (tx Xemogasa)
   [Fix] <js> Possible crash when recording MIDI while there was no instrument yet (tx Xemogasa).

Tree view
   [New] <js> Allow folders to be shown in lower part of sample browser through a right-click option.

VST / DMO Plugins
   [Fix] <js> Loading FXBs with parameter sets instead of chunks was broken.
   [Fix] <js> Update plugin name and slot number in editor window when renaming or moving a plugin.
   [Reg] <js> Disable the plugin window minimize feature on Wine, as it does not work as intended.

Playback
   [Fix] <js> Pitch envelopes were upside down in non-linear slides mode since OpenMPT 1.24.01.00.
   [Fix] <js> Avoid VSTi notes to stack up in XM files due to missing NNA handling (no, you should still not use VSTis in XM).

IT::Loading
   [Fix] Patterns containing command-less parameter values (which can be entered in some IT-compatible trackers) were imported incorrectly (fixes ckbounce.it).

MOD::ProTracker 1/2 Mode
   [Fix] <js> ProTracker offset quirks were partly broken since OpenMPT 1.24.04.00 (fixes professionaltracker.mod)

MOD::Loading
   [Imp] <js> If there are two Fxx commands on the same row and one can be interpreted as Set Speed and the other as Set Tempo, always treat the module to have CIA timing instead of VBlank timing.

Other formats
   [Imp] <js> MIDI export has been considerably improved. More commands are exported and it uses one MIDI track per instrument rather than one per pattern channel (http://bugs.openmpt.org/view.php?id=535).
   [Fix] <js> OKT: Portamento up and down were swapped.
   [Fix] <js> Possible crashes and hangs with malformed DMF, PLM, IMF, IT and MPTM files.

Audio I/O
   [Imp] <jh> Detect Wave Out errors during playback, display the detailed error code and message to the user, and try to gracefully shut down the device.
   [Fix] <jh> Fix stalled UI after longer playback with Wave Out devices, especially on Windows XP.

Misc
   [Imp] <js> Add Pitch Bend messages to MIDI macro generator.
   [Imp] <js> Add Zxx Macro Configuration dialog to the View menu and make its shortcut global.
   [Fix] <js> Song length estimation: Pattern breaks in a pattern followed by a --- pattern were sometimes calculated incorrectly in OpenMPT 1.25.01.00.
   [Fix] <js> There was an excessive performance drop on some GUI parts in the previous version.


v1.25.01.00 (16 August 2015, revision 5484)
-------------------------------------------
General tab
   [New] <js> Module artist can now be specified.
   [New] <js> Modules can now override the globally configured resampling mode. This setting is only saved in MPTM files, but can also be changed in other formats to quickly change a single module's resampling mode.
   [Mod] <js> Removed player settings button, as the most common (and only?) use case - changing the resampling mode - can now be achieved directly from this tab.
   [Mod] <js> In IT files, the default tempo can no longer exceed 255.
   [Fix] <js> The dB values shown in tooltips were wrong.
   [Fix] <js> When modifying default channel volume or panning using the sliders, default values were reset for all other channels on the same page (tx Xemogasa).

Pattern tab
   [New] <js> In the order list, it is now also possible to just copy the order list pattern numbers instead of their content ("Copy Orders" in context menu or Ctrl+Shift+C by default).
   [New] <js> Added option for smooth (tick-by-tick) pattern scrolling.
   [New] <js> Added hidden setting "Pattern Editor.NoEditPopup", which disables the "editing is disabled" popup and allows note previewing (keyjazz) in all pattern editor columns while editing is disabled.
   [Imp] <js> Apply DNA and NNA settings to live note preview. Entering Note Cut / Off / Fade also instantly previews its effect.
   [Imp] <js> Effect visualizer window size is now remembered across sessions.
   [Mod] <js> Reset beat highlight together with measure highlight (http://bugs.openmpt.org/view.php?id=662)
   [Fix] <js> When deleting orders, the pattern view did not switch to the newly selected order afterwards (tx coda).
   [Fix] <js> Effect visualizer could still not show up properly in some cases (http://forum.openmpt.org/index.php?topic=5476.0).
   [Fix] <js> Make note and data entry shortcuts always operate on octaves instead of +/- 12 notes when using custom tunings (http://bugs.openmpt.org/view.php?id=681).
   [Fix] <js> Show correct note name in status bar for custom tuning notes.
   [Fix] <js> Sample seeking didn't work properly on channels where the last note event was a note-off and didn't apply pitch envelopes.
   [Fix] <js> Panning commands were still applied when seeking even if ProTracker 1/2 mode was enabled.
   [Fix] <js> Playing patterns not present in the order list was broken since OpenMPT 1.24.03.00 (http://forum.openmpt.org/index.php?topic=5495.0).
   [Fix] <js> Jumping to a pattern through the order list would still execute the last row of the previous pattern in some cases since OpenMPT 1.24.03.00.
   [Fix] <js> Fix inconsistencies in the previous / next pattern displays when jumping around in the order list.
   [Fix] <js> Duplicating and inserting patterns didn't update the tree view properly.

Sample tab
   [New] <jh> Add Media Foundation (AAC, WMA, ASF, MP1, MP2, MP3, WAV-MSADPCM, ...) sample decoding support on Windows 7 and later (http://bugs.openmpt.org/view.php?id=422).
   [New] <jh> Support loading OggFlac sample files.
   [Imp] <js> Added dropdown menu to New button for duplicating samples.
   [Imp] <jh> Add a dropdown menu to the Open button which allows explicitly importing only known sample formats or only raw samples. This allows importing known formats as raw samples as well as allows avoiding the possibility of raw samples getting mis-interpreted as some known format.
   [Imp] <js> Don't reset sample draw status when modifying a sample.
   [Imp] <js> Show dB values for volume and percentage for panning in tooltip.
   [Fix] <js> Time stretch ratio calculator was always based on the current tempo, not on the user-supplied tempo.

Instrument tab
   [Imp] <js> Added dropdown menu to New button for duplicating instruments.
   [Imp] <js> Pitch/Pan Separation note list uses tuning note names.
   [Imp] <js> Show dB values for volume and percentage for panning in tooltip.

Tree view
   [Mod] <js> Sample / instrument preview is now stopped using Note Cut / Off / Fade keys instead of automatically fading out after some seconds.
   [Fix] <js> Dropping files made the tree view inaccessible until a new drag & drop action was initiated (tx coda).
   [Fix] <js> Previewing UAX samples played them at the wrong frequency.

VST / DMO Plugins
   [New] <js> Instrument random variation is now applied to the velocity of notes sent to instrument plugins.
   [New] <js> Tremor (Ixx) is now also supported for instrument plugins (http://forum.openmpt.org/index.php?topic=2736.0).
   [New] <js> Added hidden setting "VST Plugins.EnableAutoSuspend" which activates plugin auto-suspension for all plugins (later, this will be configurable per plugin). If a plugin didn't emit any sound during the last four seconds, its sound output is automatically suspended.
   [New] <js> It is now possible to override the project path reported to plugins (some plugins can store data alongside the module file) by using the hidden setting "VST Plugins.ProjectPath". In the setting value, %1 is replaced by the module path and %2 by the module filename (tx zetaPRIME).
   [Imp] <js> Automatically create instruments for newly added instrument plugins (http://forum.openmpt.org/index.php?topic=2867.0).
   [Imp] <js> Indicate bitness of non-native plugins in the plugin selection dialog.
   [Imp] <js> The default plugin editor is now DPI-aware.
   [Imp] <js> Allow sending incoming MIDI notes to plugins even if no instrument is assigned to them (pass data as-is).
   [Imp] <js> Loading and restoring missing plugins now also works when adding them through the Scan Folder button.
   [Fix] <js> Some VST plugins (e.g. SmartElectronix Ambience) write directly to the memory chunk that is passed to them when loading preset files. This memory block was not writeable since OpenMPT 1.22 and thus caused a crash.
   [Fix] <js> In OpenMPT 1.24, no more than one missing plugin was reported after loading a module.

VST::Specific Plugin Fixes
   [Fix] <js> HERCs Abakos stopped working in OpenMPT 1.22.02.00.

VST::Plugin Bridge
   [Imp] <js> Added support for audioMasterGetChunkFile opcode.
   [Fix] <js> MIDI events sent to 64-bit plugins or 64-bit OpenMPT were garbled.
   [Fix] <js> A couple of plugins whose editor previously froze (e.g. 4klang) will now work fine.
   [Fix] <js> KORG M1 crashed if the editor of more than one shared instance was opened (http://bugs.openmpt.org/view.php?id=683).

Playback
   [Imp] <js> Improve NNA channel allocation by also taking volume envelopes into account: If all NNA channels are used and are playing at full note volume, but are effectively muted due to their volume envelope, they can now be reused.
   [Fix] <js> Crash when playing extremely high-pitched samples.

MPTM
   [New] <js> Support for decimal default tempo (e.g. 123.45 BPM). Note that it is not possible to set decimal tempos using pattern commands yet (http://bugs.openmpt.org/view.php?id=145).
   [New] <js> Support for decimal tempo for instruments' pitch/tempo lock.
   [New] <js> In modern tempo mode, a swing factor can be configured which determines how much every row of a beat contributes to the beat (globally in the Song Properties and per pattern in the Pattern Properties). Unlike manual tempo changes, this will not mess up the timing information sent to plugins (http://bugs.openmpt.org/view.php?id=506).
   [Mod] <js> Newly created MPTM files use modern tempo mode and extended filter range.
   [Fix] <js> Fix potential misreading of some global song settings (was very unlikely to happen).

MPTM::Custom Tuning
   [New] <js> 'd' and '+' can now be used in note names.
   [Mod] <js> Behaviour change: When executing tone portamento and the sample doesn't change between the notes, re-apply the sample settings such as default volume and panning like with normal samples.
   [Fix] <js> Editing a tuning's note name no longer requires to remove the octave number first.

IT::Compatible Playback Mode
   [Fix] <js> Position jump effect on the same row as a pattern loop end immediately cuts the pattern loop.

XM
   [Imp] <js> Detect files made with MilkyTracker 0.90.87 or later and enable FT2 pan law for them.

S3M
   [Fix] <js> In S3M files not made with OpenMPT or Scream Tracker, support portamento between different samples again like in old versions of ModPlug Tracker (fixes k_vision.s3m, made in IT).

MOD
   [Mod] <js> Heuristically enable ProTracker 1/2 mode if 8xx commands seem likely to be used as sync markers rather than panning in 4-channel MODs.
   [Mod] <js> Treat EXO8 modules to have paired patterns like FLT8 modules.
   [Fix] <js> As in XM and IT, don't reset pattern loop counter on pattern breaks.

Other formats
   [Fix] <js> MT2: Don't load samples for instruments which already have a VST instrument assigned.
   [Fix] <js> Fixed crashes with malformed MED and MDL files and hangs with some truncated compressed IT samples.

Stream Export
   [New] <js> It is now possible to export to a sample slot rather than a file (http://bugs.openmpt.org/view.php?id=561).

Audio I/O
   [Mod] <jh> Add Debug.StopSoundDeviceBeforeDump (default false) setting and change the default behaviour to stop the audio device after dumping the crash information. This helps debugging crashes inside the audio thread with the default settings.
   [Mod] <jh> Remove "Sound Settings.Enable*" hidden settings. Allow switching off individual sound device backends via "Components.Block*" instead.
   [Fix] <jh> PortAudio latency calculation was wrong for WASAPI exclusive mode devices.
   [Fix] <jh> WaveRT devices are now shown as such (instead of WDM-KS) in the options.
   [Fix] <jh> Under increased system load, it was possible that WaveRT devices would stop rendering audio.

Misc
   [New] <js> MIDI Mapping: Experimental support for 14-bit MIDI controllers. Combinations of CC 0...31 and CC 32...63 now act as double-precision MIDI messages.
   [New] <js> In the settings dialog, the default artist name and default behaviour for new files (module type / template) can now be specified on the General tab.
   [New] <js> Add the possibility to forget all song window settings in the Display settings.
   [New] <js> Hidden setting Misc.AllowMultipleCommandsPerKey added to allow more than one keyboard shortcut being bound to the same key combination (may do unexpected things with existing mappings with overlapping shortcuts, so beware).
   [Imp] <js> Add dropdown menus to "New" and "MIDI Record" buttons in the main toolbar to select file type and MIDI device respectively.
   [Imp] <js> Tuning dialog: Mouse wheel can now be used to scroll the note map.
   [Mod] <js> Default directories and auto save settings have been merged into a new "Paths / Auto Save" settings tab. "Create backup files" has been moved there as well. "MIDI Record" option has been moved to the MIDI setup.
   [Mod] <jh> Show more useful information in the About dialog.
   [Mod] <jh> More defensive CPU feature detection for really old CPUs.
   [Fix] <js> Using Win+Space to change the Windows input language now takes effect immediately and no longer locks command input.
   [Fix] <jh> UnRAR code required Windows XP, while the rest of the code also works with Windows 2000. Drop the version requirement back to Windows 2000.
   [Fix] <js> Song duration estimation: Pattern loops were only calculated correctly when placed on the last channel. Pattern breaks leading to a row greater than the current pattern's size were not computed correctly.
   [Fix] <js> Fix possible crash when changing the number of channels, mostly happening when appending modules.
   [Fix] <js> When saving an external sample fails while closing the module containing the sample, the module remains open so that the user can investigate the problem.
   [Fix] <js> Hideable message box visibility settings were read from the wrong settings variable since OpenMPT 1.22.07.00.

Third-Party Libraries
   [Mod] Update lhasa (v0.3.0), SoundTouch (v1.9) and UnRAR (v5.3.2).

Installer/release package
   [Mod] <js> A great new set of example songs, with a number of free to use samples in "ExampleSongs\Samples" folder.
   [Mod] <js> Installer now places the OpenMPT icon directly in the Start menu rather than a subfolder.
   [Mod] <js> Updated US_it2_(lpchip).mkb.


v1.24.04.00 (19 April 2015, revision 4951)
------------------------------------------
Pattern tab
   [Fix] <js> Seeking with sample sync didn't apply portamento and note delay + row delay combinations accurately in some cases.

Playback
   [Fix] <js> On rows with a row delay effect, offset commands were executed on every row repetition in the previous version.

IT::Compatible Playback Mode
   [Fix] <js> Note delays are capped by the ticks per row + fine pattern delay tick count, not taking row delay into account.

MOD::ProTracker 1/2 Mode
   [Fix] <js> Instrument swapping is also applied if there was an empty sample slot "playing" (fixes arpeggios in "mr gang !!!." by arios).

Misc
   [Fix] <jh> There was a major performance regression in the previous version, mostly noticeable on Wine.


v1.24.03.00 (18 April 2015, revision 4941)
------------------------------------------
General tab
   [Fix] <js> The "Set" button for updating plugin parameters was still present by accident. Clicking the button could lead to problems with descriptive parameter values (tx eightbitbubsy).

Pattern tab
   [New] <js> Can now transpose a whole channel in all patterns via the channel header context menu (including a new shortcut).
   [New] <js> New fade curves in amplification dialog: Exponential, Logarithmic, Square Root, Quarter Sine, Half Sine.
   [Imp] <js> Greatly improved seek performance when "Maintain sample sync on seek" is enabled.
   [Mod] <js> Remove arbitrary limiting of the order list scrollbar to the first stop index in MOD / XM.
   [Fix] <js> Continuous scroll didn't work when entering chords (http://bugs.openmpt.org/view.php?id=132).
   [Fix] <js> Volume column offset command was still being displayed in the Note Properties for IT files (http://bugs.openmpt.org/view.php?id=647).
   [Fix] <js> When only enabling Amiga limits for MOD but not ProTracker 1/2 mode, invalid notes were not coloured as such.
   [Fix] <js> When switching between modules or resizing the window, it was possible for the pattern display to show garbage (http://bugs.openmpt.org/view.php?id=665).
   [Fix] <js> Clicking on the first and last item of an order selection loses the selection, like clicking any other item.
   [Fix] <js> Seeking with sample sync could misbehave when encountering PC events.

Sample tab
   [New] <js> The MPTM volume column offset command has been revamped: 9 custom cue points can be selected for each sample in the waveform's context menu, which can then be triggered using o01...o09 (http://bugs.openmpt.org/view.php?id=91).
   [New] <js> Crossfader can now use constant power (instead of constant volume) fade law for even smoother loop transitions. The sample can now optionally be faded back to its original content after the loop end. 
   [New] <js> New fade curves in amplification dialog: Exponential, Logarithmic, Square Root, Quarter Sine, Half Sine.
   [Mod] <js> Middle-C finetune adjustments are now made in cents (1/100th of a semitone) instead of Hertz.
   [Fix] <js> Inputting a new middle-C frequency created an undo step for every entered digit.
   [Fix] <js> Pitch shift was broken for stereo samples.

Instrument tab
   [New] <js> Can now load and save envelopes (http://bugs.openmpt.org/view.php?id=398).
   [Imp] <js> Entering a negative envelope scaling factor also yields sensible results for the volume and filter envelope now.
   [Mod] <js> Apply DNA and NNA settings to released notes when previewing notes (http://bugs.openmpt.org/view.php?id=437).

Tree view
   [Imp] <js> Show the missing samples dialog when using "Reload All" if there are any missing samples left.
   [Fix] <js> Samples preview was detuned for some samples (http://bugs.openmpt.org/view.php?id=14).

Mod Conversion
   [Fix] <js> Tempo commands broke when converting XM to MOD.

VST / DMO Plugins
   [New] <js> Plugin editors now have minimize / maximize buttons, which can be used to shrink a plugin window to only display the title and menu bar.

Playback
   [Fix] <js> With "loop song" disabled, the loop detection was a bit too aggressive and would stop playback when encountering nested pattern loops.

IT
   [Fix] <js> Tick-0 effects were not executed on the first tick of row repetitions (pattern delay effect) since OpenMPT 1.23.

XM
   [Fix] <js> Out-of-range global volume commands should not be ignored in XM (fixes "Reflecter" by Zodiak).

S3M
   [Fix] <js> Properly limit sample frequency and cut the sample when sliding too high.
   [Fix] <js> Tick-0 effects were not executed on the first tick of row repetitions (pattern delay effect) since OpenMPT 1.23.

MOD::Loading
   [Imp] <js> VBlank heuristic: Do not use VBlank timing if it results in a longer tune than regular CIA timing (http://bugs.openmpt.org/view.php?id=654).

MOD::ProTracker 1/2 Mode
   [New] <js> Support for ProTracker oneshot loops: If the loop start is right at the start of the sample, play through the whole sample once and then repeat just the loop part.

Other formats
   [New] <js> Can now read PLM (Disorder Tracker 2) files.
   [Mod] <js> Allow loading PAT instruments with 0 layers (such as DOO.PAT from the original GUS sample set).
   [Fix] <js> PTM: The weird behaviour of the panning command I observed was due to DOSBox' broken GUS panning. Now panning commands are imported as expected again.

Audio I/O
   [Mod] <jh> Allow smaller buffer sizes for Wave Out devices.

Misc
   [Imp] <js> Song length estimation: Properly handle panning, parameter extension (#xx), and tempo / volume slides that are on the same row as a set speed effect.
   [Imp] <jh> VU meter's decay speed is now configurable via hidden setting "Display.VuMeterDecaySpeedDecibelPerSecond". Default value is 88.
   [Mod] <js> No longer mark module as modified when switching between sequences (http://bugs.openmpt.org/view.php?id=141).
   [Fix] <js> The bold and italic styles were ignored on custom pattern and comments fonts.
   [Fix] <js> It was possible to switch song tabs while being in a modal dialog, which could lead to crashes when exiting the dialog.
   [Fix] <js> Tooltips were missing in some windows in the 32-bit build (http://bugs.openmpt.org/view.php?id=646).
   [Fix] <js> Channel Manager window was not sized properly.
   [Fix] <jh> OpenMPT 1.24 was previously no longer running on Windows 98 + KernelEx.

Third-Party Libraries
   [Mod] Update UnRAR (v5.2.6).


v1.24.02.00 (16 February 2015, revision 4761)
---------------------------------------------
Pattern tab
   [New] <js> Added support for custom pattern fonts as well as upscaled variants of the built-in fonts for High-DPI devices.
   [Imp] <js> Data entry shortcuts / scroll wheel do now take the default volume into consideration, i.e. when making a data entry in an empty volume column field next to a note, a volume command is inserted (http://forum.openmpt.org/index.php?topic=5411.0).
   [Imp] <js> Show verbose effect descriptions in the status bar instead of the short versions (http://bugs.openmpt.org/view.php?id=51).
   [Imp] <js> Note-offs from past notes are no longer written when recording notes into patterns (http://bugs.openmpt.org/view.php?id=645).
   [Mod] <js> In IT and XM, the o command (Offset) can no longer be entered into the volume column, as it's an OpenMPT-specific command. Old files using this command will still play as intended. 
   [Fix] <js> The Parameter Editor refused to work under random conditions.

Sample tab
   [New] <js> Added new shortcuts to center waveform around loop points.
   [Fix] <js> Splitting a stereo sample into mono samples didn't update the sample list in other tabs.

Instrument tab
   [Fix] <js> Plugin list was updated on every instrument change, leading to a small but noticeable performance drop.

Comments tab
   [New] <js> It is now possible to use a custom font for displaying module comments.

Tree view
   [Fix] <js> When converting samples to instruments, the instrument folder in the tree view was not updated properly (tx eightbitbubsy).
   [Fix] <js> OpenMPT 1.24 introduced a perceivable delay when loading samples for preview.

Mod Conversion
   [Imp] <js> Properly convert between IT / MPTM Hxx and XM 4xx vibrato depth.

Playback
   [Fix] <js> Vibrato was too weak in IT / MPTM with linear frequency slides since the previous version (http://bugs.openmpt.org/view.php?id=623).
   [Fix] <js> Fine portamento was sometimes too weak in IT / MPTM with linear frequency slides since the previous version.

IT
   [Mod] <js> Allow loading IT files with tempo 31 normally.

IT::Compatible Playback Mode
   [Fix] <js> Default sample and instrument panning is only reset by notes, not instrument numbers.
   [Fix] <js> Panbrello is not reset until the next note or panning command.

MOD
   [Mod] <js> To match ProTracker, the portamento target is no longer reset when a new note is encountered (like in FT2), but it is reset when the target is reached (like in IT). Fixes the intro in nuhanenatanssi.mod.
   [Fix] <jh> Fixed random crash in ProTracker 1/2 mode when using on-the-fly sample swapping (http://bugs.openmpt.org/view.php?id=626).

Other formats
   [Fix] <js> STM: Samples were not loaded correctly in some files, e.g. fracture in space" by Purple Motion (tx deus-ex, http://www.un4seen.com/forum/?topic=15448.msg113496#msg113496)
   [Fix] <js> STM: Volume slide nibbles are now prioritized correctly (fixes "fracture in space" by Purple Motion).

Stream Export
   [Mod] <jh> Remove >48 KHz support for Vorbis export. Even though Vorbis supports these sampling rates, it's not tuned for them, and using >48 KHz for any lossy codec generally does not make any sense at all.
   [Fix] <jh> Detection of available MP3 encoders was sometimes broken in the previous version.

Audio I/O
   [New] <jh> Added hidden options EnableWaveOut, EnableDirectSound, EnableASIO, EnablePortAudioWASAPI, EnablePortudioWDM-KS, EnablePortAudioDS, EnablePortAudioASIO in [Sound Settings] to disable certain types of audio drivers, if required for debugging.

Misc
   [New] <jh> Added hidden settings "Debug.StopSoundDeviceOnCrash" (default true) and "Debug.TraceAlwaysDump" (default false) which can be useful to debug sound device related problems that do not manifest in a crash.
   [Imp] <js> Various parts of the program are now DPI-aware: Parameter editor, pattern editor, channel manager, plugin manager, splitter positions, MIDI Input/Output Plugin
   [Fix] <js> When using the Song Properties dialog to change some properties of an IT file, re-saving the file always popped up the Save As dialog.


v1.24.01.00 (21 December 2014, revision 4662)
---------------------------------------------
General tab
   [Imp] <js> Clicking on the song type opens Song Properties dialog.
   [Imp] <js> If available, show a descriptive parameter value for plugin parameters instead of its numerical representation.

Pattern tab
   [New] <js> Ctrl + (Shift +) Scroll wheel can now be used as a replacement for the "(Coarse) Data Entry" shortcuts (http://bugs.openmpt.org/view.php?id=613).
   [Imp] <js> When previewing instruments with a fadeout value of 0, instantly stop them on key-up instead of letting them play forever.
   [Fix] <js> "Continue song as soon as MIDI notes are being received" didn't work in some situations.
   [Fix] <js> When using "Continue song as soon as MIDI notes are being received", the Edit Step setting was erroneously applied to the first note.
   [Fix] <js> When dragging a selection in the order list one order to the right, the document was marked as modified even though there was no change.
   [Fix] <js> Fixed crash when a module has no patterns at all.
   [Fix] <js> When only one parameter column was selected, the interpolation context menu didn't offer to interpolate this column.

Sample tab
   [New] <js> Support resampling to any arbitrary sampling rate using r8brain-free. Includes new keyboard shortcuts for upsampling, downsampling and resampling.
   [New] <js> As upsampling no longer automatically converts the sample to 16-bit, 16-bit conversion is now a separate option.
   [New] <js> Custom background and selection colours can now be specified (http://bugs.openmpt.org/view.php?id=371).
   [Imp] <js> Adjusting the sample frequency updates all playing notes' sample frequency (only works with IT and MPTM for now).
   [Imp] <js> Improved sample loop point input behaviour so that a loop start value greater than the current loop end value can be entered without having to enter the new loop end first.
   [Imp] <js> Finetune and transpose modifications are now undo-able.
   [Imp] <js> Visually distinguish sustain loop and sample grid markers.
   [Imp] <js> No longer show unsupported sample vibrato types in IT (Ramp Up) and XM (Random).
   [Fix] <js> Ramp Up and Ramp Down labels in XM vibrato settings were swapped since forever.
   [Fix] <js> When editing XM vibrato settings, the edit cursor always jumped back to the first character in the edit field.
   [Fix] <js> Rearranging samples (e.g. through song cleanup or the tree view) no longer messes up the undo buffer history (http://bugs.openmpt.org/view.php?id=600).
   [Fix] <js> The sample transpose dropdown was missing two complete octaves. The range has been extended and turned upside down (can now be understood intuitively as "C-5 is being played like note x").
   [Fix] <js> Silencing a single sample point lead to a crash (http://bugs.openmpt.org/view.php?id=610).

Instrument tab
   [New] <js> ITI instrument files can now contain external samples (like MPTM files). Select "Impulse Tracker Instruments with external Samples" from the save dialog (http://forum.openmpt.org/index.php?topic=2515.0).
   [New] <js> The first instrument of a soundfont can now be loaded directly without registering the soundfont in OpenMPT.
   [New] <js> Custom background colour can now be specified.
   [Imp] <js> Since Impulse Tracker's fade-out value is 32 times less precise than what is displayed in the editor, automatically round it when the user makes fade-out adjustments in IT files.
   [Imp] <js> When previewing instruments with a fadeout value of 0, instantly stop them on key-up instead of letting them play forever.
   [Mod] <js> Disallow OpenMPT-only "attack" setting to be used in IT and XM files. Old files using this setting still play as intended.
   [Fix] <js> When loading an instrument, force all sample views of the same module to be updated.
   [Fix] <js> Modifying envelopes using the keyboard didn't mark the module as modified.

Tree view
   [New] <js> Dropping a module or folder on the sample browser opens this module or folder for browsing.
   [New] <js> Dropping a soundfont file on the upper part of the tree view adds it to the list of soundfonts.
   [New] <js> Due to the change from external instruments in the ITP format to external samples in MPTM, "Set Path" and "Save" have been moved to samples. External samples are marked with [external], missing external samples are marked with [missing].
   [New] <js> Sample waveforms can now be reloaded from disk (e.g. after editing a sample in an external application) if OpenMPT knows the sample's original path, e.g. after loading or saving it, or using MPTM's external sample feature (http://bugs.openmpt.org/view.php?id=207).
   [New] <js> The first instrument of a soundfont can now be previewed directly from the sample browser (without registering the soundfont in OpenMPT).
   [Mod] <js> Apparently, some versions of Ableton Live mark exported WAV files as "temporary". Such files are no longer ignored in the sample browser.
   [Fix] <js> Duplicating samples was broken in OpenMPT 1.23.
   [Fix] <js> Previewing IMA ADPCM-compressed samples from the tree view was broken if the previously previewed sample was a stereo sample.

Mod Conversion
   [Imp] <js> When converting from IT / MPTM to XM, move volume column portamento to the effect column if possible, as it has a different meaning in XM.
   [Fix] <js> When converting from XM to IT / MPTM, volume column effects were not always limited properly.

VST / DMO Plugins
   [Imp] <js> When adding a new plugin through the plugin manager that is missing from some open file, it is now automatically loaded and restored in that file.
   [Imp] <js> "Randomize Parameters" now applies a customizable randomization factor - much more useful than completely random parameters.
   [Fix] <js> Regularly send editor idle commands to plugins with open editors.

VST::Plugin Bridge
   [Imp] <js> The plugin bridge does now also create crash dumps automatically. OpenMPT's /fullMemDump command line switch also applies to these dumps.
   [Mod] <js> By default, all instances of the same plugin do now share one bridge process, since a handful of plugins require this - and the loading performance is much better, too.
   [Fix] <js> Catch potential crashes while loading the plugin, like in OpenMPT (fixes instant crashes with multiple instances of SideKick v3 in different processes).

Playback
   [New] <js> S70 / S71 / S72 commands do now also work with instrument plugins.
   [Imp] <js> Smooth MIDI macros do now, to some extent, work with external MIDI messages. They interpolate from the previous Zxx or \xx parameter from the same channel to the new parameter.
   [Mod] <js> In all mix modes since 1.17RC2, a way too long volume ramp (some times up to 100 times longer than the user-supplied ramp setup) was applied for extreme global volume changes. This is now disabled except for legacy 1.17RC2 mix mode.
   [Mod] <js> Re-implemented stereo separation to be applied on the master mix. This means that it also works as expected with stereo samples and plugins now.
   [Fix] <js> NNA / DCA settings were not applied properly to plugins assigned to sample-less instruments.
   [Fix] <js> Instrument plugin arpeggio was executed on muted channels / instruments.
   [Fix] <js> Linear frequency slide mode (in all formats except XM, which already worked as intended) has been re-implemented to fix some unwanted inaccuracies which can add up very quickly when using extra-fine slides.
   [Fix] <js> Glissando should only affect tone portamento, not portamento up / down effects.

MTPM
   [New] <js> MPTM files can now contain external (on-disk) samples. When checking the "Keep sample on disk" checkbox in the sample editor, the sample data is not stored directly in the MPTM file but a relative link to the original sample file is kept (http://bugs.openmpt.org/view.php?id=368).

IT
   [Imp] <js> Added support for reading encrypted edit time in old IT files with no edit history present (discovered through Impulse Tracker source release, yay).

XM
   [Mod] <js> Revert XM compatibility export to always write out 256 order items.
   [Fix] <js> Use "normal" compatible mix mode instead of FT2 panning mix mode for XM files that were compatibility-exported with OpenMPT 1.22 or older, and XM files made with other trackers that use linear panning.

XM::Compatible Playback Mode
   [Fix] <js> Make arpeggio after portamento effect behave even more like in Fasttracker 2.

S3M::Compatible Playback Mode
   [New] <js> Compatible playback mode for S3M: When enabled, OpenMPT emulates certain ScreamTracker quirks as it did until now (linked pattern effect memory and ignored effects on muted channels). Compatible mode is disabled automatically for files made with less compatible trackers. S3M files made with OpenMPT always have this mode enabled, and its state is not saved in S3M files.

MOD
   [Imp] <js> Amiga frequency limits can now also be enforced without activating ProTracker 1/2 mode.

MOD::Loading and Saving
   [Mod] <js> M.K. and M!K! files that only have Amiga-compatible notes in their patterns automatically enforce Amiga frequency limits now (http://bugs.openmpt.org/view.php?id=563).
   [Fix] <js> Saving a sample loop with an odd length is now handled better (http://bugs.openmpt.org/view.php?id=590).
   [Fix] <js> Any non-ASCII characters were accidentally removed when loading a MOD file (broke in OpenMPT 1.22).

MOD::ProTracker 1/2 Mode
   [Fix] <js> Glissando is only applied on rows with a portamento effect, and never on the first tick of these rows.

Other formats
   [New] <js> Added support for a MOD variant introduced by SoundTracker 2.6 and Ice Tracker (http://bugs.openmpt.org/view.php?id=597).
   [Imp] <js> SoundTracker auto-slides are now imported using the volume column.
   [Imp] <js> MT2: Completely rewrote loader. Some files that would previously not load properly do now load. Support for VST plugins, drum patterns and some extended MT2 pattern commands has been added.
   [Fix] <js> ITP: Always load embedded MIDI macros for files made with OpenMPT 1.19 or older, since back then they were always read, no matter if the embed flag was set or not.
   [Fix] <js> ITP: Loading extended song properties was broken since OpenMPT 1.21.
   [Reg] <js> ITP: Saving and editing ITP files is no longer supported. ITP files are now imported as normal IT files. ITP's functionality is superseded by MPTM's new external sample functionality.

Stream Export
   [Fix] <js> F00 "stop song" abort detection for XM files didn't abort if there were samples playing with a global volume of 0.

Module cleanup
   [New] <js> "Remove unused sample data" now also finds samples with identical stereo channels and offers to optimize them to mono.
   [Imp] <js> Give information about how many plugins were removed.
   [Fix] <js> Removing unused samples no longer creates two undo points per sample.

Audio I/O
   [New] <jh> Support direct mode for Wave Out devices. This is mostly useful on Wine systems where it (for certain setups) prevents the Wine-internal resampler from kicking in.
   [Imp] <jh> Increased latency and period precision to allow sub-millisecond latencies.
   [Imp] <jh> Added per-device type default audio settings.
   [Mod] <jh> Query PortAudio for the default latency of PortAudio sound devices.
   [Mod] <jh> When changing between mono / stereo / quad channel configurations, always reset the channel mapping to default instead of basing the new one on the previous one.
   [Mod] <jh> Add a hidden setting setting "Sound Settings.PreferSameTypeIfDeviceUnavailable" which optionally changes the algorithm for selecting the fallback device if the device selected by the user (or read from the configuration) is currently unavailable. When this setting is set, a device of the same type as the currently selected is preferred instead of just defaulting to wave mapper.
   [Fix] <jh> If the soundcard is currently unavailable, some ASIO drivers allow opening the driver and report zero input and output channels in that case. Other drivers do not support loading the driver. In both cases, OpenMPT will now disallow selecting the driver in the setup dialog and hide it until restarting OpenMPT or the sound devices get rescanned.

Misc
   [New] <js> Dropping a folder that contains modules or VST plugins opens / registers them directly now (http://bugs.openmpt.org/view.php?id=510).
   [New] <js> Remember window positions for each tune individually when it is being saved. Plugin window positions are now stored using the same mechanism instead of being embedded into the module files. (http://forum.openmpt.org/index.php?topic=3280.0).
   [New] <js> Added a first-start dialog to set up some common settings. The corresponding settings have been removed from the installer.
   [Imp] <js> Song length estimation: Slightly improve calculation of nested pattern loops (http://bugs.openmpt.org/view.php?id=591).
   [Imp] <js> Song length estimation shows the length of all "hidden" subtunes in the current sequence.
   [Imp] <js> Made the MIDI Mapping dialog's mapping list more human-readable.
   [Imp] <jh> VU Meter: Rear channels are now also shown in quad mode.
   [Mod] <js> When merging the default key map into a custom key map, event types are now completely ignored, so if e.g. the user has assigned a certain key on "key hold" but the default key map uses the same key on "key down" only, this version is no longer added.
   [Mod] <js> Autosave: When "Use song's original directory" is enabled, but the song has not been saved so far, it is now saved in a sub folder called "Autosave" instead of the root of the settings directory. In this case, modules created from templates are now also autosaved into this folder instead of the template folder.
   [Mod] <jh> Added setting LoadOnStartup in [Components] to optionally load all optional components (such as MP3 encoders, UNMO3, etc.) on startup rather than first use. KeepLoaded (also in [Components]) determines whether components stay in memory after they have been used (this is the default behaviour). 
   [Mod] <js> Rename "Colours" settings tab to "Display".
   [Fix] <js> Soft Panning check box in Mixer settings didn't work (http://bugs.openmpt.org/view.php?id=602).
   [Reg] <js> Removed noSettingsOnNewVersion command line switch. It's no longer necessary as there is also a hidden setting that does the same.

Bundled plugins
   [Mod] <js> Updated PortMidi to revision 228 (fixes potential 64-bit issues).

Third-Party Libraries
   [Mod] Update lhasa to version 2014-07-12 (adds support for lhx archives).
   [Mod] Update FLAC to v1.3.1 (improved decoding and encoding efficiency, fixed two vulnerabilities when loading malicious FLAC files).


v1.23.05.00 (6 September 2014, revision 4238)
---------------------------------------------
Pattern tab
   [Imp] <js> "Edit Plugin assigned to PC Event" shortcut is now "Toggle PC Event/instrument plugin editor" (can now also be used to toggle the editor of the plugin assigned to the currently selected instrument).
   [Imp] <js> Deleting and inserting items in the order list automatically adjusts playback, sequence override and play lock positions.
   [Imp] <js> Greatly improve seek performance when "Maintain sample sync on seek" is enabled and there are samples with very small loops.
   [Imp] <js> When inserting a new pattern while a +++ or --- pattern is focussed in the order list, use the currently edited pattern for determining the new pattern's length.
   [Fix] <js> In windowed mode, the note properties dialog was not always visible.
   [Fix] <js> The order list's scrollbar's "Right Edge" menu entry was not working (http://bugs.openmpt.org/view.php?id=567).

Sample tab
   [Fix] <js> Enabling a sample loop when there were no loop points didn't update the loop point display.
   [Fix] <js> Silencing samples was slightly broken (http://bugs.openmpt.org/view.php?id=555).
   [Fix] <js> Undo could crash in some situations when the total undo buffer size previously exceeded the configured buffer limit.
   [Fix] <js> It was impossible to call the save dialog for a sample / instrument with a pipe character in the name (also applies to instrument tab, http://bugs.openmpt.org/view.php?id=564)
   [Fix] <js> Fixed possible crashes when using undo / redo, most notably when sample undo was disabled completely (http://bugs.openmpt.org/view.php?id=584).

Instrument tab
   [Imp] <js> In the sample map editor, show faint red dots for notes that are already assigned to another sample (http://forum.openmpt.org/index.php?topic=4112.msg37495#msg37495).
   [Fix] <js> Trying to play notes above B-9 caused a crash (http://bugs.openmpt.org/view.php?id=549).

Tree view
   [Fix] <js> Stopped voices sometimes still contributed to the active sample / instrument list (http://bugs.openmpt.org/view.php?id=568).

VST / DMO Plugins
   [New] <js> Plugin editor positions are now stored in module files.
   [Imp] <js> Allow drag and drop actions on plugin editors to drop preset files from Explorer.
   [Fix] <js> Program names starting with non-ASCII characters were not formatted properly.
   [Reg] <js> Partly reverted the behaviour introduced in OpenMPT 1.23.03.00 to only re-send patch numbers if they're not bank 1 patch 1, to fix legacy module playback.

Playback
   [Mod] <js> When resuming paused (not stopped) playback, previously playing samples are continued.
   [Fix] <js> "Maintain sample sync on seek" should now also work when playback was previously stopped.
   [Fix] <js> Glissando in semitones mode didn't take finetune into account (http://bugs.openmpt.org/view.php?id=585).

IT::Compatible Playback Mode
   [Fix] <js> Tone portamento target is now completely cleared with new notes, so that subsequent Gxx effects have no effect.

XM
   [Fix] <js> Clear MIDI macros for XM files made with FT2 to prevent Zxx effects from doing anything.
   [Fix] <js> Correct nominal dB values for FT2 pan law mix mode.

XM::Compatible Playback Mode
   [Fix] <js> Tentatively fix arpeggio after pitch slide behaviour (http://bugs.openmpt.org/view.php?id=542).

MOD::ProTracker 1/2 Mode
   [Fix] <js> ProTracker applies instrument changes on the first tick, even if there's a note delay (http://bugs.openmpt.org/view.php?id=574).
   [Fix] <js> Properly implemented ProTracker-style sample swapping, which is only supposed to happen at the end of the sample and not instantly.
   [Fix] <js> Correctly handle a few more edge cases of ProTracker-style 9xx offset handling.

Misc
   [New] <jh> Add hidden setting "Misc.ShowSettingsOnNewVersion" (default true) which can permanently disable showing of the settings dialog on new versions, in addition to the one-time command line switch /noSettingsOnNewVersion.
   [Imp] <js> Add support for 64-bit Vorbis library builds from mingw-w64 with slightly different file names.
   [Imp] <js> When adding a new shortcut that conflicts with an existing shortcut, do not automatically delete the existing shortcut but rather ask the user what to do.
   [Imp] <js> Add global dummy shortcut keybinding to prevent default keybindings from doing anything into if you don't like them (http://bugs.openmpt.org/view.php?id=550).
   [Imp] <js> Slightly improved icons for systems with 32-bit display mode but mysteriously missing alpha channel (http://bugs.openmpt.org/view.php?id=520).
   [Mod] <js> Merge "Note Off/Cut/Fade" and "Note Off/Cut/Fade (without instrument number)" to never write an instrument number next to those events.
   [Fix] <js> Scale main toolbar elements according to DPI settings (http://bugs.openmpt.org/view.php?id=513).
   [Fix] <js> Setting the default MIDI volume behaviour for new instruments in the Options dialog was broken.
   [Fix] <js> Potential fix for DDE error when launching OpenMPT through an associated file from Explorer (http://bugs.openmpt.org/view.php?id=461).
   [Fix] <js> After loading a new keybinding file, effect keys were no longer working until the user switched to a module with different effect keys (tx stinkbug).

Third-Party Libraries
   [Mod] Update UnRAR (v5.1.6).


v1.23.04.00 (14 June 2014, revision 4113)
-----------------------------------------
Pattern tab
   [New] <js> Added possibility to interpolate the instrument column.
   [Imp] <js> Stay at current order / pattern when removing something from the order list (http://bugs.openmpt.org/view.php?id=511).
   [Fix] <js> With overflow paste, marking the pasted pattern area was not working when the paste ended exactly in the last pattern row (broke in OpenMPT 1.23.02.00).
   [Fix] <js> Select / Copy Select keys should no longer interfere with mouse dragging (tx coda).
   [Fix] <js> Don't crash when the module doesn't have any patterns.
   [Fix] <jh> Fixed flickering of current-row highlight in pattern view on Wine (http://bugs.openmpt.org/view.php?id=522).

Sample tab
   [Fix] <js> Setting sustain loop points by typing the values in didn't update the waveform display.
   [Fix] <js> When removing DC offset from a sample, the wrong volume variable on channels currently playing the modified sample was modified.

Tree view
   [Fix] <js> It was not possible to drag and drop drums from sound banks (http://bugs.openmpt.org/view.php?id=536, x64 only).

VST / DMO Plugins
   [Imp] <js> Improve preset menu creation in the plugin editor for plugins with less than 128 presets, so that the menu is only created when needed (speeds up e.g. bridged VOPM).
   [Imp] <js> When trying to load a plugin where both the 32-bit and 64-bit version are registered in OpenMPT, prefer the native version.
   [Fix] <js> When trying to play notes in a VST GUI with no instrument assigned yet, prevent notes from being stuck after closing the instrument creation confirmation (tx coda).

VST::Plugin Bridge
   [Fix] <js> Don't crash when a plugin sends an opcode that isn't expected to have a data pointer set (http://bugs.openmpt.org/view.php?id=519).
   [Fix] <js> Unknown vendor-specific opcodes that send pointers are now rejected, as they cannot work over the bridge.

XM
   [Fix] <js> More intelligent extraction of the selected MIDI program for files that were not made with ModPlug.
   [Fix] <js> Loading ADPCM-compressed samples broke in OpenMPT 1.23 (http://bugs.openmpt.org/view.php?id=538).

S3M
   [Fix] <js> Some files created with Scream Tracker were detected as being made with Velvet Studio.

MOD
   [Fix] <js> Loading ADPCM-compressed samples was broken ever since OpenMPT 1.22.06.00.

Other formats
   [Fix] <js> IMF: Ignore note cut with a zero parameter.

Audio I/O
   [Mod] <jh> Default to 16-bit output on Wine, since some Wine versions apparently have problems with sample formats > 16bit.
   [Fix] <jh> DirectSound: Emulated drivers do not support primary buffer access. Actually test whether the device is emulated or not and do not advertise primary buffer support if it is.
   [Fix] <jh> Fix clamping / rounding of Wave Out and DirectSound buffer sizes for 24bit samples (http://bugs.openmpt.org/view.php?id=540).

Misc
   [Imp] <js> When loading plugins during startup, the error message that was potentially shown didn't appear in the task bar, making it easy to forget about such a half-initialized OpenMPT instance.
   [Fix] <js> Potential fix for a crash when loading modules through the command-line (tx coda).
   [Fix] <js> "Find MPT Hacks" erroneously identified FT2 pan law mix mode as a hack (http://bugs.openmpt.org/view.php?id=531).


v1.23.03.00 (4 May 2014, revision 4039)
---------------------------------------
VST / DMO Plugins
   [Mod] <js> If an instrument specifies a MIDI program / bank to be used, always re-send this information after restarting playback. Previously, this information was only resent during first play or when it was changed by the user. This fixes some external softsynths controlled through the MIDI I/O plugin.

Audio I/O
   [Fix] <jh> When upgrading from OpenMPT 1.23.01.00 to OpenMPT 1.23.02.00, it was possible that audio was now playing too slow instead of too fast.


v1.23.02.00 (3 May 2014, revision 4035)
---------------------------------------
General tab
   [Fix] <js> Moving plugins unintentionally broke the plugin chain in many cases (http://bugs.openmpt.org/view.php?id=514).

Pattern tab
   [Imp] <js> Don't require shift key to be pressed when entering numeric effect letters on French keyboards (http://forum.openmpt.org/index.php?topic=5279.0).
   [Imp] <js> Channel mute / channel mute on pattern transition shortcuts got extended to cover all channels covered by the selection instead of just the channel where the cursor is.
   [Mod] <js> After pasting pattern data, the pasted area is automatically selected (http://bugs.openmpt.org/view.php?id=498).
   [Fix] <js> When "loop pattern" was enabled, jumping between patterns could trigger sample syncing while playback was paused.
   [Fix] <js> Other small fixes in playback adjustment code when jumping around.
   [Fix] <js> Undoing channel deletion didn't work properly.
   [Fix] <js> Dragging an order selection also works if the first selection point isn't visible.

Sample tab
   [New] <js> Added sample transpose shortcuts to quickly change the middle-C frequency.
   [Fix] <js> Fade operation was broken in 64-bit builds (http://bugs.openmpt.org/view.php?id=507).
   [Fix] <js> Crossfading sample loops modified one sampling point too much, which couldn't be undone properly.
   [Imp] <js> WAV / FLAC saving: When there's only a sustain loop and no normal loop, ensure that it is treated as a sustain loop after reloading the sample (like it was done in older versions, tx dusthillguy).
   [Fix] <js> Load / Save / New shortcuts are now also handled properly when the upper panel is focussed.
   [Fix] <js> Adding silence to a sample that's not 8-bit mono broke in OpenMPT 1.23.

Tree view
   [New] <js> In the instrument library, Ctrl+Enter loads the selected instrument into the currently active sample / instrument editor window (http://bugs.openmpt.org/view.php?id=499).
   [Imp] <js> Ctrl+Enter starts label editing.

VST::Plugin Bridge
   [Fix] <js> Fixed KarmaFX EQ, a couple of VarietyOfSound plugins and possibly others that don't set any specific time flags, but still call audioMasterGetTime.

Playback
   [Imp] <js> For XM files, a new mix mode "Compatible (FT2 Pan Law)" has been added which is the same as the "compatible" mix mode, but this enforces FT2's pan law, while the "normal" compatible mix mode no longer does so. This should make tunes created with OpenMPT 1.22 or older not break drastically anymore if they make use of a lot of panning stuff.
   [Fix] <js> Fixed potential crash in 64-bit version when playing certain songs with instrument envelopes (tx xTr1m).

IT::Compatible Playback Mode
   [Fix] <js> Sustained envelopes were released too early if the loop end was hit on exactly the same tick as the note-off event.

MOD::ProTracker 1/2 Mode
   [Imp] <js> Added ProTracker-style offset when note but no instrument number is specified (fixes h0ffman's Revision 2014 tracked music entry).

Module cleanup
   [Fix] <js> Rearranging samples broke in the previous version (http://bugs.openmpt.org/view.php?id=497).

Audio I/O
   [Fix] <js> With new installations (and probably also upgraded ones), it was possible that OpenMPT was internally rendering at a different sample rate than the sound device was outputting (http://forum.openmpt.org/index.php?topic=5265.0).

Misc
   [Imp] <js> All parts of the Song Properties dialog are now updated instantly when switching between formats.
   [Imp] <js> Made S3M Amiga frequency limits option editable from the Song Properties dialog.
   [Mod] <js> Changed manual format from PDF to CHM. When opening help from certain dialogs, the relevant manual page is automatically opened.
   [Fix] <js> SF2 sample frequency conversion was broken in 64-bit builds (http://bugs.openmpt.org/view.php?id=508).
   [Fix] <js> Modifying patterns, samples, etc. should now always update other views of the same type of the same module properly.
   [Fix] <js> DefaultTemplate option was looking for the template file in the wrong paths.


v1.23.01.00 (29 March 2014, revision 3998)
------------------------------------------
General tab
   [New] <js> Added a tempo tap button. Click several times in a row to tap in the wanted beats per minute.
   [New] <js> Can now clone plugins (and entire plugin chains) to another slot (http://bugs.openmpt.org/view.php?id=35).
   [Imp] <js> When moving a plugin, the entire plugin chain starting from that plugin can now (optionally) be moved.
   [Imp] <js> Show real preset name instead of "current" in the plugin configuration (http://forum.openmpt.org/index.php?topic=3284.0).
   [Mod] <js> Allow editing the global volume in legacy XM files that still have it set to a non-default value.

Pattern tab
   [New] <js> Added redo functionality and named undo points.
   [New] <js> Experimental feature: Seeking in a module tries to keep sample sync. This only works under some basic conditions, e.g. samples with ping-pong loops or portamento effects are not supported. Can be enabled from the general options.
   [New] <js> Alt-clicking a channel header solos / unsolos the channel (tx Rapture).
   [Imp] <js> When right-clicking an order list item, playback no longer jumps to this item anymore if "Follow Song" is active.
   [Mod] <js> Unified note properties dialog from three tabs into one single dialog.
   [Mod] <js> Renamed "row spacing" to "edit step".
   [Fix] <js> Effect letter input does now work when a non-latin keyboard layout (e.g. Cyrillic) is being used (http://bugs.openmpt.org/view.php?id=478).
   [Fix] <js> "Copy Pattern" from the order list context menu didn't copy the last channel properly.
   [Fix] <js> Don't apply split note settings when entering special (^^, ==, etc.) notes.
   [Fix] <js> OpenMPT could crash when displaying default volumes was enabled and an instrument was deleted through the tree view (http://forum.openmpt.org/index.php?topic=5253.0).
   [Fix] <js> Quick Channel Settings: Moving the channel volume slider always disabled the surround settings (http://forum.openmpt.org/index.php?topic=5214.0).
   [Fix] <js> Parameter Editor: Initial point spacing was a bit off, so the last point was sometimes not visible.
   [Fix] <js> Channel Manager buttons are placed properly when using the WinXP theme (http://forum.openmpt.org/index.php?topic=3460.0).
   [Fix] <js> Sometimes, when changing the editor size (e.g. by maximizing a module window), the pattern would stop scrolling.

Sample tab
   [New] <js> Added redo functionality and named undo points.
   [New] <js> Added zoom levels greater than 1:1 (http://forum.openmpt.org/index.php?topic=3563.0).
   [Imp] <js> The sample grid is now visualised using dashed lines.
   [Imp] <js> Sample drawing is now also available for stereo samples.
   [Imp] <js> Sample tuner is now multi-threaded and uses SSE2 instructions when available (this speeds up the tool greatly for big samples).
   [Imp] <js> Slightly more stable frequency calculation when scrolling through the transpose list in IT / S3M formats.
   [Imp] <js> Use MIDI note velocity when previewing samples.
   [Imp] <js> When normalizing loaded samples, prevent their volume from being 0.
   [Mod] <js> Pitch shifting and time stretching does now also work for 8-bit samples without upsampling them first.
   [Fix] <js> Position marks do no longer flicker and disappear when desktop compositing (and thus, Aero) is turned on. The same fix is also applied to the envelope editor, where the problem was less pronounced (http://bugs.openmpt.org/view.php?id=372).
   [Fix] <js> When zooming into samples longer than 32767 sampling points, it was possible that the last few points were not visible (http://bugs.openmpt.org/view.php?id=162).
   [Fix] <js> Tentative fix for samples not playing completely in sample preview while song is playing - this fixes the problem only partly (http://bugs.openmpt.org/view.php?id=209).
   [Fix] <js> The zoomed-out sample display was not always accurate on CPUs with AMD MMX extensions or SSE.
   [Fix] <js> With sample selections > 1 second, the fractional part of the selection length was not displayed correctly.

Instrument tab
   [New] <js> Shift-clicking the pitch / tempo lock checkbox enables / disables the lock for all instruments (http://forum.openmpt.org/index.php?topic=5212.0).
   [Fix] <js> Sample slots occupied by the last instrument could be overwritten when loading a new instrument into another slot (http://forum.openmpt.org/index.php?topic=5253.0).
   [Fix] <js> Note preview always uses lowpass filter if "Channel default" filter type is specified. Previously, this was random and depended on how the playback channel has been used previously.
   [Fix] <js> XM panning envelope points should have a range of 0...63 instead of 0...64 (whyyyyy).
   [Fix] <js> Envelopes longer than 32767 ticks can now be scrolled correctly.
   [Fix] <js> Envelope grid is now also displayed correctly on Windows 98.

Tree view
   [New] <js> Double-clicking the instrument library path opens a folder browser dialog to quickly browse to a new location.
   [New] <js> The instrument library is now refreshed automatically when there are changes in the folder (e.g. adding new files).
   [New] <js> Backspace can now be used to go up one directory in the instrument library.
   [Imp] <js> Reduce flicker when sample / instrument status live update is enabled.
   [Imp] <js> Shift + Del in instrument library deletes files permanently (like in Windows Explorer).
   [Mod] <js> If "no loud samples" is enabled, the treeview preview is as loud as it would be in the currently active module's sample editor. Otherwise, it's played at 0dB as before (http://forum.openmpt.org/index.php?topic=5234.0).
   [Fix] <js> Selecting a pattern from the tree view to edit automatically set the document as modified.

Mod Conversion
   [Imp] <js> When converting to MOD, try to compensate for the lack of sample transpose by transposing pattern notes.
   [Imp] <js> When converting to MOD, write default speed and tempo to patterns, if possible.
   [Fix] <js> When converting an IT or XM with instruments to S3M or MOD, the last instrument was not deleted properly, which could lead to some strange sounds until the file would be re-opened.
   [Fix] <js> When converting from XM to MOD, the sample transpose wasn't reset.

VST / DMO Plugins
   [New] <js> Official plugin bridge that you can use to run 64-bit plugins in 32-bit OpenMPT and vice versa, or even plugins of the same bitness as OpenMPT if necessary. Can be enabled per plugin from the plugin manager, or can be force-enabled by setting "VST Plugins.BridgeAllPlugins" to 1.
   [New] <js> The arpeggio pattern effect is now also sent to instrument plugins (http://bugs.openmpt.org/view.php?id=479).
   [New] <js> Added an option in the plugin manager to scan a folder (including subfolders) for plugins (http://forum.openmpt.org/index.php?topic=1692.0).
   [Imp] <js> Raised plugin limit from 100 to 250.
   [Imp] <jh> Actual output latency is now passed to plugins that query it (instead of user's wanted latency).
   [Imp] <js> Plugin Selection Dialog: The up / down keys can be used to select a plugin while the name filter is focussed.
   [Imp] <js> Plugin Selection Dialog: Plugin paths are displayed in a scrollable text box now, so that the complete path can be seen in case it's too long.
   [Imp] <js> Implemented audioMasterGetChunkFile opcode.
   [Imp] <js> Implemented more timing information for plugins that want it.
   [Imp] <js> When rescanning plugins on startup is taking too long, show a progress dialog.
   [Mod] <js> Optimize VST window redrawing a little bit by not filling the window with the default background colour (removes flicker when resizing plugin windows).
   [Fix] <js> OpenMPT should no longer "forget" plugins randomly (http://bugs.openmpt.org/view.php?id=18).
   [Fix] <js> Plugins with same internal ID should no longer confuse OpenMPT's plugin cache (http://bugs.openmpt.org/view.php?id=25).
   [Fix] <js> Some plugins could produce a crash when using the buffer clearing option in export (tx coda).
   [Fix] <js> When recording a plugin's MIDI output, avoid it from being directed back to the same plugin's editor window.
   [Fix] <js> Plugin version is no longer checked when loading preset files (old OpenMPT wrote other values there, so some old presets were no longer readable).
   [Fix] <js> Plugin editor keyboard focus was lost after loading or saving plugin presets (http://bugs.openmpt.org/view.php?id=456).
   [Fix] <js> Don't add no longer existing plugins used in a module file to the list of known plugins after they have been found in the cache (http://forum.openmpt.org/index.php?topic=2304.0).
   [Fix] <js> Presets > 1000 can now also be selected in the plugin editor.
   [Reg] <js> Removed native jBridge support in favour of our own bridge. you can still use jBridge using the default method of plugin stubs, of course.

VST::Specific Plugin Fixes
   [Fix] <js> Poise by One Small Clue should no longer crash if the editor is still open when unloading the plugin (tx coda).
   [Fix] <js> AAS Strum Acoustic GS-1 and Strum Electric GS-1 no longer crash on startup (http://bugs.openmpt.org/view.php?id=454).
   [Fix] <js> ProteusVX no longer breaks OpenMPT's plugin window (http://bugs.openmpt.org/view.php?id=79).
   [Fix] <js> Fixed problems with Korg Wavestation (notes not being triggered / ghost notes) when using the panic button or jumping around in the sequence.

Playback
   [Fix] <js> When interpolation is enabled, interpolated values are no longer read from beyond the loop end, which could lead to clicks and other problems (http://bugs.openmpt.org/view.php?id=304).
   [Fix] <js> Don't potentially crash if the restart order position is followed by nothing but skip patterns.
   [Fix] <js> Glissando should now behave more as one expects in compatible mode (no longer resets after portamentos).
   [Fix] <js> Very small ping-pong loops were detuned sometimes, depending on the mixing frequency (http://schismtracker.org/scdev/read/1447/).
   [Fix] <js> Envelope carry was broken on sample-less channels (only relevant when using envelopes to automate plugins).

MPTM
   [Fix] <js> Loading some modules made with older versions of OpenMPT could produce wrong results when fixing pattern delays if there were parameter control events (since OpenMPT 1.22.06.00).

IT
   [Fix] <js> IT / MPTM instruments referencing sample slots >= 256 from versions older than OpenMPT 1.20 were not readable (http://bugs.openmpt.org/view.php?id=448).
   [Fix] <js> Legacy MPTM file detection could make OpenMPT assume that some valid IT files were invalid MPTM files in some extremely rare cases (tx stinkbug).

IT::Compatible Playback Mode
   [Fix] <js> Panbrello random waveform takes speed parameter into account now. The speed parameter determines for how many ticks the random value should be held.
   [Fix] <js> S5x resets panbrello phase.
   [Fix] <js> If there's a note delay, slide commands in the volume column next to it should not start before the delay has finished.

XM
   [Mod] <js> Volume column panning commands are now imported in the same "dumb" way (16 commands ranging from 0 to 60 instead of 0 to 64) as in FT2 and OpenMPT prior to version 1.20.
   [Mod] <js> For increased compatibility with FT2, the "compatible" mix mode uses the square root pan law (instead of linear pan law) when playing XMs.
   [Fix] <js> Support F00 "stop song" behaviour (it actually just sets the ticks per row to 65536 in FT2, so we can emulate that easily).
   [Fix] <js> Some rare files with malformed sample headers were not loading correctly anymore since OpenMPT 1.20.04.00.

XM::Compatible Playback Mode
   [Fix] <js> The E90 command retriggers the note instantly and only once per row.
   [Fix] <js> Lxx actually sets the panning envelope position if the volume envelope's sustain flag is set.
   [Fix] <js> If there's a note delay, volume column effects are not executed on the first tick and, if there's an instrument number, not on the delayed start tick.
   [Fix] <js> Mind-boggling combinations of portamento and note delay should now behave as in FT2.
   [Fix] <js> The lowest 3 bits of finetune are ignored (must be multiple of 8).
   [Fix] <js> Frequency wraparound behaviour has been refined a bit to work more like in FT2.
   [Fix] <js> Output period is clamped to 1...31999 (very theoretical range that should only be exceeded with overflowing portamentos).

S3M
   [Fix] <js> If the sample number next to a portamento effect differs from the previous number, the old sample is now kept, but the new default volume is being applied (http://bugs.openmpt.org/view.php?id=474).

MOD
   [Fix] <js> If the sample number next to a portamento effect differs from the previous number, the old sample is now kept, but the new default volume is being applied (http://bugs.openmpt.org/view.php?id=474).
   [Fix] <js> EEx + pattern break handling was always skipping rows whenever an EEx has been found after a Dxx, not only if they were on the same row (fixes Guitar Slinger and Endless by Jogeir).

Other formats
   [New] <js> Added support for 16SVX IFF samples - they are loaded as big-endian samples, while some sources suggest that they should be little-endian. Since I don't have any 16SVX samples, I can only guess which implementation would be correct.
   [Imp] <js> UMX: Added support for Unreal 1997/98 beta files (patch by sezero, http://bugs.openmpt.org/view.php?id=472).
   [Mod] <js> File format change notice: Plugin library names are stored as UTF-8 (instead of ANSI) in module files (MPTM / IT / XM) now. This won't make a difference in 99% of all plugin names probably - I've never come across a plugin DLL with non-ASCII characters.
   [Mod] <js> ITP file format change notice: Instrument paths are now relative to the ITP file if possible and are stored as UTF-8 (instead of ANSI). Embedded samples are now compressed using IT compression.
   [Fix] <jh> DMF: A bogus space was inserted in front of song messages.
   [Fix] <js> DBM: Some fixes mostly related to volume slides and envelopes.
   [Fix] <js> ITP: Song name was not being read.
   [Fix] <js> MT2: Fixed possible crash with some MT2 files (http://www.un4seen.com/forum/?topic=15448.msg107346#msg107346).
   [Fix] <js> MT2: Channel volume was not imported at all.
   [Fix] <js> STM: Imported volume commands were slightly off when there was another command next to them.
   [Fix] <js> UAX: Unnecessary empty sample slots were being created.
   [Fix] <jh> Loading split stereo samples from a truncated file could crash since OpenMPT 1.22.04.00 (http://bugs.openmpt.org/view.php?id=486).
   [Fix] <jh> Made PP20 / MMCMP / XPK unpackers more robust.

Stream Export
   [Imp] <jh> Default codec settings (per codec) and file tags are remembered.
   [Imp] <jh> Also show lossy codecs in pattern render to wave dialog.
   [Imp] <js> Resulting file size is no longer limited to 2 GB.
   [Fix] <js> Export no longer fails if song starts with separator (+++) patterns (http://forum.openmpt.org/index.php?topic=5170.0).
   [Fix] <jh> When switching focus to a different window and then back to OpenMPT, the window became unresponsive (http://bugs.openmpt.org/view.php?id=487).

Audio I/O
   [New] <jh> Add an alternate (1-bit) dithering algorithm. Default is still the original ModPlug Tracker dither (0.5-bit).
   [Mod] <jh> Since Windows Vista, there is an unpleasant limiter / compressor in the audio path for floating-point audio APIs with non-exclusive access. OpenMPT clips floating-point samples automatically to prevent this limiter from kicking in when necessary.
   [Imp] <jh> Sound device settings are now remembered per device.
   [Imp] <jh> Added options to open the sound device right at the program start and keep playing silence when stopping sound (useful for ASIO drivers with long initialization times).
   [Imp] <jh> Various improvements to sound device latency handling and ASIO buffer size selection.
   [Imp] <jh> Various improvements to DirectSound output.
   [Imp] <jh & js> Allow specifying a flexible channel mapping instead just the base channel offset for ASIO drivers.
   [Fix] <jh> Insanely high latencies in WASAPI exclusive mode have been reduced.
   [Fix] <jh> Implement all driver to host messages that are required to be handled by the ASIO 2.1 specification.
   [Fix] <js> Fixed possible freeze during start on Windows XP during Kernel Streaming initialization (patch from http://sourceforge.net/p/audacity/mailman/message/31421748/, tx Tomoya).

Misc
   [New] <js> Added (experimental) feature to append existing modules to a currently open module. This copies over all pattern, samples, instruments, plugins, etc. as far as it's possible.
   [New] <js> Added hidden setting for loading a default template ("Paths.DefaultTemplate" - can be either a full path or just a filename that can be found in the template folder, http://bugs.openmpt.org/view.php?id=476).
   [New] <js> MIDI Mapping does now also work with aftertouch messages.
   [New] <js> Added a "Samples" tab to the options dialog which exposes all previously hidden sample and instrument editor options. Two new key behaviours for how to stop sample editor note previews have been added.
   [New] <js> Added command line switch /noAssembly which disables any SIMD-optimized code.
   [Imp] <jh & js> OpenMPT's file handling is now almost fully unicode-aware (http://bugs.openmpt.org/view.php?id=164).
   [Imp] <js> OpenMPT is now large address aware.
   [Imp] <js> Replaced the "slightly" aged Win95-style icon set with a more modern one.
   [Imp] <js> Default key bindings are now automatically added to existing, possibly incomplete keybindings (http://bugs.openmpt.org/view.php?id=4).
   [Imp] <jh> Improved OpenMPT close time by only writing values to the settings files that were actually changed in OpenMPT.
   [Imp] <js> Reduced OpenMPT's initial memory consumption by about 5 MB.
   [Mod] <js> Disabled mix mode RC3 for XM / IT in Song Properties.
   [Mod] <js> New high-resolution application icon by Nobuyuki.
   [Mod] <jh & js> Restructured Sound Card, Player and Equalizer options tabs into Sound Card, Mixer and DSP. Changed the unit of volume ramping settings from samples to microseconds so that stays consistent across sample rate changes.
   [Mod] <js> After 16 years of rotozooming, it's time for a new toy in the About dialog.
   [Fix] <js> Scroll / Num / Caps Lock keys should now work better with toggle-able shortcuts (http://bugs.openmpt.org/view.php?id=13).
   [Fix] <js> Randomly disappearing combo boxes should hopefully be a problem of the past (http://forum.openmpt.org/index.php?topic=3518.0).
   [Reg] <js> Removed simple noise reduction DSP. Noone is going to miss this.
   [Reg] <jh> Removed support for importing old registry-based settings. If you really need to import your settings from a version older than OpenMPT 1.17.02.40 (including MPT 1.16), install and run OpenMPT 1.22 before installing a newer version.

Bundled plugins
   [Imp] <jh & js> The MIDI Input / Output Plugin can now compensate for OpenMPT's audio output latency by delaying the MIDI output accordingly.

Third-Party Libraries
   [Mod] Update flac (v1.3.0), SoundTouch (v1.8.0), smbPitchShift (v1.2), unmo3 (v2.4.0.5).

Installer/release package
   [New] <js> Added key maps that are compatible with MPT's classic FT2 / IT keymaps (US_mpt-ft2_classic.mkb, US_mpt-it2_classic.mkb, tx Gargaj).


v1.22.07.00 (16 November 2013, revision 3235)
---------------------------------------------
Tree view
   [Fix] <js> Space key couldn't be used when editing labels.
   [Fix] <jh> The global VU meter didn't work properly when previewing instruments in OpenMPT 1.22.06.00.

VST / DMO Plugins
   [Fix] <js> When rendering the full module (i.e. not a selection), the song position was not reset properly, so some plugins were not in sync.

Stream Export
   [Fix] <jh> Exporting to a directory or file name with non-ASCII characters could fail in OpenMPT 1.22.06.00 (http://forum.openmpt.org/index.php?topic=5158.0).


v1.22.06.00 (2 November 2013, revision 3063)
--------------------------------------------
Pattern Tab::Note Properties
   [Fix] <js> IT / S3M volume slide mapping was a bit off.

Tree view
   [Fix] <js> Note-off on key-up was accidentally also applied to the lower part of the tree view.

VST / DMO Plugins
   [Imp] <js> Audio is no longer paused while a plugin is loaded.
   [Fix] <js> SysEx messages are sent to plugins in a different way now. This fixes SysEx messages sent through OpenMPT's MIDI Input / Output plugin.

MPTM::Loading
   [Fix] <js> Loading MPTM files made with older versions of OpenMPT could trash some Parameter Control parameters.
   [Fix] <js> Reading extended instrument and song properties in files with no samples was broken for the I-don't-know-how-manieth-time (also applies to IT files).

IT::Compatible Playback Mode
   [Fix] <js> In Compatible Gxx mode, sliding between two different samples shouldn't switch to the new sample (like in XM).

XM::Loading
   [Imp] <js> Don't enable smooth ramping heuristic for old XM revisions (this feature was introduced in a later version of Fasttracker 2).

MOD::Loading
   [Imp] <js> When loading SoundTracker modules, automatically enable ProTracker 1.x mode.
   [Imp] <js> Re-enabled support for ADPCM-compressed samples.

Other formats
   [Imp] <js> Updated RAR unpacker. All RAR formats up to the current RAR 5.0 are now supported.
   [Imp] <js> DBM: Support for panning envelopes, 32-bit samples, pattern names, multiple songs and various other small improvements.
   [Imp] <js> Added support for AMS (Velvet Studio) format revision 2.0.
   [Fix] <js> AMS (Velvet Studio): Default speed and tempo broke in OpenMPT 1.22.03.00. Instrument fadeout was too quick. Vibrato Envelope is now imported more correctly.
   [Fix] <js> AMS (Extreme's Tracker): 16-bit sample support was broken.
   [Fix] <js> DSM: Fixed broken patterns and added support for delta-encoded samples.
   [Fix] <jh> Loading some malformed files in various format could lead to a crash (introduced in OpenMPT 1.22.03.00).
   [Fix] <jh> WAV Loader: Loading 24-/32-bit WAV files as module crashed since OpenMPT 1.22.04.00 (http://bugs.openmpt.org/view.php?id=436).
   [Fix] <jh> When loading modules from a ZIP file, no longer overwrite existing song comments with ZIP file comments (broke in OpenMPT 1.22.02.00).

Stream Export
   [New] <jh> Use a common dialog for WAV and compressed exporting. Support for FLAC (built-in), Opus and OGG Vorbis has been added.
   [New] <jh> WAV export also supports tags now.
   [New] <jh> Can now also normalize audio during compressed export (via temporary file).
   [New] <js> Added option to clean output buffers of plugins before exporting (renders up to 20 seconds of silence per plugin, http://bugs.openmpt.org/view.php?id=19).
   [New] <jh> Added option to disable cue point writing on pattern transitions in WAV export (http://forum.openmpt.org/index.php?topic=5131.0).

Audio I/O
   [New] <jh> Added support for Kernel Streaming sound output on Windows XP and for WaveRT on Vista or newer. Both drivers are listed as "WDM-KS" in the soundcard options dialog.
   [New] <jh> Added a button to re-enumerate sound devices to soundcard options dialog. This allows selecting sound devices that got added / installed while OpenMPT was already running.
   [Imp] <jh> Removed static limit of 16 DirectSound and 8 ASIO devices.
   [Mod] <jh> Remove /wavex command line option (not relevant anymore on any of the supported Windows versions)
   [Mod] <jh> Always default or fallback to a Wave Out device which is by far the most stable and has the least surprising user experience.
   [Mod] <jh> Slightly changed audio thread code to avoid sporadic deadlocks in Wine.

Misc
   [New] <js> Added command-line option /fullMemDump to write a minidump with heap when OpenMPT crashes.
   [Imp] <jh> Limit WFIR cutoff setting to a sensible range.
   [Mod] <jh> Calculate mixer channel statistics over the interval as maximum used channels instead of a approximation of average used channels.


v1.22.05.00 (31 August 2013, revision 2622)
-------------------------------------------
General Tab
   [Imp] <js> Plugin parameters are now also updated while dragging the corresponding slider (tx madbrain).

Sample Editor
   [Imp] <js> Don't limit size of loaded sample file to the size of physical memory (old code relict).

Instrument Editor
   [Imp] <js> FLAC files are also shown in the file selection dialog.

Tree view
   [New] <js> Can now drag and drop samples / instruments between modules (tx madbrain).
   [Imp] <js> Releasing note keys now also stops sample / instrument previews (tx madbrain).
   [Fix] <js> Previewing sound font instruments in the treeview broke in OpenMPT 1.22.04.00 (http://bugs.openmpt.org/view.php?id=429).
   [Fix] <js> Trying to rename items that are not part of a song folder crashed the application.
   [Fix] <js> Adding and renaming sequences didn't update the tree view properly.

Playback
   [Fix] <js> Fine / extra fine portamento slides in IT / S3M with a parameter of 0 were broken in OpenMPT 1.22.04.00 (http://bugs.openmpt.org/view.php?id=433).

Other formats
   [Fix] <jh> DSM: Support files that start with a slightly different header than usual DSM files (http://forum.openmpt.org/index.php?topic=5091).

Audio I/O
   [New] <jh> Added 32-bit floating point output for drivers that support it.

Misc
   [Reg] <jh> Remove mpt_intl.ini and mpt_intl.dll support code which was solely usable to translate the options list in the general options tab.

Third-Party Libraries
   [Mod] Update zlib (v1.2.8).


v1.22.04.00 (6 August 2013, revision 2581)
------------------------------------------
Pattern Editor
   [Imp] <js> If more than one channel is selected, channel record select and channel reset shortcuts are now applied to all selected channels (tx coda).
   [Imp] <js> Also show name of unsupported commands in status text. Only really useful when importing files that contain effects not compatible with the current edit format.
   [Fix] <js> When removing channels or rows from a pattern, a crash could occur when the cursor was previously placed in a now inaccessible part of the pattern.
   [Fix] <js> After stopping playback, scrolling to previously invisible channels would reveal their last visible VU meter state (broke in OpenMPT 1.22).

Sample Editor
   [New] <jh> Support for floating point .wav files written with old versions of Syntrillium CoolEdit.
   [Mod] <jh> Normalization of 24-/32-bit samples on load is now optional. Disable it by setting "Sample Editor.MayNormalizeSamplesOnLoad" to 0.
   [Mod] <jh> When normalizing of 24-/32-bit samples on load, the sample's global volume is now adjusted to reflect the volume change if possible.
   [Fix] <js> Fixed crash when trying to trigger a note > B-9.
   [Fix] <jh> Reduce quantization noise by correcting the rounding and scaling in floating point conversion and float or 24-/32-Bit normalization when loading such WAV samples.

Tree view
   [Imp] <js> Can now load more than 64 soundfonts (http://bugs.openmpt.org/view.php?id=333).
   [Fix] <js> Fixed a rare crash when switching between previewed files in tree view (probably present since OpenMPT 1.22.01).
   [Fix] <js> Fixed various issues with editing sequence / instrument / pattern names.

VST / DMO Plugins
   [Imp] <js> Plugin Selection Dialog: When using the name filter, highlight matching plugin by default instead of the "no plugin" entry (tx coda).
   [Fix] <js> Preset names with ampersand characters in them weren't drawn properly in the plugin editor.

Playback
   [Imp] <js> Improved internal sample frequency precision.
   [Imp] <jh> Improved precision of polyphase 8-tap resampling filter tables by 1 bit.
   [Mod] <js> Disabled some questionable "optimisations" with cubic spline and linear interpolation that would disable interpolation depending on volume levels and sample frequency.
   [Fix] <js> In IT compatible and "old random variation" mode, panning variation was not applied if the same instrument also had a panning envelope.
   [Fix] <js> Pitch / Pan separation wasn't applied if the channel was panned way to the left.
   [Fix] <jh> Dithering is also applied when using 24-Bit output.
   [Fix] <jh> When applying global volume, ramping up and down lengths were mixed up. For stereo or quad output, the global volume ramping length was also only half the configured length.
   [Fix] <jh> In quad channel output mode, also apply equalizer to rear channels.
   [Fix] <jh> Avoid tiny rounding errors when converting between integer and floating point samples in the mixer.
   [Fix] <jh> Apply AGC volume changes to all channels at once instead of potentially decrementing volume in between processing different output channels. Also, limit ramp down speed to 1 step per sample (as it was for mono output).

MPTM::Loading
   [Mod] <js> Removed order truncation note for old MPTM files with long order lists (the order list was not actually truncated).

IT::Compatible Playback Mode
   [Fix] <js> Fine volume slides in the volume column are only executed on the first tick, and not on multiples of the first tick in case of a pattern delay.

XM
   [New] <js & jh> Added extra smooth ramping option in Song Properties to emulate Fasttracker 2's ramping algorithm (kills most percussion sounds). Set "Misc.SmoothFT2Ramping" to 1 to automatically detect if an XM file was made with Fasttracker 2 to enable this settings automatically.

XM::Loading and Saving
   [Fix] <js> A default speed / tempo of 0 should be ignored in XM headers (fixes transwave by jazz & motion).
   [Fix] <js> Saving XM files with non-existing patterns past the highest existing pattern number in the order list does no longer crash.

XM::Compatible Playback Mode
   [Fix] <js> Emulate FT2's very weird frequency wraparound behaviour with 2xx effects (http://bugs.openmpt.org/view.php?id=386).
   [Fix] <js> Note-Off + Note Delay + Panning ignores the panning effect.
   [Fix] <js> Arpeggio emulation is now finally 100% accurate with speeds greater than 16.

MOD
   [Fix] <js> EEx + Dxx on the same row causes the target row of Dxx to be skipped in ProTracker (fixes condom_corruption by Travolta).
   [Fix] <js> When using EEx, there should be only one "first tick" event. Ticks that are multiples of the song speed are longer treated as first ticks.
   [Fix] <js> SoundTracker modules with "hidden" patterns in their order list didn't play properly anymore (probably since v1.22.03, affected e.g. Bad Dudes soundtrack).

MOD::ProTracker 1/2 Mode
   [Fix] <js> Frequency limiting was not always done correctly (Fixes black_queen.mod).

Other formats
   [Imp] <js> AMS: Added support for reversed sample loops (starting at sample end).
   [Imp] <js> PTM: Note Cut and some other commands should work better, added support for effects Jxx - Mxx (note slides) and Nxx (reverse sample + offset). Some effects show up as "?" in patterns now, this does not affect playback.
   [Mod] <jh> Replaced LHA unpacker by lhasa. Should be more reliable and support more LHA variants, including PMA and LZS.
   [Fix] <js> RAR support broke in OpenMPT 1.22.02.
   [Fix] <js> MT2: Repeated pattern events are now loaded correctly.
   [Fix] <js> MT2: Convert effects from XM to IT on loading, this fixes e.g. global volume commands.
   [Fix] <js> DSMI AMF: Version 8 / 9 files didn't load correctly.

Stream Export
   [Imp] <jh> Normalizing is now also available for 32-Bit WAV output.
   [Mod] <jh> Always enable "Export as MP3" menu entry and display a useful message box when no MP3 codec is found.
   [Fix] <jh> Rendered output is not clamped before normalizing anymore. WAV output is now dithered properly.
   [Reg] <jh> Remove possibility to export MP3 encapsulated in .wav files. It's not 1999 anymore.

Module cleanup
   [Mod] <js> "Remove unused patterns" no longer automatically executes "rearrange patterns".

Misc
   [New] <js> Added option in the MIDI configuration to ignore certain MIDI CCs when recording to pattern.
   [Mod] <jh> Removed /nomp3 command line switch as MP3 support is now initialized on demand instead of when launching OpenMPT.
   [Mod] <jh> 24-/32-bit samples in DLS files are no longer normalized on load.
   [Fix] <js> Song Length Estimation handles some pattern loops more correctly now (http://bugs.openmpt.org/view.php?id=416).
   [Fix] <js> Song Length Estimation doesn't break with some tempo slide down commands anymore (http://bugs.openmpt.org/view.php?id=416).
   [Reg] <jh> Enable MMX / 3DNow! / SSE acceleration is gone. This option is now always enabled when available.
   [Reg] <js> Removed hidden setting ITCompressionVerification (algorithm has been proven to be stable and verification is now part of the internal test suite).


v1.22.03.00 (18 May 2013, revision 2094)
----------------------------------------
Pattern Editor
   [New] <js> Clipboard entries can now be renamed in the Pattern Clipboard Manager by double-clicking them (http://bugs.openmpt.org/view.php?id=374).
   [Imp] <js> When using Insert Rows, the selection is not cleared anymore, allowing the user to execute the same command several times in a row.
   [Fix] <js> Reverted playback cursor display behaviour to how it worked before OpenMPT 1.22 (the playback cursor no longer stays in the pattern after playback has stopped).
   [Fix] <js> Pattern Step didn't update pattern VU meters properly.

Sample Editor
   [Fix] <js> Split stereo sample didn't update the instrument list in the pattern editor (http://bugs.openmpt.org/view?id=382).

Mod Conversion
   [Imp] <js> When converting to MOD or XM, --- and +++ order items are automatically removed and pattern jump commands are updated accordingly.

VST / DMO Plugins
   [Fix] <js> Changing MIDI input focus to a plugin editor only worked right after focussing the editor for the first time.

Playback
   [Mod] <js> Behaviour change: Allow S9F next to a note to work with looped samples (http://bugs.openmpt.org/view.php?id=12).
   [Fix] <js> Extra-smooth ramping is now also applied with no and linear interpolation (http://bugs.openmpt.org/view.php?id=291).
   [Fix] <js> Per-instrument ramping settings were ignored during wave export in some cases.
   [Fix] <jh> Fix volume ramping on samples played on the first row / tick of a song. Ramping is no longer disabled completely to fix pops due to global volume changes on the first row.

IT::Saving
   [Fix] <js> If an instrument referenced sample numbers >= 256, the sample mapping would break in IT and MPTM files (http://forum.openmpt.org/index.php?topic=5014.0).

XM
   [Fix] <js> Portamento didn't reset finetune in jam007.xm (http://bugs.openmpt.org/view.php?id=390).
   [Fix] <js> Only instrument numbers should reset sample panning, not lone notes (http://bugs.openmpt.org/view.php?id=385).

XM::Compatible Playback Mode
   [Mod] <js> No longer apply global volume on tick 2, since this was only part of the truth (http://bugs.openmpt.org/view.php?id=388).
   [Fix] <js> Fixed Rxy + note / instrument combination (http://forum.openmpt.org/index.php?topic=4999.0).
   [Fix] <js> Note Off for an instrument with no volume envelope only should fade the sample out if there is a volume command in the volume column (http://bugs.openmpt.org/view.php?id=387).
   [Fix] <js> Instrument number resets tremor count (http://bugs.openmpt.org/view.php?id=384).

XM::Loading and Saving
   [Mod] <js> +++ and --- entries are no longer exported to XM files. +++ entries are removed when reading old XM files made with ModPlug.

MOD::Loading
   [Imp] <js> Changed 8xx panning scheme detection heuristic to be less strict (fixes LOOKATME.MOD).

Other formats
   [New] <js> Can now import DIGI (Digi Booster) modules.
   [Imp] <js> DMF: Offset without note should now work.
   [Imp] <js> DMF: Volume 1 should be silent.
   [Fix] <js> MT2: Linear frequency slides were not enabled.
   [Fix] <js> MT2: Stereo samples were not loaded correctly.
   [Fix] <js> MT2: Sample tuning is more precise now (but still not perfect in all occasions).
   [Fix] <js> Reading song message in 669, AMS, DMF, FAR, ULT and MTM files could lead to crashes (since OpenMPT 1.22.02, http://forum.openmpt.org/index.php?topic=5002.0).
   [Fix] <js> Reading ZIP files could lead to crashes (since OpenMPT 1.22.02).

Module cleanup
   [Fix] <js> Rearrange instruments was broken... again.

Audio I/O
   [Fix] <jh> Fixed another possible crash with ASIO devices (http://bugs.openmpt.org/view.php?id=379).
   [Fix] <jh> Fixed crash in quad channel mode (crash occurred only since OpenMPT 1.22.02, but the source for it was there since probably forever).

Misc
   [Imp] <js> Added "made with" tracker identification to most module formats. Can be viewed in Song Properties.
   [Mod] <js> Warning log messages are no longer shown during auto save.


v1.22.02.00 (20 April 2013, revision 1917)
------------------------------------------
Instrument tab
   [Mod] <js> When importing DLS drum samples into an XM instrument, pick the center of the sample's assigned note range as a transpose amount instead of the lowest note of the note range (http://bugs.openmpt.org/view.php?id=376).

Tree view
   [Mod] <js> Instrument previews in the tree view are now played at 0dB.

VST / DMO Plugins
   [Imp] <js> If a plugin editor is focussed, MIDI is now always routed to that plugin.
   [Mod] <js> effBeginSetProgram and effEndSetProgram opcodes are sent when performing a program change.
   [Fix] <js> audioMasterGetPreviousPlug / audioMasterGetNextPlug opcodes were not doing anything that made sense.

VST::Specific Plugin Fixes
   [Fix] <js> OpenMPT could possibly freeze when starting WASAPI output of a module that uses the Sytrus plugin (and possibly other plugins).

IT
   [Fix] <js> Instrument numbers higher than the last instrument act like empty instruments.

IT::Compatible Playback Mode
   [Fix] <js> Fixed a rather rare envelope carry bug introduced in OpenMPT 1.22.01.00.

MOD::Loading and Saving
   [Imp] SoundTracker Loader: Made file rejection heuristics a bit more strict.
   [Fix] SoundTracker Loader: Fixed possible division by zero.
   [Fix] Saving: Maximum sample length was off by a few bytes.
   [Fix] Saving: It was still possible for samples to misalign if the saved sample was originally larger than 128 KiB and had an odd sample count.

Other formats
   [Fix] <js> PSM16 loader: Master volume was not loaded properly.

Audio I/O
   [Imp] <jh> Boosting of audio thread priority can now be disabled in the Sound Card settings. On Windows Vista and later, MMCSS is now used for boosting.
   [Imp] <jh> Support for exclusive device access has been added for WASAPI devices.
   [Mod] <jh> Renamed "Use secondary buffers" option to the negated form "Use primary buffer".
   [Fix] <jh> Fixed a possible crash when stopping a Wave Out device and possible freezes with ASIO / WASAPI devices.

Misc
   [New] <js> Added global, always active VU meter with clip indicator in the main toolbar (http://bugs.openmpt.org/view.php?id=144).
   [Imp] <js> MIDI CC shortcuts should now work in pretty much all places.
   [Imp] <js> When changing MIDI input devices, the change is applied instantly. Previously the old MIDI device was kept open.
   [Fix] <js> Time display was not updated anymore in OpenMPT 1.22.01.00 when jumping around in the order list without actually playing the module.
   [Fix] <js> Options dialog: Pre-amp warning was also shown when changing stereo separation.


v1.22.01.00 (6 April 2013, revision 1749)
-----------------------------------------
Pattern tab
   [New] <js> Can now copy multiple patterns at once (http://forum.openmpt.org/index.php?topic=3706.0).
   [New] <js> Added the Pattern Clipboard Manager to use more than one internal clipboard (http://bugs.openmpt.org/view.php?id=41).
   [New] <js> Chord Editor: Added the possibility to make chords relative to a note entered in the pattern instead of a fixed base note (http://bugs.openmpt.org/view.php?id=360).
   [New] <js> Added shortcut to find nearest instrument number in a channel (tx coda).
   [New] <js> Added shortcuts to toggle PC keyboard / MIDI record note off (http://bugs.openmpt.org/view.php?id=326).
   [New] <js> Added shortcuts: Select Row, Select Event (http://forum.openmpt.org/index.php?topic=3247.0).
   [New] <ks> Added hidden setting "Pattern Editor.RowDisplayOffset" in to specify displayed row offset in the pattern editor (does not affect Goto dialog or pattern effects).
   [Imp] <js> Added fake grace note support for record quantization: If there's already a note on the quantized row, move one row downwards.
   [Imp] <js> Chord mode does now also work if no record channels are selected.
   [Imp] <js> "Record Note Off" also works with chords now.
   [Imp] <js> Higher live record precision.
   [Mod] <js> Play Whole Row While Recording is now also applied to Quick Paste and Clear+Step commands (tx coda).
   [Fix] <js> Play Whole Row While Recording didn't work properly when Row Spacing was set to a value other than 0. Note stops didn't work, either (tx coda).
   [Fix] <jh> Pattern display no longer lags with high Wave Out latency values.
   [Fix] <js> When entering a chord, notes played via instrument plugins were not stopped on key-up.
   [Fix] <js> Setting channel panning from Quick Channel Settings dialog didn't reset the surround flag live.
   [Fix] <js> When inputting MIDI notes > B-9, they are now stopped properly on key-up (tx Knoeki).
   [Reg] <js> Removed possibility to copy parts of the order list in favour of the new multi-pattern copying.

Pattern tab::Find/Replace
   [Imp] <js> Replacing has been sped up significantly, especially with large modules (http://bugs.openmpt.org/view.php?id=334).

Sample tab
   [New] <ks> Can now import MPEG samples (MP1 / MP2 / MP3, requires mpg123).
   [Imp] <js> ITI files can now also be read as samples (only reads the first sample, naturally).
   [Imp] <js> Sustain loop preview is now updated instantly (http://bugs.openmpt.org/view.php?id=108).
   [Mod] <js> 8-Bit/Mono conversion items are now also shown in the context menu if a selection has been made.
   [Fix] <js> Memory was leaked when loading a sample into an empty sample slot and undoing that action.
   [Fix] <js> Inserting samples didn't clear previously existing sample names since some time ago.
   [Fix] <js> The sample filename wasn't imported properly when loading a FLAC sample with embedded RIFF chunks.
   [Fix] <js> Selection length display didn't show the correct length in seconds for long samples.

Instrument tab
   [Imp] <js> Mouse wheel and middle mouse button can be used in Sample Map (http://bugs.openmpt.org/view.php?id=345).
   [Imp] <js> Next / Previous Instrument shortcuts and the tab key also work on the sample map now (tx coda).
   [Imp] <js> Revised sample slot allocation behaviour when loading sample files as instruments.
   [Mod] <js> Filter mode is now disabled for IT modules (defaults to "Channel default").
   [Fix] <js> After cleaning up instruments, inserting a new instrument would reveal the old (deleted) samples.

Tree view
   [New] <js> Some items (order list, pattern / sequence / sample / instrument names) can now be edited directly from the tree view.
   [Imp] <js> Previewing instruments does not open the audio device for every new preview anymore. Previewing the same file multiple times in a row no longer reloads it from disk every time.
   [Imp] <js> It is now possible to switch between the upper and lower part of the tree view by pressing the Tab key (http://bugs.openmpt.org/view.php?id=101).
   [Imp] <js> Soundfont instruments can now also be previewed for other notes than middle-C.
   [Imp] <js> Pause / Stop playback keyboard shortcuts also work when no module is loaded (to stop preview in tree view).
   [Imp] <js> Navigating with keyboard (e.g. using alphanumeric keys in the instrument browser) should work much better now.
   [Fix] <js> Previewing instruments only worked about every other time.

Mod Conversion
   [Imp] <js> Volume column a/b/c/d slide memory is now fixed when converting to MOD / XM / S3M.
   [Imp] <js> 000 (arpeggio with no parameters) commands are now removed when converting from MOD / XM to other formats.
   [Fix] <js> When resizing small patterns to 64 rows for MOD / S3M, the pattern break command was inserted on the new last row (63) instead of the original last row.

VST / DMO Plugins
   [New] <js> Can now load and save FXB (plugin preset bank) files.
   [New] <js> Can now copy & paste current preset in the plugin editor.
   [New] <js> Added an option in the plugin editor to route a plugin's MIDI output to the pattern / sample / instrument editor.
   [Imp] <js> If no default directory for presets is specified, the plugin's directory is suggested in the load / save dialog by default.
   [Imp] <js> Current program name is now suggested when saving FXP files.
   [Imp] <js> Better preset list creation for plugins that don't support retrieval of indexed program names (such as VOPM).
   [Imp] <js> Plugin Selection Dialog: Selecting "no plugin" no longer makes OpenMPT forget the last used plugin.
   [Imp] <js> Offline rendering state is sent to plugins that request it.
   [Fix] <js> The preset menu is now updated correctly if the plugin requests a GUI update (e.g. internal bank switching).

Playback
   [Imp] <js> Instrument envelopes are now also evaluated if no sample, but a MIDI channel is assigned to the instrument - great for automating plugins using envelopes and macros.
   [Imp] <js> Retrigger note also works with instrument plugins on rows without a note, and also with Cxx volume commands in XM.
   [Mod] <jh> In quad surround mode, the surround channel settings overwrites the reverb channel setting now (previously, it was the other way around).
   [Fix] <js> Fixed problem where one had to press the play button twice after stopping playback (http://bugs.openmpt.org/view.php?id=325).
   [Fix] <js> A crash could occur when using reverb with a mixing frequency higher than 50 KHz (http://bugs.openmpt.org/view.php?id=329).

IT / MPTM
   [New] <js> Experimental support for saving IT-compressed samples. To enable, set the ITCompressionMono=x and/or ITCompressionStereo=x (x is a sum of the following possible values: 1 = normal IT; 2 = Compatibility Export IT; 4 = MPTM) in mptrack.ini's [Misc] section; set ITCompressionVerification=1 to verify if samples are compressed correctly. Compressed stereo samples won't load in older versions of OpenMPT, and compressed samples will cause trouble when reading extended song or instrument properties in old versions, so be careful if you want to be backwards-compatible.

IT::Compatible Playback Mode
   [Imp] <js> Slightly changed arpeggio tick processing to be more accurate with pattern delays.
   [Fix] <js> Retrigger note (Qxy) was broken for instrument plugins in IT compatible mode since OpenMPT 1.20.01.00 (tx Nahkranoth).
   [Fix] <js> There is no unified effect memory between the volume column effects, and the volume slide commands there also don't share their effect memory with the effect column slides.
   [Fix] <js> Envelope reset should now work correctly (http://bugs.openmpt.org/view.php?id=330).
   [Fix] <js> pxx should also reset the surround flag, like all other panning commands.
   [Fix] <js> SCx shouldn't "click" anymore (just like normal note cuts).
   [Fix] <js> Various fixes regarding portamento between different samples, and especially portamento in multisample instruments.

XM::Compatible Playback Mode
   [Fix] Reverted envelope handling changes made in OpenMPT 1.20.01.00 to fix gh-kott.xm.

XM::Loading
   [Mod] <js> Less false positives when trying to detect old versions of MPT.

S3M
   [Fix] <js> SCx shouldn't "click" anymore (just like normal note cuts).

S3M::Loading and Saving
   [Imp] <js> Added support for loading SAx panning (as found in PANIC.S3M, automatically translated to S8x panning).
   [Mod] <js> The channel order is now written in a L1 L2 L3... R1 R2 R3... scheme, instead of L1 R1 L2 R2 L3 R3..., so that channels are evaluated in the same order in ST3 and OpenMPT (ST3 first evaluates "left" channels, then "right" channels - note that this change does not affect the actual panning, though).

MOD::ProTracker 1/2 Mode
   [Imp] <js> Vibrato and Tremolo are not applied on first tick anymore..
   [Imp] <js> Added ProTracker arpeggio wrap-around emulation (fixes the snare sound in doh's "Jim is dead").
   [Fix] <js> The frequency range is now limited properly by taking the sample's finetune setting into account.

MOD::Loading and Saving
   [Imp] <js> Drastically improved support for 15-sample (Ultimate SoundTracker and clones) modules. For example, original Ultimate SoundTracker effects are now handled much better (e.g. in sll7.mod).
   [Mod] <js> Sample pre-amp volume is based on the number of channels, to have the highest possible sample pre-amp without clipping.
   [Mod] <js> Changed heuristic ProTracker 1.x detection: If there are more than four sample swaps between two notes, ProTracker 1.x mode is enabled (previously it was just 16 sample swaps per pattern). This fixes e.g. hoisaga1.mod by Ramon.
   [Mod] <js> Can now create MODs with up to 99 channels.

Other formats
   [Imp] <js> WAV Loader: Loops that only cover the first sample point are ignored during import now.
   [Imp] <js> ITP Saver: If an instrument cannot be saved, a warning is shown.
   [Fix] <js> PAT Loader: Sample frequency was not imported correctly since OpenMPT 1.20.02.00.
   [Fix] <js> MTM Loader: Files with only one pattern were rejected (tx ant1).
   [Fix] <js> Tentative fix for some DLS sounds not loading correctly (http://bugs.openmpt.org/view.php?id=331).

Module cleanup
   [Mod] <js> "Reset variables" also resets channel settings now.
   [Fix] <js> After rearranging samples, some bogus sample slots became visible again when adding a new sample afterwards.

Audio I/O
   [New] <jh> Added support for WASAPI output devices.
   [Mod] <jh> Options Dialog: Changed "Buffer Length" value into "Latency" (real audio latency) and "Update Interval" (for GUI updates). Old buffer length settings are automatically converted to the new quantities.
   [Fix] <jh> Reported ASIO latency was slightly off, so that pattern playback syncing might have been a little off (not very noticeable since ASIO has very low latencies anyway).
   [Reg] <js> Removed poorly implemented Invert Stereo option. It's not 1995 anymore.

Misc
   [New] <js> Added keyboard shortcut: Play song from start of pattern (same as play pattern from start, but doesn't loop the pattern).
   [New] <jh> Add hidden setting "Display.ShowSplashScreen".
   [Imp] <js> Elapsed time display in the status bar is a lot more accurate now (no more rounding errors that pile up over time).
   [Imp] <js> Exclusive file reading rights are no longer requested, so it is now possible to open files that are being read by other applications at the same time (http://bugs.openmpt.org/view.php?id=352).
   [Imp] <js> Editing sample / instrument names on the comments page limits the name length during input instead of just trimming long strings afterwards.
   [Imp] <js> When clicking the "MIDI Record" button and the device is not ready, opening the device is now tried again after the popup settings dialog is closed.
   [Imp] <js> Reduced memory usage.
   [Mod] <js> Improved extension detection when reading files from zip files. When no preferred file extension is found, the biggest file in the archive is now preferred.
   [Mod] <js> Changed default song name to be empty instead of "untitled".

Bundled plugins
   [Imp] <js> The MIDI Input / Output Plugin now stores device names in presets / modules, so that the order of MIDI devices is no longer important (when having e.g. more than one USB to MIDI interface, their device IDs might change depending on which one was plugged in first).
   [Fix] <js> The MIDI Input / Output Plugin could crash when changing devices while MIDI data was being processed.


v1.21.01.00 (22 December 2012, revision 1472)
---------------------------------------------
Pattern tab
   [New] <js> Added option to quantize notes that are recorded live (select from context menu or shortcut).
   [New] <js> Added "Data Entry" shortcuts to increase or decrease the value of the currently selected pattern cells (note, instrument, effect parameters), either by +/- 1 or by a coarse value depending on the column (http://forum.openmpt.org/index.php?topic=3907.0).
   [Imp] <js> If no selection has been made, interpolation shortcuts now interpolate between the nearest notes / instruments / commands above and below the cursor position.
   [Imp] <js> Added shortcuts for Record Select / Split Record Select (tx DJBouche).
   [Fix] <js> Resizing a pattern only created an undo point when the pattern was reduced.
   [Fix] <js> Set Instrument also works if "No Instrument" is chosen (http://forum.openmpt.org/index.php?topic=4178.0).
   [Fix] <js> Non-existing patterns above the highest existing pattern are not displayed as "???" in the order list anymore.

Sample tab
   [New] <js> Can now load and save FLAC samples.
   [New] <js> Added new stereo to mono sample conversion modes: Keep only left / right channel, split stereo sample into two mono samples.
   [Imp] <js> Added shortcuts for "Zoom into Selection" (http://forum.openmpt.org/index.php?topic=4877.0), 8-bit and mono conversion.
   [Imp] <js> When triggering a note, the note frequency is displayed next to the note name in the status bar.
   [Imp] <js> It is now possible to drag and drop multiple samples from explorer.
   [Imp] <js> When saving a sample, the actual sample name is now suggested if no sample filename is specified in IT / S3M / MPTM modules.
   [Imp] <js> Added hidden INI setting "Sample Editor.DefaultFormat" to specify the default format to use when saving samples (possible values: wav, flac, raw).
   [Imp] <js> Added hidden INI setting "Sample Editor.FLACCompressionLevel" to set the compression level (0...8) when saving FLAC samples.
   [Fix] <js> Reducing the size of the sample undo buffer could sometimes lead to freezes (http://bugs.openmpt.org/view.php?id=314).
   [Fix] <js> Fixed a possible crash when creating undo points (e.g. when using loop crossfade with an invalid crossfade length).
   [Fix] <js> Saved WAV files should now finally have a correct file size in the header.

Instrument tab
   [Imp] <js> Moving the envelope tail (using Ctrl + Drag) also works properly if the distance between the moved point and the following point is small.
   [Imp] <js> It is now possible to drag and drop multiple instruments from explorer.
   [Imp] <js> Dragging the mouse over the sample map doesn't invert every note's assignment but applies the same action to all notes now (http://bugs.openmpt.org/view.php?id=244).
   [Fix] <js> Importing DLS / SF2 samples into the sample editor does now properly remove sample attributes not supported by the current format.

Tree view
   [Fix] <js> Rearrange samples / instruments was really buggy.

MIDI Macros
   [Fix] <js> MIDI Macro letters u and v also take global / channel / instrument volume into account.
   [Fix] <js> Zxx is now only applied on first tick (like in Impulse tracker), before any other effects, \xx remains "sane" and is applied on every tick.

VST / DMO Plugins
   [Imp] <js> The Preset menu in the plugin editor is now filled on demand (when clicking it for the first time) to keep the GUI responsive when opening the editor of plugins that have many presets.
   [Fix] <js> Changing the preset from the plugin editor didn't mark the module as modified (http://bugs.openmpt.org/view.php?id=317).

Playback
   [Fix] <js> Reverse pattern loops that are obfuscated through pattern jump commands should now also work correctly when "Loop Song" is off and during Wave Export (http://bugs.openmpt.org/view.php?id=311).

XM::Compatible Playback Mode
   [Fix] <js> Volume column lxx / rxx doesn't overwrite the effect memory of Pxy anymore.

XM::Loading and Saving
   [Fix] <js> Importing patterns >= 240 didn't work in OpenMPT 1.20.04.00 (http://bugs.openmpt.org/view.php?id=308).
   [Fix] <js> XM instrument saving failed in all versions of OpenMPT 1.20 if there were samples in the sample map that were only referenced below C-1 or above B-8 (http://bugs.openmpt.org/view.php?id=324).

S3M
   [Fix] <js> Pattern loops on muted S3M channels were still being processed.

Misc
   [Imp] <js> Added possible fix for some SF2 inaccuracies (tx BeRo).
   [Imp] <js> Added basic support for DLS Level 2 regions (they are just treated like DLS Level 1 regions).
   [Fix] <js> Fixed crash when loading some DLS samples.
   [Fix] <js> Fixed possible integer overflow when reading song messages from files.
   [Fix] <js> Song length detection won't affect actually stored high offset parameter anymore.


v1.20.04.00 (27 October 2012, revision 1398)
--------------------------------------------
General tab
   [Fix] <js> Input boxes in general tab didn't allow for horizontal scrolling.

Pattern tab
   [New] <js> Can now also transpose by arbitrary amounts. Select from context menu or shortcut.

Sample tab
   [Fix] <js> Unsupported types of WAV files (e.g. MP3-compressed WAV) won't crash the program anymore.
   [Fix] <js> Loading XI files as samples could lead to a crash (tx Lucas).
   [Fix] <js> Mass sample export file names were sometimes not sanitized correctly (http://bugs.openmpt.org/view.php?id=300).

Tree view
   [New] <js> It is now possible to rearrange (drag and drop), insert and duplicate (through the context menu) samples and instruments.

VST / DMO Plugins
   [Fix] <js> Plugin Selection Dialog: Adding new plugins didn't focus them as intended.
   [Fix] <js> Plugin Editor: Bypassing a plugin from its editor didn't mark the module as modified.

VST::Specific Plugin Fixes
   [Fix] <js> EZDrummer didn't load its samples until playback was started since OpenMPT 1.20.01.00, for the same reason as the Korg plugins which stopped working (tx coda).

XM::Compatible Playback Mode
   [Fix] <js> Improved XM tremor effect compatibility.

XM::Loading and Saving
   [Imp] <js> Full tempo range (32 - 512) is now also supported for the default tempo in compatibility export, as Fasttracker 2 actually "supports" this (not through the GUI, but it won't sanitize such values in files) and XMPlay also does.
   [Imp] <js> Improved detection of files made with MPT.

MOD
   [Fix] <js> Partly undid Set Finetune changes from OpenMPT 1.20.02.00 (fixes The Wanderer II by Jogeir)

Other formats
   [Fix] <js> ITP Saver: ITP files saved with OpenMPT 1.20.03.00 were corrupted. Files saved with this version can be fixed by writing the byte sequence 10 00 02 (hex) at position $2B (instead of 01 00 00).

Audio I/O
   [New] <js> Added hidden INI setting "Sound Settings.ASIOBaseChannel" in category to specify the first ASIO channel to use for sound output (as a quick and dirty semi-solution for http://bugs.openmpt.org/view.php?id=128).

Misc
   [Imp] <js> Using the mouse wheel to scroll edit controls with spin buttons works on all such controls now (http://bugs.openmpt.org/view.php?id=99).
   [Mod] <js> Changed default resampling type to XMMS-ModPlug.
   [Fix] <js> Wave Export file names were sometimes not sanitized correctly (http://bugs.openmpt.org/view.php?id=300).
   [Fix] <js> Installer shouldn't overwrite key settings files anymore.


v1.20.03.00 (22 September 2012, revision 1359)
----------------------------------------------
Pattern tab
   [New] <js> Playback can now be locked to an order range. The range can be specified from the context menu of an order selection. Locked orders are then shown with a different background colour (http://forum.openmpt.org/index.php?topic=2620.0).
   [Imp] <js> For visual guidance during editing, non-existing pattern numbers are now greyed out.
   [Imp] <js> Added a keyboard shortcut for opening the Quick Channel Settings dialog.
   [Mod] <js> Entering note-offs via MIDI doesn't put an instrument number next to them anymore.
   [Fix] <js> Cursor doesn't exceed the pattern anymore when moving it beyond the right border.
   [Fix] <js> When opening the pattern tab for the first time, the order list should not be scrolled randomly anymore if not necessary.

Pattern tab::Quick Channel Settings Dialog
   [New] <js> Added freely assignable keyboard shortcuts for switching between channels and returning to the pattern editor.
   [Imp] <js> The dialog is now always hidden when changing focus to another window, not only when switching back to the lower part of the pattern view.
   [Fix] <js> Tab order is now correct.

Sample tab
   [Fix] <js> 8SVX Loader: Loops are now also loaded properly if the loop end is precisely at the sample end.

Instrument tab
   [New] <js> "Pitch Bend Range": For instrument plugins, enter the instrument's Pitch Wheel Depth into this box and OpenMPT will now automatically adjust portamento / vibrato commands for this instrument plugin so that they behave identical to sample portamento / vibrato.
   [Imp] <js> Sustain / Loop points cannot be enabled anymore if there is no envelope.
   [Mod] <js> Velocity handling option has been turned into a checkbox (should be easier to grasp).
   [Fix] <js> Loading AIFF files as instruments (or previewing them from the tree view) works now.

VST / DMO Plugins
   [New] <js> Plugins can now also receive tracker portamento (Hxx / 4xx and the like). Vibrato is emulated through pitch wheel messages; the behaviour is identical to sample vibrato if the plugin's actual Pitch Wheel Depth is set up correctly in the instrument tab.
   [Imp] <js> Portamento Up / Down effects are now implemented properly: Memory and fine slides do finally work. (Fine and extra fine slides are currently not supported in the XM format, but you should not use plugins in that format anyway!). The behaviour is now also identical to sample portamento if the plugin's actual Pitch Wheel Depth is set up correctly in the instrument tab. For existing songs, a new option has been added to the Song Properties to retain the old behaviour.
   [Fix] <js> Randomize Parameters reset focus to main window instead of plugin window (http://bugs.openmpt.org/view.php?id=294)
   [Fix] <js> Randomize Parameters doesn't ask the plugin if a parameter is automatable anymore, as some plugins do not seem to set this property at all.
   [Fix] <js> OpenMPT didn't write more than 255 plugins to the settings file since version 1.20 (http://bugs.openmpt.org/view.php?id=267)
   [Fix] <js> A memory leak that occurred when trying to register invalid or missing plugins (e.g. on startup) has been fixed.

IT::Compatible Playback Mode
   [Fix] <js> A channel's key-off status is kept with portamento notes if "Compatible Gxx" is disabled or there is no instrument number next to the new note.

IT::Loading
   [Fix] <js> Overly long (26 characters) sample / instrument name strings found in IT files made with older versions of MPT are now read correctly again.
   [Fix] <js> Silent samples were sometimes loaded into sample slots that were actually supposed to be empty.

XM
   [Fix] <js> All fine slide commands (E1x, E2x, EAx, EBx, X1x, X2x) are supposed to have their own memory. Previously, it was shared between some of the commands.

XM::Compatible Playback Mode
   [Fix] <js> Notes next to note delays are now ignored if the delay is greater than the current speed (*ignoring* any pattern delays). Previously this was only ignored if the delay was greater than the speed *including* pattern delays.

XM::Loading and Saving
   [Imp] <js> When loading an XM file made with an older version of OpenMPT, gxx / 3xx combinations in the same pattern cell are now tried to be upgraded to fit the new behaviour of OpenMPT 1.20.02.00.
   [Fix] <js> Compatibility export broke X1x and X2x (extra-fine portamento) commands.

MOD
   [Fix] <js> Dxx effects that are to the left of a Bxx effect are now ignored (like in the XM format).
   [Fix] <js> Loading 15-sample MODs only worked under lucky circumstances (most likely since OpenMPT 1.20.01.00).

Other formats
   [Imp] <js> 669 Loader: Effects are now imported more accurately.
   [Imp] <js> DMF Loader: Improved effect import to fit more effects into a pattern cell.
   [Fix] <js> AMF (DSMI) Loader: Fixed pattern effects (normal volume slides were always loaded as volume slide + vibrato) and some other bugs; More AMF format revisions (8-14) are supported now.
   [Fix] <js> AMF (ASYLUM) Loader: Transposed samples will now play correctly, default speed / tempo are not ignored anymore.

Audio I/O
   [Mod] <js> Since the DirectSound driver seems to be buggy (see various reports on the issue tracker), OpenMPT defaults to Wave Out now if there's no ASIO driver present.

Misc
   [New] <js> Wave Export: Added option to loop a song a given number of times during export (http://bugs.openmpt.org/view.php?id=221).
   [Imp] <js> Keyboard Settings: Searching for shortcuts does now also work with MIDI CCs.
   [Fix] <ks> Save All / Save None buttons in the Unsaved Files dialog didn't work if there was only one unsaved file (http://bugs.openmpt.org/view.php?id=206).
   [Fix] <js> A known file extension shouldn't suggest a wrong file extension in the WAV / MP3 export dialog anymore (http://bugs.openmpt.org/view.php?id=298).


v1.20.02.00 (7 July 2012, revision 1318)
----------------------------------------
Pattern tab
   [New] <js> Middle-clicking or Ctrl+right-clicking a channel header shows the Quick Channel Settings dialog, where channel name, volume and panning settings can be quickly set up.
   [Imp] <js> After selecting a column through a double click, it is possible to extend this selection to other channels by keeping the mouse button down after the second click (http://bugs.openmpt.org/view.php?id=245).
   [Mod] <js> Order list display is now "blanked" after maximum supported length instead of internal size.
   [Mod] <js> Interpolation and transpose context menu items have been moved to sub menus.
   [Fix] <js> Shift-Click behaviour was inconsistent if a selection has already been made (http://bugs.openmpt.org/view.php?id=249).
   [Fix] <js> An order list beginning with a separator and a stop pattern won't hang the tracker anymore (http://bugs.openmpt.org/view.php?id=255).
   [Fix] <js> Moving channels through Drag&Drop didn't update the channel names properly.
   [Fix] <ks> Pressing and releasing superfluous modifier keys made some pattern selection shortcuts get stuck.
   [Reg] <js> Removed the "Rename Channel" context menu entry in favour of the new Quick Channel Settings.

Sample tab
   [Imp] <js> Improved AIFF support (added support for loop points, up to 32-Bit sample resolution, AIFF-C files and little-endian sample data).
   [Imp] <js> Added support for arbitrary bit resolutions between 1 and 32 bits in WAV files (e.g. 20-Bit sample data).
   [Imp] <js> If zooming the current selection is impossible, the zoom context menu item is greyed out.
   [Fix] <js> Shouldn't crash anymore when cleaning up Undo memory (http://bugs.openmpt.org/view.php?id=232).

Instrument tab
   [Mod] <js> When right-clicking an envelope point, "Insert Point" will now insert the new point a tick to the right instead of inserting no point at all.

Mod Conversion
   [Mod] <js> When converting to XM, pattern breaks for fixing the FT2 E6x bug are now only inserted when necessary.

VST / DMO Plugins
   [Imp] <js> Plugin selection dialog makes use of plugin categories (as reported by the plugins) now.
   [Imp] <js> The current playback position is now also reported correctly to plugins when jumping around in the order list (Previously, it was always reset to the song start).

VST::Specific Plugin Fixes
   [Fix] <js> The Korg Wavestation GUI did not work until song was played for the first time since OpenMPT 1.20. This also fixes the GUI of older versions of the Korg M1 plugin.

Playback
   [Fix] <js> Fixed frequency slide inaccuracies (tx BeRo).
   [Fix] <js> Removed portamento speed A01 "fix". At speed 1, use fine pitch slides instead of normal ones (they behave identically to what OpenMPT did previously at speed 1).

IT
   [Mod] <js> Random filter variation settings are not supported anymore when editing IT files. Please use the MPTM format instead. Importing old files with random filter settings does still work.

IT::Compatible Playback Mode
   [Fix] <js> Combinations of Qxy (retrigger) with a pattern delay at Speed y should now work as intended.
   [Fix] <js> Combinations of SDx with x greater than the current speed combined with tick delay commands didn't work.

IT::Loading
   [Fix] <js> Loading IT files made with older versions of OpenMPT replaces SC0 with ^^ instead of v00 now.

XM
   [Fix] <js> Set Finetune (E5x) should now work as in Fasttracker 2.
   [Fix] <js> Volume column command gxx did not have memory (tx coda). Combinations of gxx and Gxx in the same pattern cell work correctly now.

XM::Compatible Playback Mode
   [Fix] <js> Tremor (Txy) behaves more like in Fasttracker 2 now.
   [Fix] <js> Volume column command l00 sets the panning to full left on every tick but the first.

S3M::Loading
   [Fix] <js> Empty patterns were not loaded correctly.

MOD
   [Fix] <js> Set Finetune (E5x) should now behave more like in ProTracker.

Other formats
   [New] <js> AMS (Velvet Studio) support is finally back (not crashing the tracker this time :). AMS (Extreme's Tracker) support has been improved as well.
   [Imp] <js> WAV Loader also imports loop points when reading a WAV file as a module.
   [Imp] <js> STM Loader imports some effects more correctly now.
   [Imp] <js> UMX Loader checks for a few more contained module formats that are also supported by Galaxy Sound System (STM, 669, FAR).
   [Fix] <js> MDL Loader was severely broken in OpenMPT 1.20.01.00.
   [Fix] <js> MED Loader: Sample transpose should work as intended (at least for MMD1 modules), MMD2 order list works again as well, Tempo vs Speed precedence for value 32 should be correct now.

Misc
   [New] <js> Keyboard Settings: Shortcuts can now also be found by pressing the sought-after key combination. Click search field to reset filter.
   [Fix] <js> F1 was accidentally hard-coded to opening the help file (tx Diamond).
   [Fix] <js> Song Length Estimation also takes per-pattern time signatures into account now.

Bundled plugins
   [Fix] <js> When using more than one instance of the MIDI Input / Output plugin at a time, killing one plugin instance killed all other instances as well.
   [Fix] <ks> The MIDI Input / Output plugin could sometimes send garbage data.


v1.20.01.00 (5 May 2012, revision 1263)
---------------------------------------
General tab
   [Imp] <js> Like the plugin preset box, the plugin parameter selection box is now only populated when it is focussed, to avoid delays with plugins that have tons of parameters.
   [Imp] <js> Default global volume display is now limited to 0...64 (instead of 0...128) for S3M (http://forum.openmpt.org/index.php?topic=4658.0).
   [Mod] <js> Default global volume is not available anymore in the XM format, since it is not supported by the original format.
   [Fix] <js> Switching between plugin presets didn't update the plugin parameter display.
   [Fix] <js> When enabling surround for a channel, panning was not reset properly for playing tracks.

Pattern tab
   [New] <js> Added an option to select a whole channel when double-clicking a pattern cell (tx ko0x).
   [New] <js> Added an option to display the default volume setting of a sample in the volume column if it is empty (obviously inspired by Impulse Tracker).
   [New] <js> It is now possible to record incoming MIDI aftertouch messages to patterns using volume commands or MIDI Macros (http://bugs.openmpt.org/view.php?id=195).
   [New] <js> New shortcuts: Increase / Decrease Row Spacing (http://bugs.openmpt.org/view.php?id=181).
   [Imp] <js> Adding / removing channels through the pattern editor now creates an undo point instead of clearing the undo log completely.
   [Imp] <js> Parameter Control Events have an edit memory now and adhere to the row spacing setting (tx cce, http://bugs.openmpt.org/view.php?id=190).
   [Imp] <js> Added an order list context menu item to add a separator (+++) index.
   [Imp] <js> When recording note-offs in sample mode, Note Cuts are inserted instead of Note Offs.
   [Imp] <js> Song position retrieval also works for sub tunes now, so song properties are restored properly when starting playback from a sub tune (http://forum.openmpt.org/index.php?topic=4578.0).
   [Imp] <js> When trying to paste but no pattern data was found in the system clipboard, previously copied pattern data is now regained from an internal clipboard.
   [Mod] <js> Renamed X Param to Parameter Extension.
   [Mod] <js> Split keyboard settings now affect record groups: If there are channels assigned to both record groups, the lower part of the split keyboard is recorded into record group 2, the higher part is recorded into group 1 (http://forum.openmpt.org/index.php?topic=4568.0).
   [Mod] <js> Shift-Selecting now uses the select key (which is Shift by default) instead of the hard-coded shift key.
   [Mod] <js> Changed maximum width of pattern display to allow for wider displays than 4096 pixels (http://bugs.openmpt.org/view.php?id=215).
   [Mod] <js> Changed maximum undo steps to 100,000.
   [Fix] <js> When changing a note's octave, the triggered note was not stopped on key-up since the early OpenMPT 1.17 days (http://forum.openmpt.org/index.php?topic=4718.0).
   [Fix] <js> Keyboard Split instrument setting was broken in OpenMPT 1.19.
   [Fix] <js> Moving channels and then undoing the move doesn't screw up channel settings anymore (http://bugs.openmpt.org/view.php?id=156).
   [Fix] <js> When undoing an edit switches to another pattern, OpenMPT tries to find a linked order for this pattern, so that continuous scroll keeps working (http://bugs.openmpt.org/view.php?id=189). Might not work reliably if the same pattern is used twice.
   [Fix] <js> When duplicating a pattern sequence that starts with a non-existing pattern (e.g. +++), the pattern view didn't update properly so editing was still taking place in the previously selected pattern (confusing!)
   [Fix] <js> Instruments are now faded out properly when editing XM modules.
   [Fix] <js> Using Keyboard Split, it was possible to input unsupported notes (e.g. C-0 in MOD files).
   [Fix] <js> It was possible to interpolate between a note and e.g. note cut, but it was not possible to interpolate between a note and no note.
   [Fix] <js> Resizing a pattern didn't create an undo point.
   [Fix] <js> Pattern names were not duplicated (http://bugs.openmpt.org/view.php?id=208).
   [Fix] <js> Entering chords didn't do anything if only the note at the cursor position differed from previously entered pattern data.
   [Fix] <js> The Reset Channel shortcut and the shortcut for setting Row Spacing to 9 never worked.

Pattern tab::Note Properties
   [Imp] <js> Better explanation of the MOD E5x effect parameter.
   [Fix] <js> When showing the properties of a #xx (Parameter Extension) effect, negative values could have been shown.
   [Fix] <js> Plugin indices for Parameter Control Events were off by one.

Pattern tab::Find/Replace
   [Imp] <js> Swapped channel numbers in the channel search feature are now treated correctly - if you enter e.g. 15 as the first channel and 3 as the second channel, channels 3 through 15 will be searched.
   [Imp] <js> Volume column parameters are limited better now. It's still possible to do something like "Search for volume command d, replace by volume parameter 24", though... (don't do it!)
   [Imp] <js> Follow Song isn't turned off anymore when using Find/Replace and the song isn't actually playing (http://bugs.openmpt.org/view.php?id=229).
   [Imp] <js> Find/Replace also updates the order list with the correct order now - this doesn't work across multiple sequences yet, though (http://bugs.openmpt.org/view.php?id=152).
   [Fix] <js> Replace instrument -1 didn't work as expected on instrument number 1.
   [Fix] <js> Volume command parameters are now sanitized on replace (previously, it was possible to e.g. replace "v24" with "d", which would have generated the invalid command d24).
   [Fix] <js> Replacing "no note" with note + 1 or note + 12 will not create C-0 / B-0 notes in the pattern anymore.

Sample tab
   [New] <js> Experimental feature: A Sample Tuner which tunes the sample to a specified note.
   [Imp] <js> When changing XM autovibrato settings, they are now automatically propagated to other samples referred by the same instrument.
   [Mod] <js> Loops are now automatically enabled when setting loop points in the sample editor
   [Mod] <js> Changed maximum undo steps to 100,000.
   [Fix] <js> Pasting samples didn't copy over some sample settings (vibrato, etc.) if sample loops were enabled.
   [Fix] <js> WAV Loading / Saving didn't consider RIFF padding bytes since... forever. Old broken samples (only 8-Bit Mono samples with an odd length are affected) should still load correctly.
   [Fix] <js> Saving samples as WAV didn't save sample settings properly.
   [Fix] <js> Deleting sample data adjusted loop points, but not sustain points.
   [Fix] <js> Samples created using the "add silence / resize to" button didn't show up in the pattern editor's instrument list instantly.
   [Fix] <js> Crossfade keyboard shortcut was broken.
   [Fix] <js> Sometimes, the correct sample was not displayed after switching from another tab.
   [Fix] <js> When converting between IT / MPTM and XM, the auto vibrato and sample pan limits were not updated instantly.
   [Fix] <js> Saving and loading loop points in WAV samples is now done according to the RIFF standard (in OpenMPT, the loop end is exclusive, in the RIFF standard it is inclusive). Looped samples saved with older versions of OpenMPT are still imported correctly.
   [Fix] <js> When loading multiple samples at once, existing samples are not overwritten anymore.
   [Fix] <js> When cleaning up samples, the sample spin button is now updated instantly.

Instrument tab
   [Imp] <js> Better default values for loop points are chosen when enabling envelope (sustain) loops.
   [Imp] <js> The sample mapping dialog accepts mouse dragging now.
   [Imp] <js> Zxx value for the selected cutoff value is now shown next to the cutoff frequency (http://bugs.openmpt.org/view.php?id=36).
   [Imp] <js> Filter settings and random variation sliders now have tooltips displaying the actual settings / swing variation.
   [Imp] <js> When replacing an existing instrument, the replacement / deletion of the previously assigned samples can now be undone.
   [Mod] <js> Two envelope points cannot share the same tick anymore in normal mode as well - since there is no interpolation happening between ticks anyway, this is no limitation at all.
   [Mod] <js> Loading an instrument will not put samples into slots referenced by other instruments, even if those slots are empty (http://bugs.openmpt.org/view.php?id=213).
   [Mod] <js> When assigning an instrument plugin, any sample associations are removed if they point to empty samples or if the user confirms the action.
   [Mod] <js> Allow MIDI banks up to 16384
   [Mod] <al> A newly added instrument is no longer assigned to an already existing but unreferenced sample.
   [Fix] <js> Instruments are now faded out properly when editing an XM module. This means that sustain points can now also be tested properly.
   [Fix] <js> Filter frequency display is now updated instantly when toggling the cutoff checkbox.
   [Fix] <js> Loading instruments from other modules is no longer limited to 32 samples.
   [Fix] <js> Fixed possible stack corruption when loading instruments into XM files.

Tree view
   [Imp] <js> The limit of 32 displayed song items has been removed.
   [Imp] <js> If available, drum keys use key names provided by the soundfont instead of pre-defined drum key names.
   [Imp] <js> All supported module files are now shown in the directory browser by default, even if "Show All Files" is disabled.
   [Fix] <js> Fixed mnemonic shortcuts in some context menus.

Mod Conversion
   [Imp] <js> When converting XM to S3M / IT and there is pxx and Cxx in the same event, the commands are swapped (instead of simply deleting the Cxx command).
   [Imp] <js> When converting to XM, samples are automatically converted to instruments if there are no instruments yet.
   [Imp] <js> Instrument numbers next to Note-Offs are now removed when converting to XM.
   [Imp] <js> Envelope loop behaviour is now fixed automatically when converting between XM and IT / MPTM.
   [Imp] <js> Sample undo history is not lost anymore during conversion.
   [Fix] <js> IT <-> XM auto vibrato and panning slide conversion were incorrect.
   [Fix] <js> Instrument fadeout is now limited properly when converting from XM to IT / MPTM.

MIDI Macros
   [New/Fix] <js> The MIDI macro system has been rewritten completely and is now (hopefully) 99% compatible with IT's MIDI macros. Some macro letters have been changed / added, see the "macro help" button in the macro settings for more information (http://bugs.openmpt.org/view.php?id=94).
   [Imp] <js> Added channel and polyphonic aftertouch to MIDI Macro presets.
   [Fix] <js> MIDI Macros for controlling plugin parameters 128 through 131 were broken since probably forever (they did nothing).

VST / DMO Plugins
   [New] <js> Plugins can now send MIDI events to chained plugins. Useful for e.g. LFO or arpeggiator plugins.
   [New] <js> Added "mapped" MIDI channels (like in Impulse Tracker). If a plugin's MIDI Channel is set to "mapped" in the instrument editor, note data is transmitted on a triggered note's pattern channel modulo 16.
   [New] <js> Experimental built-in support for JBridge. If you run OpenMPT with admin privileges now, you can directly run 64-Bit VST plugins in OpenMPT.
   [Imp] <js> Rewrote default plugin editor (the one that is used for plugins with no custom GUI). Multiple parameters are shown at the same time, with the same automation functionality as custom editors (record to pattern, automatic MIDI Mapping by pressing Shift, etc...), remembers window position, etc... (http://forum.openmpt.org/index.php?topic=1974.0)
   [Imp] <js> Searching for multiple unknown plugins will now open only one browser window.
   [Imp] <js> Named DMO parameter values are now displayed properly.
   [Imp] <js> Preset browser in plugin window has been improved for plugins with many presets (like Synth1).
   [Imp] <js> OpenMPT also checks for the new VST DLL entry point ("VSTPluginMain") when loading plugins now, so plugins that only export "VSTPluginMain" and not "main" will now also load (if there are any).
   [Imp] <js> If a plugin fails to load and crashes OpenMPT, it is not loaded the next time OpenMPT is started anymore, to prevent infinite crash loops.
   [Imp] <js> Added support for plugins that change the number of inputs / outputs during runtime.
   [Imp] <js> Preset menu structure in the plugin window is now updated when the plugin tells to do so.
   [Imp] <js> Added support for the (deprecated) GetPreviousPlug / GetNextPlug VST opcodes.
   [Mod] <js> MIDI portamento on muted channels is not processed anymore (http://bugs.openmpt.org/view.php?id=219).
   [Mod] <js> Warnings for known troublesome plugins are now shown when adding plugins to the plugin library instead of when adding them to a song.
   [Mod] <js> MIDI Program and Bank indices start at 1 in all places now.
   [Mod] <js> Parameter indices are always displayed in decimal instead of hex and in a more consistent manner throughout the whole interface.
   [Mod] <js> Knob mode is set to linear (instead of circular) mouse actions for VST plugins that support it.
   [Mod] <js> When using Randomise Parameters, only automatable parameters are now randomised.
   [Mod] <js> If a plugin DLL is not found, OpenMPT tries to find it in the plugin directory instead of the settings directory.
   [Fix] <js> Custom plugin editors don't have a grey bar of nothingness at the bottom anymore in semi-random cases.
   [Fix] <js> Fixed potential problems with multi-threading VSTs when loading a plugin for the first time (tx manx).

VST::Specific Plugin Fixes
   [Fix] <js> When automating parameters from a plugin GUI, it is first checked whether the parameter can actually be automated. This fixes usage of the Shift key (open MIDI Mapping dialog) in e.g. Ugo's Motion and at the same time makes the Shift key work again in Synth1.
   [Fix] <js> Plugins with more than 32 output channels (e.g. Kontakt) do not crash anymore.
   [Fix] <js> SynthEdit plugin settings are now always restored correctly when opening a saved module (http://bugs.openmpt.org/view.php?id=210).
   [Fix] <js> TAL-NoiseMaker and other plugins based on JUCE do not crash anymore when jumping between orders while playback is disabled (tx herodotas).

Playback
   [Mod] <ih, js> Volume ramp up and ramp down are now two different settings. Ramp up is applied when increasing the volume and starting a sample, ramp down is applied when decreasing the volume or cutting the sample. The old behaviour can be achieved by using the same value for both settings.
   [Mod] <js> The default ramp up setting is 16 samples (instead of 42 as before).
   [Mod] <js> Global volume is now applied before all internal DSPs (http://bugs.openmpt.org/view.php?id=72).
   [Mod] <js> Changed 4-Bit panning computation a bit, so that e.g. S80 is true left and S8F is true right.
   [Mod] <js> Resonant filter mixing is now done with floating-point precision. This allows for greater compatibility with Impulse Tracker's resonant filter and eliminates unwanted extreme noises that previously appeared with certain samples, as well as broken filter coefficients at high playback samples rates.
   [Fix] <js> When finishing a sustain loop that is behind a normal sample loop, sample playback is not simply stopped anymore.
   [Fix] <js> Multiple fine pattern delays on the same row are now added up.
   [Fix] <js> The length of a row is now (1 + Row Delay) * (Speed + Tick Delay) instead of ((1 + Row Delay) * Speed) + Tick Delay.
   [Fix] <js> XM / MOD volume and panning slide nibble priority was wrong for slides with both nibbles set. This was only relevant for newly entered note slides, since slide commands loaded from files were automatically fixed (http://bugs.openmpt.org/view.php?id=242).
   [Reg] <js> MMX-accelerated sample mixing has been disabled as it did not work properly with the floating-point precision filter mixing.

IT
   [Mod] <js> Newly created IT files have compatible playback mode enabled by default.
   [Mod] <js> Saving: Files with filter envelopes use a different file version (IT 2.16 instead of IT 2.17) now.
   [Mod] <js> Removed restart position and Pitch/Tempo Lock from IT extensions. They can still be edited when loading an old IT file with restart position set or Pitch/Tempo Lock enabled, but for all other files, they are not available.
   [Fix] <js> Fixed volume and pan drifting when using Volume Swing / Pan Swing in compatible mode (tx Teasy).
   [Fix] <js> Volume Swing range was 0 to 64 while it should be a percentage from 0 to 100 (old files are fixed automatically).
   [Fix] <js> Multiple fine pattern delays on the same row weren't added up.
   [Fix] <js> Channel and global volume slides with both nibbles set are now ignored.
   [Fix] <js> Tone Portamento is now ignored if no note was previously playing.
   [Fix] <js> If there are multiple row delay commands on the same row, only the leftmost command is considered.
   [Fix] <js> Delayed notes that are on the same row as a row delay effect are retriggered on every row repetition.

IT::Compatible Playback Mode
   [Fix] <js> New filter mode which pretty much sounds like Impulse Tracker's resonant filter (http://bugs.openmpt.org/view.php?id=8). The new filter mode is used iff "More IT compatible playback" is turned on and extended filter range is turned off.
   [Fix] <js> The filter is turned on iff either the cutoff is not at maximum or the resonance is not at minimum.
   [Fix] <js> No pan swing, panbrello, panning envelopes, etc. is applied on surround channels in compatible mode anymore (unless Quad Surround mode is enabled).
   [Fix] <js> Sample and instrument panning overrides surround if Quad Surround is disabled.
   [Fix] <js> NNA settings are only recalled when a note entry is found.
   [Fix] <js> A high offset effect next to a note erroneously applied the offset instantly.
   [Fix] <js> Fixed behaviour when picking up notes after a SCx effect.
   [Fix] <js> Envelopes are now paused correctly when using S77 / S79 / S7B.
   [Fix] <js> If a sample stops before it would be retriggered using Qxy, it is not retriggered at all.
   [Fix] <js> Envelope carry cannot pick up an instrument after a SCx note cut anymore.
   [Fix] <js> Envelope loop vs. sustain loop checking priorities were wrong (http://schismtracker.org/scdev/res/1513.html).

IT::Loading
   [Imp] <js> Songs with no order items are now also accepted.
   [Imp] <js> Songs made with MPT 1.0 alpha and beta versions are now shown as such in the version information.
   [Imp] <js> Most files saved with OpenMPT's early "compatibility export" are not detected as MPT 1.16 files anymore.
   [Mod] <js> Some compatibility settings are now always applied (not only in IT compatible mode) and files saved with older versions of OpenMPT are "fixed" automatically to still work with the new settings. Affected settings are: Out-of-range global volume handling, SC0 / SD0 handling, Autovibrato with Sweep = 0, Pitch / Pan Separation depth, slide commands with both nibbles set, pitch envelope loops, Row Delay behaviour.
   [Fix] <js> Envelope points are now sanitized better and envelope points with the high byte missing are now loaded correctly.
   [Fix] <js> Instruments in IT files with no samples are now loaded correctly.

MPTM
   [Mod] <js> Some compatibility settings are now always applied (not only in IT compatible mode) and files saved with older versions of OpenMPT are "fixed" automatically to still work with the new settings. Affected settings are: Out-of-range global volume handling, SC0 / SD0 handling, Autovibrato with Sweep = 0, Pitch / Pan Separation depth, slide commands with both nibbles set, pitch envelope loops, Row Delay behaviour.
   [Mod] <js> Changed default amplification settings from 64 / 128 / 128 to 128 / 48 / 48 as they were messing horribly with precision and could easily lead to distortion.

XM
   [Mod] <js> Newly created XM files have compatible playback mode enabled by default.
   [Fix] <js> Vibrato "ramp down" waveform is now played correctly (was previously played as "ramp up").
   [Fix] <js> Panning slide nibble priority (when both nibbles of the slide parameter are set) was wrong for XM files.
   [Fix] <js> The first tick on a row was always "on" for XM tremor.
   [Fix] <js> Creating a new XM file did not set the panning flag for the first (and only) sample.

XM::Compatible Playback Mode
   [Fix] <js> An instrument number (no matter what number) next to a note-off event recalls the default settings of the previously playing instrument.
   [Fix] <js> Tone Portamento is ignored if it's combined with a note delay.
   [Fix] <js> A great number of other mind-boggling combinations of Note Off, Instrument Number, Note Delay, etc... should also play more like in Fasttracker 2 now.
   [Fix] <js> Great improvements with regards to E6x pattern loop handling in combination with pattern break / position jump effects.
   [Fix] <js> Volume column tone portamento still had an effect memory.
   [Fix] <js> An instrument number does not reset the bidi loop direction anymore.
   [Fix] <js> The portamento target is not reset anymore when there is a note or instrument number with no portamento effect next to it.
   [Fix] <js> Fixed handling of out-of-range notes (http://bugs.openmpt.org/view.php?id=217).
   [Fix] <js> Length Calculation: E60 bug was not handled correctly if the last E6x command was on the last row of the pattern.
   [Fix] <js> Envelope loop / sustain point priorities have been corrected.
   [Fix] <js> Semi-fixed global volume commands: They are not applied on the first tick of a row anymore (unless pattern speed is 1).

XM::Loading and Saving
   [Imp] <js> Volume Column panning is now scaled better when loading or saving XM files, so it is translated to a 0...64 range instead of 2...62.
   [Imp] <js> Saving: Samples that are not associated to any instrument are now tried to be written to XM files anyway (http://bugs.openmpt.org/view.php?id=234).
   [Mod] <js> Some compatibility settings are now always applied (not only in XM compatible mode) and files saved with older versions of OpenMPT are "fixed" automatically to still work with the new settings. Affected settings are: Out-of-range global volume handling, portamento vs. offset priority.
   [Fix] <js> Saving: When saving an XM with no instruments, garbage instrument settings were written.

S3M
   [Mod] <js> \xx command has been removed from S3M format (existing tracks are updated automatically to use the Zxx command instead).
   [Fix] <js> Some commands (Dxy, Exx, Fxx, Ixy, Jxy, Kxy, Lxy, Qxy, Rxy, Sxy) use the last non-zero effect parameter as memory. This fixes for example Satellite One by Purple Motion.
   [Fix] <js> Pattern loops have no per-channel memory in ST3 (tx GreaseMonkey).
   [Fix] <js> Amiga limits are now enforced correctly if the "preserve Amiga limits" flag is set.
   [Fix] <js> If there are multiple row delay commands on the same row, only the leftmost command is considered.
   [Fix] <js> Delayed notes that are on the same row as a row delay effect are retriggered on every row repetition.

S3M::Loading
   [Imp] <js> Default channel panning is now scaled better when loading and saving, for a full 0...256 range.
   [Imp] <js> PixPlay panning heuristics only apply to modules made with versions of ScreamTracker older than 3.20.
   [Fix] <js> MIDI Macros are now cleared when loading S3M files saved with Impulse Tracker 2.13 or older (fixes BABYLON.S3M by Necros)
   [Fix] <js> Some malicious S3M files could previously crash OpenMPT.

MOD
   [Imp] <js> Rewrote MOD magic parsing code a bit; can handle anything from 1 to 99 channel MODs now.
   [Mod] <js> Removed MOD compatibility export, it is now always applied (but only oneshot samples are modified, and they are not modified in memory anymore).

MOD::ProTracker 1/2 Mode
   [Fix] <js> Amiga limits are now enforced correctly.

Other formats
   [Imp] <js> Added hack-ish support for 32-bit float data to the WAV loader (the one that loads WAVs as modules, not as samples).
   [Imp] <js> If opening a WAV file for rendering fails, the user can choose to retry opening the file.
   [Imp] <js> UMX Loader: Instead of "scanning" Unreal files for modules, they are actually parsed correctly now. As a nice side effect, it is now also possible to load UAX files (collections of samples) from older Unreal Engine games as modules.
   [Fix] <js> MIDI Import / Export: Exporting is no longer limited to the first 64 channels. MIDI files with any number of tracks can now be imported (previous limit was 64 tracks).
   [Fix] <js> DBM Loader: Global volume command was broken since OpenMPT 1.19.02.00.
   [Fix] <js> PSM16 Loader: Sample finetune and transpose should be correct now.
   [Fix] <js> PTM Loader: Fixed sample names.

Module cleanup
   [Mod] <js> Reset Song Variables also cleans the MIDI Macros now.
   [Fix] <js> Instrument to Sample conversion broke Parameter Control Events and note cuts / fades / offs.
   [Fix] <js> Sustain loops behind sample loops are not ignored anymore when optimizing samples.

Misc
   [New] <al> Template modules can now be loaded and saved through the "File" menu.
   [New] <al> Example modules can now be loaded from the "Help" menu.
   [New] <ks> Keyboard shortcuts can now be assigned to incoming MIDI CCs. For now, this only works if the pattern, sample or instrument editor is focussed.
   [New] <js> Instead of multiple modal message boxes, a single dialog with a list of unsaved files is now shown when closing the main window. If you don't like the new behaviour, use "Disable modern close dialog" in the general settings.
   [New] <js> The default module type can now be set using "Misc.DefaultModType", e.g. "DefaultModType=mptm" (http://forum.openmpt.org/index.php?topic=4411.0).
   [New] <js> Recent file list length can now be set through a hidden INI option, "Misc.MRUListLength" (up to 15 entries).
   [New] <js> If a crash is encountered, OpenMPT tries to close the audio device (if it is still in use) and rescue all modified files. A memory dump is also created and can be used for debugging.
   [New] <js> Added "Close All" shortcut + menu item (tx Wayfinder).
   [New] <js> Added Finnish FT2 style keymap by cce.
   [Imp] <js> Shortcuts are not processed anymore when a message box is shown.
   [Imp] <js> Keyboard Config Dialog: Added a button to restore default configuration and a text field for searching keyboard shortcuts by name.
   [Imp] <js> Added "/Portable" command line switch, which saves all settings in OpenMPT's directory (just like "UseAppDataDirectory=0" in the [Paths] section of mptrack.ini).
   [Imp] <js> Compatibility export menu item is now greyed out for S3M and MPTM modules.
   [Imp] <js> Plugin Manager: Buttons have mnemonics now, keyboard handler is disabled while the dialog is open, and the plugin list does not collapse anymore when removing a plugin (http://bugs.openmpt.org/view.php?id=186).
   [Imp] <js> Added "Show Settings Folder" menu item to help menu.
   [Imp] <js> Keyboard Settings: Added a search box, so finding a shortcut by name should be much easier now.
   [Imp] <js> The "Amplify MIDI Velocity" option has been changed to use a freely adjustable amplification factor (instead of fixed x2 amplification).
   [Mod] <js> Removed horribly esoteric sample "fixing" that was applied when loading MOD / S3M files or modifying samples in them - it could very well break some totally fine samples.
   [Mod] <js> Channel Manager: Playback is not stopped anymore when stopping when reordering / removing channels.
   [Mod] <js> Song Properties: Modern and Alternative tempo mode is not shown for XM / IT files anymore by default, and deprecated playback flags are now greyed out unless used by the current module. Song flags are not updated "live" anymore.
   [Mod] <js> Revamped MIDI Mapping and Tuning dialogs a bit.
   [Mod] <js> Added some missing shortcuts to the default key bindings (tx Wayfinder).
   [Mod] <js> Compatibility export hints are now hideable.
   [Fix] <js> Wave Export: Fixed infinitely looping export (http://forum.openmpt.org/index.php?topic=3874.0).
   [Fix] <js> BPM approximation also works reliably when a module is not playing now.
   [Fix] <js> Song length estimation for alternative tempo mode was completely wrong (tx Bavi H).
   [Fix] <js> Combo boxes will not disappear randomly that often anymore.
   [Fix] <js> Comments tab: C-5 frequency is now displayed correctly in all formats.
   [Fix] <js> MP3 Export shortcut was broken (http://bugs.openmpt.org/view.php?id=201).
   [Reg] <js> Saving to another module format requires explicit module conversion now, as it was causing more trouble than doing good. Previously, it was possible to simply enter a different file extension in the "Save As" dialog, so editing an IT file and saving it as "foo.mod" would have saved it as a ProTracker MOD instead of an IT file with .mod extension.

Bundled plugins
   [New] <js> OpenMPT ships with a MIDI Input / Output plugin now. It can be used to send incoming MIDI Events to other plugins or send MIDI events to external MIDI gear.

Third-Party Libraries
   [Mod] Update unmo3 (v2.4.0.3), SoundTouch (v1.6.0), zlib (v1.2.7).


v1.19.04.00 (9 September 2011, revision 1027)
---------------------------------------------
Pattern tab
   [Imp] <js> MIDI controller changes that are not covered by MIDI Mapping also create an undo point now.
   [Fix] <js> Parameter Control Event automation via MIDI Mapping didn't create an undo point if the cursor was in the first row or column (and if it wasn't, it stored too much undo data).

Instrument tab
   [Fix] <js> When editing the first envelope node while compatible playback mode was enabled, the node was moved to the second tick.
   [Fix] <js> Aftertouch messages forwarded to plugins don't mark the module as modified anymore.

Mod Conversion
   [Fix] <js> Sample panning is now properly reset / disabled for MOD / S3M / XM files.
   [Fix] <js> Various instrument properties were not cleared when converting from IT / MPTM to XM.
   [Fix] <js> Sample sustain loops were also not removed when converting from IT / MPTM to XM.

VST / DMO Plugins
   [Fix] <al> VST host version fields didn't follow the actual version of OpenMPT.

VST::Specific Plugin Fixes
   [Fix] <js> Plugins based on the JUCE framework (e.g. TAL-NoiseMaker) don't crash anymore during WAV export.
   [Fix] <ih> Some multi-input plugins like Guitar Rig will not crash anymore.

Other formats
   [Fix] <js> Fixed vulnerabilities in WAV, AMS and DSM loaders (http://secunia.com/advisories/45131/).

Misc
   [Fix] <js> Network paths starting with "\\" are now loaded properly from settings. Previously, they were treated as relative paths.
   [Fix] <js> Adding plugins through the main menu didn't mark the module as modified (http://bugs.openmpt.org/view.php?id=163).


v1.19.03.00 (22 July 2011, revision 921)
----------------------------------------
General tab
   [Imp] <js> When editing panning, surround is disabled and when enabling surround, panning is reset.
   [Imp] <js> When moving a plugin to another slot, plugins routing their output to the selected plugin are now taken into account when choosing a default slot to move the plugin to.

Pattern tab
   [Imp] <js> Channel Surround status is now also indicated in the status bar.
   [Fix] <js> When playing a pattern that is actually not in the sequence and that has more rows than the last played order item, a crash could occur while playing those extra rows. (Welcome to episode 2938 of "this should not have happened after all".)
   [Fix] <js> Shift + Channel Dragging killed the last channel (http://bugs.openmpt.org/view.php?id=133).
   [Fix] <js> When using the pattern play controls (e.g. "Replay Pattern") on a pattern that isn't played in the normal play sequence, tempo and global volume commands on the first played row are not ignored anymore.
   [Fix] <js> Songs shouldn't stop anymore after playing them one time and if playback was initially started using a pattern play mode with loop enabled (http://bugs.openmpt.org/view.php?id=11)
   [Fix] <js> When overwriting Parameter Control Events with normal notes, the pattern cell is now cleared properly.
   [Fix] <js> Using the "Paste Pattern" menu entry in the order list didn't refresh the pattern display.

Sample tab
   [Imp] <js> When selecting parts of the sample, the selection range is now also displayed in samples, not only seconds (http://bugs.openmpt.org/view.php?id=136).
   [Imp] <js> When changing the sample's global volume while removing DC offset, the change is now instantly applied to all channels that are currently playing the sample.
   [Fix] <js> 8-Bit Stereo samples were not saved correctly (http://bugs.openmpt.org/view.php?id=153).

Instrument tab
   [Imp] <js> Two envelope points cannot share the same tick anymore in compatible mode.
   [Fix] <js> Suggested filename when saving instrument was sometimes cut off.

VST / DMO Plugins
   [Fix] <js> When a plugin requests song position in nano seconds, the correct value is now returned (tx coda).
   [Fix] <js> Loading a VST preset (fxp) didn't mark the document as modified (tx BooT-SectoR-ViruZ)

Playback
   [Fix] <js> Filters in XM files aren't reset with every new note anymore (this broke some versions ago).

IT
   [Fix] <js> Saving IT instruments (in both IT and ITI files) with an invalid sample map crashed the tracker (http://bugs.openmpt.org/view.php?id=142)
   [Fix] <js> (Also applies to MOD) When swapping samples on the fly and the current playback position is beyond the new sample's length, it's reset to 0.

MPTM
   [Fix] <js> Saving long envelopes (> 25 envelope points) in the MPTM format never worked in any officially released version. Now you can finally have up to 240 envelope points.

Other formats
   [Fix] <js> ITP Saver: Fixed nasty bug when the internal order length was not 256.
   [Fix] <js> IMF Loader: Orpheus' 8-Bit cutoff range was not converted to MPT's 7-Bit range.

Misc
   [Imp] <js> Tagging: ID3 tags contain a TDRC tag instead of TYER now, as recommend by the ID3v2.4 standard. Also added a TBPM (beats per minute) tag.
   [Imp] <js> Hack detection also notifies about stereo samples in XM files now.
   [Imp] <js> Fixed tab order in the pitch shift dialog.
   [Mod] <js> Song Properties: Legacy mix modes RC1 and RC2 are now only displayed if they are actually used by the module.
   [Mod] <js> When loading a module made with a newer version of OpenMPT which only differs in the build number (last number in the version), no warning is shown anymore. For all other cases, the warning is now also shown for MPTM files.
   [Mod] <js> If opening MIDI In fails, the MIDI config dialog is shown.
   [Fix] <js> MP3 export will no longer result in a heap corruption and thus crash the tracker (http://bugs.openmpt.org/view.php?id=97).
   [Fix] <js> Rendering sub songs to WAV resulted in an endless render loop.
   [Fix] <js> Setup Dialog: Fixed the checkbox list so that it doesn't look weird under Wine and doesn't crash when compiling OpenMPT with VS2010 (tx jmkz).


v1.19.02.00 (13 May 2011, revision 871)
---------------------------------------
Pattern tab
   [New] <js> Channels can now be moved by dragging their channel header. Holding Shift while doing so duplicates the channel.
   [Imp] <js> Moving channels through the channel manager creates an undo point now.
   [Fix] <js> Order list info text now truncates list length after the first "---" pattern for MOD files in hex display mode as well.

Pattern tab::Note properties
   [Fix] <js> Axx is not limited to value 7F anymore in IT / S3M format.

VST / DMO Plugins
   [New] <js> New menu entry in the plugin editor: Create instrument from plugin.
   [Fix] <js> Fixed note handling in plugin editor for VSTs that actually don't support MIDI input (http://bugs.openmpt.org/view.php?id=102)

Mod Conversion
   [Imp] <js> Improved conversion of Sxx (IT / S3M) and Parameter Control Events.
   [Mod] <js> When converting from MOD / S3M to XM / IT, compatible play is automatically enabled.
   [Fix] <js> Sustain loop conversion didn't work.

Playback
   [Fix] <js> The first triggered note in the pattern / sample / instrument editor is not cut off anymore (tx C-jeff, http://bugs.openmpt.org/view.php?id=123)

IT
   [Imp] <js> When clearing MIDI macros during loading, only the Zxx macros are cleared, but not the global (currently unused) configuration.

IT::Compatible Playback Mode
   [Fix] <js> Panning slides with both parameter nibbles set were not ignored in compatible mode.

XM
   [Fix] <js> When using compatibility export, the number of samples per instrument is now limited to 16.

MOD
   [Imp] <js> Instead of cutting the order list after the first --- pattern, such order items are simply removed from the saved order list. (http://bugs.openmpt.org/view.php?id=118)
   [Fix] <js> "+++" separator patterns were allowed in MOD files, which made them break in other trackers / players (http://bugs.openmpt.org/view.php?id=118).

S3M
   [Imp] <js> When clearing MIDI macros during loading, only the Zxx macros are cleared, but not the global (currently unused) configuration.

Other formats
   [Imp] <js> DMF Loader was rewritten completely and is a whole lot more accurate now.
   [Fix] <js> J2B Loader: Empty sample slots are now treated correctly in new (RIFF AM) J2B files.
   [Fix] <js> DBM Loader: Global volume was scaled wrong.
   [Fix] <js> 8SVX Loader: If no sample could be found in the file, the loader does not claim to have successfully loaded a sample anymore (http://bugs.openmpt.org/view.php?id=117).

Misc
   [New] <js> OpenMPT can now automatically check for updates (daily / weekly / monthly).
   [Mod] <js> "Embed MIDI macros" is now only enabled during song creation if the user's default MIDI macro setup differs from standard configuration.
   [Fix] <js> When using "Convert instruments to samples" in the Song Cleanup dialog, "Remove samples associated with an instrument" actually destroyed all samples.
   [Reg] <js> Removed hidden INI flag to suppress warnings when encountering keymaps with unknown items. This option was introduced when faulty keymaps still threw multiple message boxes.


v1.19.01.00 (1 April 2011, revision 836)
----------------------------------------
Pattern tab
   [New] <js> Clicking and dragging the row numbers selects the whole row in Excel / Calc style (http://bugs.openmpt.org/view.php?id=45)
   [New] <js> The new keyboard shortcuts "Select beat" and "Select measure" can be used to automatically extend the current selection to the beat / measure boundaries.
   [New] <js> Experimental feature: Play the whole pattern row when entering notes and chords into the pattern editor. This can be enabled from the setup screen.
   [Mod] <js> Using the Goto Dialog updates channel parameters and sets the elapsed time now (http://bugs.openmpt.org/view.php?id=28).
   [Mod] <js> Undo steps have been increased from 100 to 1000.
   [Mod] <js> The "Position aware timer" option is gone. The position aware timer is now automatically used. It was optional in the first place because of some buggy code, which is now fixed.
   [Fix] <js> Shrink selection is more consistent with Shrink pattern now: Entries on odd rows are not ignored anymore if there is no entry in the even rows. Also, cleaning of the pattern after shrinking the selection has been fixed - it cleaned whole commands instead of just the selected parts of a command (http://bugs.openmpt.org/view.php?id=89).
   [Fix] <js> Cursor paste was possible even when editing was disabled.
   [Fix] <js> Using Right-Click -> Change Plugin on Parameter Control Events did not work for plugin numbers that were higher than the highest instrument number.
   [Fix] <js> When entering chords into the pattern editor, the module was only marked as modified if the base note of the chord was changed.
   [Fix] <js> When jumping to an order which is normally not played, the song variables are now reset. Previously, if the main song had e.g. a global volume fade out at the end, this was retained when switching to an unplayed order, effectively muting all sub songs.
   [Fix] <js> OpenMPT does not crash anymore when applying the Amplify command on a pattern selection that just covers the note / instrument column of the first channel.
   [Fix] <js> Queueing a "---" or "+++" item now automatically moves the queue "cursor" to the next available pattern. Previously, queueing a "---" pattern restarted the song.
   [Fix] <js> Changing a channel name from the pattern editor didn't mark the document as modified (http://bugs.openmpt.org/view.php?id=65)
   [Fix] <js> When restarting a pattern, the song timer was not reset properly.
   [Fix] <js> Entering a note-off event in the MOD format created an unnecessary undo event.
   [Fix] <js> Automation data is not written to the pattern if the current module format does not support smooth MIDI macros.
   [Fix] <js> Selections were not clamped properly to the end of the pattern sometimes.

Pattern tab::Note properties
   [Fix] <js> Explanation of Q0x was wrong for IT / S3M.
   [Fix] <js> Changing a value didn't create an undo point (http://bugs.openmpt.org/view.php?id=56).
   [Fix] <js> Setting the Parameter Control Event plugin didn't work.

Pattern tab::Find/Replace
   [New] <js> Added Find / Replace mode: Find in current pattern selection (http://bugs.openmpt.org/view.php?id=42).
   [Imp] <js> When changing the content of a combo box, the corresponding checkbox is now automatically checked. Likewise, the "Replace By" checkbox is checked if a checkbox or combo box on the "Replace" tab is enabled.
   [Mod] <js> "Replace All" just creates one undo point now.

Pattern tab::GUI
   [Imp] <js> Special paste modes have been moved to a sub menu in the context menu, to save some space.
   [Imp] <js> Status bar now indicates if highpass filter is enabled on a channel (http://bugs.openmpt.org/view.php?id=92).
   [Imp] <js> The dodgy note colour is now also customisable.
   [Mod] <js> When removing a channel (via context menu) that contains no data in any pattern, no warning is shown anymore.

Sample tab
   [New] <js> There's a new tool to create seamless sample loops: The loop crossfader. Includes a new keyboard shortcut (http://bugs.openmpt.org/view.php?id=53).
   [New] <js> The new "sample grid" feature can create equally-sized sample selections, so it is e.g. easy to split a sample into four equally-sized samples.
   [New] <js> New context menu item and keyboard shortcut: Quick fade for samples. If the sample start is selected, a fade-in is automatically performed. Likewise, if the sample end is selected, a fade-out is performed. If neither is selected, the default amplification dialog is shown.
   [Imp] <al> Ctrl + Mouse Wheel can now be used for zooming into the sample data.
   [Mod] <js> Undo steps have been increased from 100 to 1000 (per sample).
   [Fix] <js> When cutting samples with a loop, the loop end point was not always moved correctly if the cut start was in the loop.
   [Fix] <js> Loop point controls also accept large numbers to be inputted manually.
   [Fix] <js> Sample Undo didn't preserve the sample name.
   [Fix] <al> Changing zoom level should now preserve the view position better (http://bugs.openmpt.org/view.php?id=3).

Instrument tab
   [New] <js> Clicking on an empty plugin slot in the plugin dropdown list opens the "Add Plugin" dialog (tx coda)
   [Imp] <al> Ctrl + Mouse Wheel can now be used for zooming into the envelopes.
   [Imp] <js> When pressing the up arrow key in the sample map while the cursor is on the lowest note (C-0), the sample map doesn't lose focus anymore. It is also not possible anymore to move the sample map out of view by clicking the area above the lowest note.
   [Mod] <js> Copying and pasting envelopes with no points isn't possible anymore. (Who wants to do that anyway?)
   [Fix] <js> Fadeout control also accepts large numbers to be inputted manually (http://bugs.openmpt.org/view.php?id=81).
   [Fix] <js> Changing the filter mode didn't mark the file as modified.
   [Fix] <js> The note mapping doesn't allow items anymore that aren't notes (such as "no note" or "note cut"). Such notes couldn't be entered manually, however when converting from other formats this was possible and it could crash the tracker (http://bugs.openmpt.org/view.php?id=61).
   [Fix] <js> Various actions in the instrument note map and envelope view should now also mark the instrument as modified (when working in the ITP format).

VST / DMO Plugins
   [New] <js> Plugins can now request common file dialogs (file and directory selection).
   [Mod] <js> When automatically inserting a new instrument from the plugin editor, the bank and patch values are now not filled in anymore, so it is easier to change to another patch while editing.
   [Mod] <js> Various small improvements to support VST 2.4 plugins better.
   [Fix] <js> The time signature sent to VST plugins should be correct now. The denominator is always assumed to be 4, so a 6/8 signature is for example not possible.
   [Fix] <js> Fixed garbage characters shown in preset fields of plugins that don't return program names.

VST::Specific Plugin Fixes
   [Fix] <js> Speaker arrangement is now sent to the plugins upon initialization. This fixes Voxengo SPAN 2 (a VST 2.4 plugin).
   [Fix] <js> EnergyXT / ProteusVX GUIs stopped working after closing and re-opening the VST editor (http://forum.openmpt.org/index.php?topic=2307.0).

Mod Conversion
   [Imp] <js> If the new format doesn't support restart positions, it is now tried to convert the restart position to a pattern command.
   [Imp] <js> When converting patterns from a format with instruments to a format without instruments (or when removing all instruments using the cleanup dialog), the instrument note mapping is now also taken care of.
   [Imp] <js> Sample sustain loops are now converted to normal loops if needed and possible.
   [Imp] <js> Bidi loops are disabled when converting to MOD / S3M now.
   [Imp] <js> More warnings are shown, old warning messages were improved.
   [Imp] <js> Volume command priority when converting from XM to IT / S3M has been changed - Cxx overrides vxx in XM, so this is now taken into account.
   [Imp] <js> When converting to XM, the E60 bug is now tried to be compensated.
   [Fix] <js> Q0y means "no volume change" in S3M / IT, but R0y means "continue volume change" in FT2, and converting from IT / S3M to XM didn't consider this. Q0y is now converted to R8y, and E9y is now converted to Q0y (instead of Q8y).

Playback
   [New] <js> New mix mode: Compatible. This is used for MOD / S3M / XM / IT by default and has more appropriate mixing levels for those formats (same levels as Schism Tracker) than mix mode RC3, and it forces soft panning to be *disabled*. Please use compatible mixing levels when working with legacy formats from now on (http://bugs.openmpt.org/view.php?id=6).
   [Imp] <js> Improved the algorithm for finding a free channel for note playback in the editor (does not affect normal module playback).
   [Mod] <js> A new mechanism is used to determine the end of playback. One advantage of the new mechanism is that backwards playing patterns can now be exported to WAV properly (http://bugs.openmpt.org/view.php?id=21). The new code might not stop playback properly if "loop song" is disabled and the user jumped around in the module.
   [Fix] <js> Pattern jumps to the same row + pattern as the jump command are not ignored anymore (http://forum.openmpt.org/index.php?topic=1810.0).

IT::Compatible Playback Mode
   [Fix] <js> Incorrect notes were memorized for PPS (and possibly other effects) when working with instruments that had non-default note assignments (e.g. C-5 => D-4)
   [Fix] <js> Bidi loops are now treated like in IT's software mixer (http://bugs.openmpt.org/view.php?id=29).
   [Fix] <js> Sample autovibrato is now hopefully a bit closer to Impulse Tracker (http://bugs.openmpt.org/view.php?id=5).
   [Fix] <js> The envelope handling was altered slightly to work more like in Schism Tracker. This fixes a combination of Envelope Carry + Portamento as it can be found in "electric bunny" by Alpha C.
   [Fix] <js> Various fixes to playback of multi-sample instruments. "Ultima Ratio" by Nebularia and "Shuttle Departure" by Sphenx sound better now.

IT::Loading and Saving
   [New] <js> Edit history information can now be read from and saved to IT / MPTM files. This is based on an undocumented feature in Impulse Tracker. Use View -> Edit History for viewing or deleting this information.
   [Imp] <js> Autovibrato sweep is now fixed when loading IT files made with old versions of (Open)MPT.
   [Imp] <js> IT files made with ModPlug Tracker 1.00a5 are now also detected as such. Since long patterns can also be created in other trackers (e.g. Chibi), long patterns are not used to identify files made with MPT anymore.
   [Mod] <js> MIDI macros are now cleared when loading IT files made with old Impulse Tracker versions (< 2.14), so that Zxx commands won't break the songs anymore (fixes denonde.it, fix from Schism Tracker).
   [Mod] <js> Sane values are used again for the "cwtv" and "cmwt" header fields when saving IT files; in fact the same values as in compatibility export are used. To be able to distinguish between raped and compatibility-exported IT files, "OMPT" is written in the "reserved" header field. As a consequence, IT files made with OpenMPT can now be loaded in Impulse Tracker again.
   [Fix] <js> Note mapping items that aren't notes (e.g. empty notes) are now ignored when loading and saving.
   [Fix] <js> When saving, non-existing envelopes are now replaced by a default (disabled) envelope, so that they can still be edited in Impulse Tracker.
   [Fix] <js> The extended sample map is not saved anymore in the instrument headers when using compatibility export.

MPTM
   [New] <js> Each pattern can now have a custom time signature (rows per beat and rows per measure) which can be set from the pattern properties dialog (http://forum.openmpt.org/index.php?topic=4022.0).
   [New] <js> Edit history information (read the "IT" section above for an explanation)

XM::Loading
   [Fix] <js> Fixed handling of instruments with no samples, so that instruments assigned to VST plugins work correctly.

XM::Compatible Playback Mode
   [Fix] <js> Various mind-boggling combinations of EDx, notes and instrument numbers should work now.
   [Fix] <js> When there's an instrument number next to a 3xx effect which differs from the previous instrument number, it resets the instrument properties of the previous instrument.
   [Fix] <js> Portamento combined with an Offset command results in the offset command being ignored.

MOD
   [Imp] <js> It's now possible to create MOD files with more than 64 (and up to 128) distinct patterns. Just like in ProTracker, such MOD files are identified by the "M!K!" signature (instead of M.K.)
   [Fix] <js> The maximum speed for MOD files was off by one in some places (31 instead of 32).

MOD::Loading
   [New] <js> Heuristic detection for VBlank MODs. Most MODs use the CIA timer instead of VBlank timing, but some don't.
   [New] <js> Heuristic detection for ProTracker 1.x playback mode: If there is pattern data that looks like it needs on-the-fly sample swapping, ProTracker 1.x mode is enabled.
   [New] <js> Heuristic detection for MODs with 7-bit panning, which is then automatically converted to 8-Bit panning.
   [Fix] <js> Tentative fix for MODs with short loops at the sample start that were most likely not intended.

S3M
   [Mod] <js> Changed some code in the S3M loader that should only affect really broken S3M files which every player handles different anyway (at least my broken version of aa-polym.s3m sounds better now)
   [Fix] <js> Octave 8 was allowed in S3M files while it shouldn't (it wasn't even saved in the file)
   [Fix] <js> Loading: Fix to pattern loader (for empty patterns)
   [Fix] <js> Removed the X param (#) effect from the supported effect list.
   [Fix] <js> Speed and tempo values are now adjusted to what Scream Tracker actually expects (speed 1 - 254, tempo 33 - 255) - anything out of this range is ignored by Scream Tracker, so it is now also ignored by OpenMPT.
   [Fix] <js> Pattern breaks >= C40 are now ignored.
   [Fix] <js> Global volume commands > V40 are now ignored.

Other formats
   [Imp] <js> Garbage characters in sample / instrument / song names should be gone now.. This should e.g. avoid sample names like " ntitled" turning up in modules after deleting sample names.
   [Imp] <js> Improved handling of the note cut effect in PTM (Polytracker) files a bit.
   [Mod] <js> Improved portamento import precision for DBM and ULT loaders (patch from Schism Tracker)
   [Mod] <js> Added a version check to the ITP loader (why was this not there in the first place?)
   [Fix] <js> As MTM files were converted to MOD automatically when being loaded, channel panning was lost. Now they're loaded as S3M instead.
   [Fix] <js> Short loops in AMF / MED files are now ignored (http://bugs.openmpt.org/view.php?id=70).
   [Reg] <js> Disabled the Velvet Studio loader for now, since it either crashes on almost all AMS files or at least imports them completely wrong.

Misc
   [New] <js> WAV Export: Sample-exact cue points are now written at each pattern transition.
   [New] <js> Most MPT hacks in modules can now be found through View -> Find MPT Hacks in Song.
   [Imp] <js> Paths to VST plugins in mptrack.ini and plugin.cache are now also relative in portable mode. This means that finally, *all* stored paths are now relative in portable mode.
   [Imp] <js> Additional new keyboard shortcuts: Panic, View Edit History, Set Invalid / Ignore (--- / +++) Pattern (in the order list), plus the ones mentioned in above categories
   [Imp] <js> Some improvements were made to the Registry / INI reading: If there were no Registry settings because MPT 1.16 was previously not installed, the INI file is now also read as it might contain some lines created by the installer.
   [Imp] <js> Sound Setup: For ASIO devices, only supported sampling rates are now shown.
   [Imp] <js> The instrument list on the comments tab also shows assigned plugins now.
   [Imp] <js> Added Mix Paste (IT Style) to the "Paste Special" edit menu
   [Imp] <js> Macro Editor: User is now warned if the current macro configuration differs from the default configuration but embedding macro configuration is disabled.
   [Mod] <js> Changes to keymap file handling: The active keymap is now always saved to Keybindings.mkb (in either %APPDATA%\OpenMPT or the executable's directory). Any other keymaps are now only overwritten when using the "Save keys as" function (http://bugs.openmpt.org/view.php?id=20).
   [Mod] <js> On first run, the default ASIO driver is now chosen instead of DirectSound (if there is one).
   [Mod] <js> The "Original" mix mode now also has a version number (1.16) to reflect what the "original" thing is.
   [Mod] <js> Updated genre list in the MP3 export dialog.
   [Mod] <js> When using non-ACM MP3 codecs (e.g. lame_enc.dll), 320kbit/s bitrate is now available.
   [Mod] <js> "No extra-loud samples" is now enabled by default (as it's more suitable for mix modes RC3 and Original)
   [Mod] <js> The MMX acceleration label in the Soundcard setup dialog is now updated according to the multimedia extensions that are supported by the CPU (3DNow! / SSE)
   [Mod] <js> Updated the internet link list in the Help menu.
   [Fix] <js> Mod Cleanup: Rearrange patterns was broken when using more than one sequence in the MPTM format (tx Skaven).
   [Fix] <js> Mod Cleanup: Various sample / instrument rearranging functions broke Parameter Control Events.
   [Fix] <js> The text length was calculated wrong in the message reader, leading to a possible buffer overflow when reading song messages with mixed line endings where CR or LF line endings were expected.
   [Fix] <js> When there was no INI file, the size of the upper pattern view was defaulting to a wrong value.
   [Fix] <js> The ID3v2 "comments" field was not formatted properly when exporting to MP3.
   [Fix] <js> unmo3.dll and uxtheme.dll (for theming the general tab) are now loaded "safely", to avoid the currently spreading DLL exploits.
   [Fix] <js> Editing a sample / instrument name on the comments tab didn't mark the module as modified (tx djmakas)
   [Fix] <js> When changing the font size of the song message while the comments tab is open, the message editor is now resized instantly. Previously, only the font size was updated.
   [Reg] <js> "Set highlights to songs' time signatures" is gone. Custom song highlighting is now always applied, and the values found in the colour options are now always applied to new modules.

Third-Party Libraries
   [Mod] Update unmo3 (v2.4.0.1).


v1.18.03.00 (4 August 2010, revision 673)
-----------------------------------------
General tab
   [Imp] <js> To prevent OpenMPT from hanging while switching between plugins (or switching to the general tab), the preset box is only filled when it gets the focus. This makes working with Synth1 or other plugins with a high amount of presets a lot easier.
   [Mod] <js> Changed tab order of the lower panel (now it's more logical to me)

Sequence editor
   [Imp] <js> When inserting patterns at an empty position, the position counter is not increased anymore.
   [Imp] <js> Improved sequence name display in context menu for empty sequences.

Pattern tab::pattern editing
   [Imp] <js> Just like in MPT 1.16, it is now possible again to interpolate between an effect and "nothing". In that case, the same value as the already existing one is repeated between the two rows.
   [Fix] <js> When the first column of a pattern selection (larger than one selection field) was the parameter column, Parameter Control Event values in this column were not reset properly.
   [Fix] <js> Transposing notes up / down doesn't allow notes which are actually not supported by the current module format (e.g. notes below C-1 in XMs) anymore.
   [Fix] <js> Keyboard shortcut for toggling record state didn't save the change, so it was reset with every new module.

Pattern tab::Note properties
   [Imp] <js> Effect info now shows the real finetune values for E5x in MOD/XM and E2x in S3M instead of just 0...15.
   [Imp] <js> Set envelope position effect (Lxx in XM) is now explained better.
   [Fix] <js> Fixed a crash when accessing the note properties of malicious and not-so-malicious modules (e.g. jt_pools.xm) which have more than 256 sample slots.

Sample tab
   [New] <js> It's now also possible to create sample selections using Shift + click (this is still behaving a bit non-obvious if you don't know what you're doing :).
   [New] <js> Sample Drawing: Horizontal lines can now be drawn by holding down the shift key.
   [Imp] <js> Finetune range is now limited from -8 to 7 for MOD files.
   [Imp] <js> When hovering the relative note and finetune controls, the actual C-5 frequency is now also shown for MOD files. Previously, this only worked for XM files.
   [Fix] <js> When using the spin button next to the finetune or frequency control, the module was not marked as modified.

Instrument tab
   [New] <js> Pressing Ctrl while dragging a point in the envelope editor also moves the tail of the envelope.
   [Imp] <js> More helpful value display for the panning envelope in the status bar with indication what's left and what's right.
   [Imp] <js> If an instrument is not initialized yet, this is done automatically now, so that changes done to the instrument are not lost, although it looks like they are actually applied (e.g. when trying to edit a previously deleted instrument).
   [Imp] <js> Fadeout values up to 32767 are allowed again for XM files, as FT2 can actually handle them (and other apps like Milky support them as well)
   [Imp] <js> Panning ranges from 0 to 256 again for MPTM, and from 0 to 64 for IT files (previously, it ranged from 0 to 255).
   [Imp] <js> Sample Map accepts various new shortcuts now.
   [Imp] <js> When pasting an envelope with a release node, it's now ignored in formats that don't support it.
   [Mod] <js> Envelope release nodes cannot be enabled for IT files anymore, but they are still played for compatibility (One has to start removing the crap from the old formats at some point...).

Tree view
   [Imp] <js> Ask for confirmation when deleting patterns, samples, instruments, sequences.
   [Fix] <js> Deleting a sample from the tree view and then applying undo for this sample in the sample editor crashed OpenMPT.

Mod conversion
   [Imp] <js> Some improvements with converting note cuts, ECx/SCx and EDx/SDx.
   [Imp] <js> When converting to XM, rogue note delays are removed from the patterns to avoid interference with a FT2 bug.
   [Imp] <js> Envelope release nodes are now removed when converting from MPTM.
   [Fix] <js> When converting to MPTM, "+++" separator patterns are not recognized as sub tune indicators anymore.
   [Fix] <js> Channel settings were not reset properly for MOD/XM/S3M, only the first channel was fixed (tx Sam_Zen).
   [Fix] <js> Extra fine portamento was not converted properly when converting from IT/MPTM/S3M to XM.

Playback (see also format-specific changes below)
   [Mod] <js> Invert loop (.MOD effect) is now ignored on 16-bit samples (only important during editing, since .MODs can only contain 8-bit samples anyway)
   [Fix] <js> The Pattern Loop command did not work properly on rows > 255

IT::Saving
   [Imp] <js> If a plugin is specified for an IT instrument and no MIDI channel is assigned, the plugin is written into the IT instrument header (in MPT 1.16's old manner), so that MPT 1.16 / XMPlay / BASS can make us of "FX Send" again (tx Skaven).
   [Imp] <js> If filter envelopes are used, a different value for the cmwt ("compatible with") field is now used in compatibility export (like in SchismTracker).
   [Fix] <js> Instrument panning was not converted properly.

XM::Compatible Playback Mode
   [Fix] <js> Various fixes to the pattern loop command (E6x), including a crucial FT2 bug: When E60 is used on a pattern row x, the following pattern also starts from row x instead of the beginning of the pattern, unless there was a Dxx or Cxx effect.
   [Fix] <js> Prevent notes to be stopped after a fadeout. This way, a portamento effect can pick up a faded instrument which is long enough. This occurs for example in the bassline (channel 11) of jt_burn.xm.

XM::Saving
   [Imp] <js> Panbrello is not saved anymore in compatibility mode.
   [Fix] <js> Completely empty patterns are loaded as empty 64-row patterns in FT2, regardless of their original size. This is now being circumvented by adding a D00 effect at the end of such patterns.
   [Fix] <js> Saving XM files with 127 channels (sigh) was broken.

S3M
   [Fix] <js> Samples with very short loops (4 bytes) are now loaded properly. Fixes "a tiny problem.s3m" by \slash.
   [Fix] <js> Notes with an SD0 effect were not ignored properly when there was a row delay effect on the same row. Now they are ignored in any case.

Other formats
   [Imp] <js> Song messages are now loaded with more accuracy for some formats.
   [Imp] <js> J2B Loader: Files with extended instrument settings and multiple samples per instrument work properly now. Such J2B files were not used in the game but have been created by JJ2 players using MOD2J2B.
   [Imp] <js> OKT Loader: Completely new IFF-based loader, translated from SchismTracker code with permission from Storlek. This loader is a *lot* more accurate, but still misses a few pattern effects.
   [Imp] <js> PSM Loader: Small improvements.
   [Fix] <js> MTM Loader: The "beats per track" (means lines per pattern) setting is now taken into account.
   [Fix] <js> PSM16 Loader: Since the control channels were muted, tempo commands were ignored, effectively slowing down some PSM16 tracks.
   [Fix] <al> MPTM Saver: When deleting patterns using the tree view, it was possible that Parameter Control Notes were not saved properly anymore.

Misc
   [New] <js> Experimental "panic" button on the main toolbar. At the moment, it just kills all VSTi and sample voices.
   [Imp] <js> Added mnemonics to the wave export controls.
   [Mod] <js> In the mod type dialog, the "misc flags" can now be toggled using check buttons instead of an edit field.
   [Mod] <js> Various file loaders / savers: A new logging mechanism is used to display only one message box with errors and warnings instead of many message boxes.
   [Fix] <js> Colour Setup: Some colours in the MPT default colour scheme were not set up properly when switching between presets.

Installer/release package
   [Mod] <js> Updated DE_jojo.mkb to include new shortcuts, remapped a few others (for IT-style).
   [Mod] <js> Updated FR_mpt_(legovitch).mkb and NO_mpt_classic_(rakib).mkb (tx Paul Legovitch, Rakib).


v1.18.02.00 (30 May 2010, revision 610)
---------------------------------------
General tab
   [Imp] <js> Disabled tempo slider for MOD files (it was just confusing)
   [Imp] <js> Disabled global volume slider for MOD files, instead enabled the sample pre-amp slider (so it is also possible to make output louder)
   [Imp] <js> The "output to" dropdown list also shows the actual plugin name now (instead of just the library name).
   [Fix] <js> Moving a plugin in MOD/S3M files doesn't mark them as modified anymore. The channel effect dropdown lists are now also disabled for those module types.
   [Fix] <js> The restart position edit control is disabled for S3M files.
   [Fix] <ks> The background colour of the tabs in the channel configuration is now also correct when using WinXP Luna or Vista/Win7 Aero.

Sequence editor
   [New] <js> "Select All" shortcut also works here now.
   [Imp] <js> The sequence menu also allows to insert empty sequences now.
   [Fix] <js> Jumping between patterns also stops VSTi notes now.

Pattern tab::Pattern editing
   [New] <js> Extended context menu for Parameter Control Events.
   [New] <js> Key shortcut + context menu entry for toggling the plugin editor of the Parameter Control Event that's under the cursor.
   [Imp] <js> Overflow paste now only uses one undo step.
   [Imp] <js> Instead of simply ignoring note off/cut/fade when working with .MOD files, it is converted to C00.
   [Fix] <rf> Effect visualizer is now aware of Parameter Control Events (http://forum.openmpt.org/index.php?topic=3836.0).
   [Fix] <js> When using MIDI record or split keyboard settings, volume data was written into the volume column in MOD format.
   [Fix] <js> When converting Parameter Control Events to MIDI Macros, the instrument index is now also cleaned as well. Noticeable for example when pasting Parameter Control Events into an IT module.
   [Fix] <js> Now, plugin slot 100 can also be automated using Parameter Control Events.
   [Fix] <js> When pasting pattern data that exactly reached the pattern end with overflow paste enabled, a redundant undo point was created.
   [Fix] <js> Entered (volume) effects are now properly validated (makes a difference e.g. in MOD format where it was previously possible to enter effects like Hxx)
   [Fix] <js> Mix Paste: When in MPT behaviour mode, empty FX commands were not overwritten properly when there previously was an effect in that field but only the effect number (and not the param value) was reset.
   [Fix] <js> When deleting all patterns via the tree view and then switching to the pattern editor, pattern 0 is not created automatically anymore, to avoid confusion.
   [Reg] <js> Creating a selection using the Shift key + Mouse click now only works if there was previously no selection made; This seems reasonable as the old shift - behaviour seems to be widely used.

Pattern tab::GUI
   [New] <js> When the ProTracker 1.x mode or the S3M "Amiga" flag are enabled, dodgy notes (i.e lower than C-4 or higher than B-6) are marked red.
   [Imp] <js> The status bar shows plugin and parameter names for Parameter Control Events now as well.
   [Imp] <js> Effect vis: Make use of song's own row highlighting variables instead of fixed global ones.
   [Fix] <js> The status bar ("Position x of y") only the showed order length for the first sub tune if sub tunes were separated by an "---" order item.
   [Fix] <js> Changing a channel plugin in MOD/S3M files doesn't mark them as modified anymore.
   [Fix] <js> When working with multiple sequences, switching to the pattern editor for the first time automatically marked the document as modified.

Pattern tab::Note properties
   [Imp] <js> Don't allow values > 63 for "break to row" commands in MOD/S3M.
   [Imp] <js> Since the behaviour of sliding commands with both nibbles set varies from tracker to tracker, "undefined" is always shown in the note properties in such cases.
   [Fix] <js> In the note properties, the Gxx effect for XM files was not limited properly.
   [Fix] <js> In Note Properties, the waveform display for S[345]x (and equivalent MOD/XM effects) was not always fully visible ("continue" addition was cut off)
   [Fix] <js> Display "fine" / "extra fine" portamento effects properly (S3M/IT/MPTM), display SFx macro properly, display MOD effects with no memory properly.

Pattern tab::Find/Replace
   [Fix] <js> Find/Replace didn't work properly when replacing Parameter Control Events with something that's not a Parameter Control Event.
   [Fix] <js> Instead of turning "Follow Song" off, the Find/Replace dialog toggled it.

Sample tab
   [New] <js> Shift+New = Clone sample slot
   [New] <js> Option to not ask for RAW import settings again (settings are remembered independently for all modules)
   [Imp] <js> Remember previous settings in RAW import dialog
   [Imp] <js> When enabling (sustain) loop and no loop points are set yet, the loop is now set automatically to full sample length or the currently selected part of the sample.
   [Imp] <js> Sample name and filename length are now properly limited.
   [Fix] <js> When applying time stretch / pitch shift to an 8-bit sample and selecting the sample partly lead to partial upsampling, instead of upsampling the whole sample.
   [Fix] <js> Sample Undo: If no custom value was set, the default value was set ridiculously high (tx Paul Legovitch)
   [Fix] <js> Sample Undo: Fixed another possible problem when undoing actions with very little memory left.
   [Fix] <js> It was not possible to create the last sample slot (i.e. pressing "new sample" with a MOD file that had 30 samples would result in an error, although MOD supports 31 samples).
   [Fix] <js> When loading an extremely short raw file (e.g. 1 byte) twice, it crashed OpenMPT.

Instrument tab
   [New] <js> Envelope zooming. Might still look very weird (especially the first tick and around loop points). Includes two new keyboard shortcuts.
   [New] <js> Transpose Up/Down for sample map.
   [Imp] <js> When pasting an envelope, it's now also automatically enabled.
   [Imp] <js> Instrument name and filename length are now properly limited.
   [Imp] <js> "Scale envelope points" is now also available for scaling the values of the points (y axis).
   [Fix] <js> The panning spin button ranged from 0 to 256, however when saving to .IT, 256 was wrapping over to 0. Panning is now limited from 0 to 255.
   [Fix] <js> It was impossible to assign plugin slot 100 to an instrument.

Comments tab
   [Fix] <js> Correct C-5 frequency is now also shown for XM modules.
   [Fix] <js> When editing sample / instrument names, they are limited properly in length now.

Tree view
   [New] <js> Sequences can now be copied to other modules by simply dragging the sequence header into the the other module's sequence header. Does only work between two different modules, not within the same module, and it will not copy the pattern contents.
   [Imp] <js> Display sequence index next to sequence names.
   [Imp] <js> Improved order dragging; It is now also possible to drag an order into a non-MPTM module. In that case, the old order list will be replaced.
   [Imp] <js> J2B files were not shown in the tree view.
   [Fix] <js> Soundfont samples were not playing correctly anymore. Note that soundfont samples in the MIDI library still don't work.
   [Fix] <js> A crash could occur if the instrument library path was too long (e.g. because of malicious strings in the [Paths] section of the INI file)
   [Fix] <js> "Bypass" action for plugins didn't set the document as modified.
   [Fix] <js> Right-Click on module -> Close didn't ask for confirmation when the document was modified.
   [Fix] <js> Insert/Duplicate sequence actions didn't set the document modified. Grey out those two actions if no additional sequences can be added.

VST / DMO Plugins
   [New] <js> The IT instrument note mapping is now also applied to VST instruments (before, it was just available for samples). This way, VST instruments can be transposed easily.
   [Imp] <js> Editor: Instead of just saying the user that the plugin has to be assigned to an instrument to play notes, they are queried now whether they want to automatically add an instrument.
   [Imp] <js> Editor: Added shortcuts for "toggle bypass", "pass keys to plug" and "record params to pattern"
   [Mod] <js> Editor: Changed number of patches per sub menu from 100 to 128. Now, one sub menu equals ones MIDI bank (more logical)
   [Fix] <js> Editor: Preset names starting with ' ' >= char > 'A' were cropped (i.e. "123ABC" was displayed as "ABC")
   [Fix] <js> Editor: Changing a plugin parameter in MOD / S3M files doesn't mark them as modified anymore.
   [Fix] <js> Even if an instrument was muted, a VSTi assigned to this instrument was still playing in the pattern.
   [Fix] <al> Some VSTs that previously wouldn't load might now load fine.
   [Fix] <al> Returned host CanDo values were wrong (since pre-RC1 era).

Mod conversion
   [Fix] <js> When converting from MOD to S3M or IT, the Invert Loop effect was not removed.
   [Fix] <js> When converting from MPTM to another format, the first sequence name is removed and the sequence is now sized properly when merging multiple sequences (tx Skaven).
   [Fix] <js> When converting between XM and IT, the sample autovibrato "sweep" factor is now fixed a bit (since sweep = 0 equals "no sweep" in XM, and "no vibrato" in IT).
   [Fix] <js> When removing instruments from the tree view and converting the module to a different format which also supports instruments, OpenMPT crashed.
   [Fix] <js> When converting to MOD/S3M, the extended filter range flag was not deactivated.
   [Fix] <js> S00 (IT/S3M) does not equal E00 (MOD/XM), as Exx doesn't have effect memory. Trying to convert S00 to the last used value now.
   [Fix] <js> If necessary (S3M), the restart position attribute is reset.
   [Fix] <al> Merging multiple sequences didn't properly convert '---'/'+++' orders.

IT::Loading and Saving
   [Imp] <js> Saving: Compatibility export saves stereo samples again, as other tracker like Schism also support this (and so do the official IT specs).
   [Fix] <js> Saving: Fixed IT sample flags which could potentially cause IT to screw up on loading/saving MPT-made modules with samples that are not used by an instrument.
   [Fix] <js> Loading: ChibiTracker uses a different newline character for the comments text, which was not handled properly.
   [Fix] <js> Loading: Ignore stereo sample flag when loading old IT files (older than IT 2.14) since Impulse Tracker did not reset this flag when importing stereo samples back then (fix from SchismTracker).
   [Fix] <js> ITI/ITS Loader: Sample flags were not reset when a sample slot was overwritten when loading ITI or ITS files. That way, it was possible that e.g. the bidi loop flag was not disabled when loading a new sample that had a normal loop.

IT::Compatible Playback Mode
   [Fix] <js> Note Cut really cuts notes and does not just mute them (so that following volume commands could restore the sample).
   [Fix] <js> Always reset autovibrato settings when there's an instrument number (fix from SchismTracker).
   [Fix] <js> S77 / S79 / S7B are supposed to pause the envelope, not disable it.
   [Fix] <js> Ignore slide commands with both nibbles set (e.g. D55, PA1, ...).
   [Fix] <js> Default Vibrato / Tremolo / Panbrello waveform values to sine waveform if out of range (e.g. S35).

IT/MPTM/ITP, Instrument extension handling:
   [Fix] <al> Fixes to instrument envelope flag handling (broken in 1.18.00.00).

XM::Loading
   [Imp] <js> Improved detection of an old version of MPT (1.09?).
   [Fix] <js> Some XMs not made with ModPlug were recognized as files made with MPT.
   [Fix] <js> The last XM instrument was not always loaded.
   [Fix] <js> Early versions of Skale Tracker (R.I.P.) apparently wrote malformed XM sample headers, so OpenMPT failed to load such modules. Such files are loaded correctly now (fixes IFULOVE.XM by yeep).

XM::Compatible Playback Mode
   [Fix] <js> Volume column doesn't have an effect memory, most effects with param = 0 are useless. Those are ignored during playback and also when exporting the file in compatibility mode.
   [Fix] <js> Improved handling of the situation when a 3xx effect was used, but previously no note was playing.
   [Fix] <js> An instrument change next to a portamento event is now ignored (fixes partytime.xm by cancer).

MOD
   [Imp] <js> Module creation: When creating a new .MOD, it has 31 sample slots by default.
   [Fix] <js> Saving: Samples were shifted badly if the sample size was odd (wow, this is an OLD bug!).
   [Fix] <js> Saving: If a sample had loop points set, but loop disabled, they were still saved in the .MOD file, resulting in the loop being enabled automatically.
   [Fix] <js> Loading: Very short loops (4-8 bytes long) are not ignored anymore. This fixes "Crew Generation" by Necros.

MOD::ProTracker 1/2 Mode
   [Imp] <js> Amiga note range limits are automatically taken into account.

S3M
   [Imp] <js> Loading: Display a message if an S3M file contains AdLib instruments (rare).
   [Fix] <js> In ST3, muted channels are completely ignored, not even effects are interpreted. Let's try this in MPT, too.
   [Fix] <js> Slightly better handling of vibrato/tremolo waveform types (although the ST3 help screen says that continuous vibrato/tremolo is possible, it does actually not work.)
   [Reg] <js> Cannot create S3M files with more than 100 patterns anymore, because...
   [Fix] <js> ... it was possible to create S3M files where the 256 parapointers were not enough, resulting in incomplete/broken files.
   [Fix] <js> Note Cut really cuts notes and does not just mute them (so that following volume commands could restore the sample)

MPTM
   [New] <rf> Added combined note delay & note cut command for MPTM only (":xy" means delay until tick x and play for y ticks).
   [Fix] <js> MPTM Saving: A missing null pointer check crashed OpenMPT when trying to access a deleted instrument slot.

Other formats
   [Imp] <js> MT2 Loader (MadTracker): Make use of the "lines per beat" header field. Release node is not set anymore for each and every instrument envelope. MT2 files are now loaded as IT files by default (instead of XM) because of their extended instrument properties (NNAs, filters, etc.) - I wonder what this breaks, but I don't bother much because MT2 support was already 100% broken before this. :) Some MT example tunes sound a bit better now at least.
   [Fix] <js> PTM Loader: Fixed an unhandled null pointer exception that occurred when loading some unsupported RAR files.
   [Fix] <js> PSM16 Loader: Fix for note cut on tick 0 (warbot tune from Silverball).
   [Fix] <js> Threw out the old ULT loader in favour of Storlek's loader from SchismTracker (used with permission from the author himself). This is a lot more accurate than MPT's old loader.
   [Fix] <js> DBM Loader: Various fixes to increase import precision and an endianness fix.
   [Fix] <js> AMF DSM Loader: Made some changes to the pattern reader, which eliminate the strange "vC7" commands in the pattern. I have found no hints on whether my fix is correct or not, apart from the fact that those AMF files that I have play a lot better now. And it makes kind of sense...
   [Fix] <js> IMF Loader: Some fixes copied from Schism (copied from MikMod).

Module cleanup
   [Imp] <js> In the cleanup dialog, mutually exclusive items are now automatically unchecked, to avoid confusion.
   [Imp] <js> Made the dialog look a bit nicer.
   [Fix] <js> Because of an error in pattern count retrieval, the last pattern was not checked when looking for unused samples which sometimes resulted in deleted samples (although they were actually used).
   [Fix] <al> Fixed a memory leak in pattern name handling.

Wave Export
   [New] <js> It is now also possible to render by instrument (i.e. one wave file per instrument).
   [Imp] <js> The "render by channel" mode ignores empty channels now.
   [Imp] <js> When switching to another task and switching back to OpenMPT, it is now less likely that the infamous "OpenMPT does not respond" dialog from Windows occurs.

Misc
   [New] <js> INI Settings: When portable mode is enabled, the most common paths in mptrack.ini are now translated to relative paths (if possible). Plugin paths are not translated to relative paths (yet).
   [New] <js> Modules in gzip archives (single-file .gz archives) can now be imported, just to satisfy my laziness when downloading gzipped modules from Amiga Music Preservation. :-P
   [Imp] <js> Mod Loaders: Instead of creating message boxes in various places, errors are now written to the log and one message box is shown for each file.
   [Imp] <js> Binary files are now less often falsely recognized as early MOD files (15 samples without header): If the order list contains order list items > 128, loading is cancelled.
   [Imp] <js> Song Properties: Tool tips are shown for various controls.
   [Mod] <js> Options: Removed the "space bar repeats previous action" option, as it did not work anymore since the new key handler is used; in fact, this option can be achieved instead by using the "on key hold" for the "quick paste" key shortcut.
   [Reg] <rf> Removed old "velocity" volume command, which was experimental and unused.
   [Mod] <js> Replaced default VU-meter colours for the MPT scheme by more pleasant colours that were already used for the other themes.
   [Mod] <js> Updated internet links (ModPlug Central Forums link is now a permalink)
   [Fix] <js> Multi window edit: When (un)muting a channel from the general tab in window 1, it was instantly shown in the pattern editor of window 2, but not vice versa.
   [Fix] <js> Channel Manager: When removing channels using the channel manager, their names were not cleared properly.
   [Fix] <js> Song Length Estimation: Increased accuracy *a lot*! Doesn't get tricked by pattern jumps anymore, hehe. :)
   [Fix] <al, js> Instrument I/O: OpenMPT-specific flags in old ITI / XI files are loaded correctly again (broken in 1.18.00.00).
   [Fix] <js> When using the "close file" shortcut several times in a row so that multiple message boxes popped up, it was possible to crash OpenMPT.
   [Reg] <js> Removed AutodetectITplaystyle option, since the tracker detection works reliably enough now. Tracker detection can not be ignored anymore now.

Installer/release package
   [New] <js> Ladies and gentlemen... we finally have an installer. :)
   [Mod] <js> Updated DE_jojo.mkb.
   [Mod] <js> Updated Paul Legovitch's keymap (now also suitable for desktop keyboards).
   [Mod] <al> Updated default keybindings.


v1.18.00.00 (26 January 2010, revision 475) internal test build
---------------------------------------------------------------
General tab
   [Fix] <js> Channel name input field was not limited properly.

Sequence editor
   [New] <al> Can now copy/cut/paste order selections.
   [Imp] <js> Using the keyboard manager for shortcuts. 0...9, + and - keys are now also configurable.
   [Imp] <js> Duplicate / Create new pattern shortcuts do also work here now.
   [Imp] <js> Show cut/copy/paste orders in context menu.
   [Imp] <js> Middle click can now also be used for queuing patterns.
   [Fix] <js> Pasting orders now removes "+++" items if they are not supported by the current format.
   [Fix] <js> Fixed display error when selecting multiple orders, inserting them and clicking on another order (only first order of previous selection was un-highlighted).

Pattern tab::Pattern editing
   [New] <js> New paste mode "push forward paste", which resembles the default paste behaviour of Impulse Tracker. Includes new shortcut.
   [New] <js> New paste mode "paste flood" pastes the clipboard content again and again until it hits the bottom of the pattern (overflow paste will be disabled automatically if paste flood is used, for obvious reasons).
   [Imp] <js> When using the MPTM format, plugin param changes are written to the pattern as Parameter Control Events (instead of smooth MIDI macros).
   [Imp] <js> Assume that the clipboard pattern format is IT (instead of MOD) if no information about the format is available.
   [Imp] <js> Pasted Commands are converted if necessary, and commands that are invalid in the current format are removed.
   [Imp] <js> If "record note off" is enabled and Note Off commands are not supported by the current format, try Note Cut and volume commands.
   [Mod] <js> It is impossible to enter something into the volume column in MOD format now.
   [Mod] <js> When interpolating Parameter Control Events, the plugin number and note type won't get overridden if the note type is already PC or PCs.
   [Fix] <al> Pattern Copy & Paste: Mix paste behave better with parameter control notes.
   [Fix] <js> Amplify acted VERY weird when it was applied on an instrument that's not assigned to any sample.
   [Fix] <js> Amplify doesn't use volume column in MOD format anymore.
   [Fix] <js> When recording live from the keyboard, SDx shouldn't exceed the song speed anymore.
   [Fix] <js> Got rid of possible redundant undo points.
   [Fix] <js> Parameter Control Events are now deleted properly (last column).
   [Fix] <js> Copying only the param column of Parameter Control Events overwrote the value column when pasting them.
   [Fix] <js> Entering Note Fade notes didn't work the "old style" way.

Pattern tab::GUI
   [New] <js> Channel rename dialog in channel header context menu.
   [Imp] <js> Tidied up the upper panel. It fits perfectly on a 1024x768 screen with tree view enabled and also works on 800x600 with tree view disabled. With the new layout, about 8 more pattern rows can be seen in comparison to the old, bloated 1.17.02.* interface.
   [Mod] <js> Due to this cleanup, the "split keyboard" feature has been removed from the interface. The split keyboard settings dialog can now be accessed by using a shortcut, which should be even faster than the old method.
   [Imp] <al> If keyboard split is active, instrument drop list will show split instrument and split note.
   [Imp] <js> Grey out pattern name input field when in MOD/S3M mode.
   [Imp] <js> Added sequence selection edit control.
   [Mod] <js> Instead of hiding the sequence name control, just disable it (looks better).
   [Fix] <js> If the current pattern is the last possible pattern in the sequence, no "next pattern" is displayed.

Pattern tab::Note properties
   [Imp] <js> Hopefully correct limitation and explanation of "Set * waveform" parameters...
   [Imp] <js> Better explanation of "Invert Loop" parameter.

Pattern tab::Find/Replace
   [Imp] <js> When using Find&Replace, "follow song" will be disabled, because it's pointless and unusable with "follow song" on.
   [Fix] <js> Search&Replace didn't create an undo point.

Pattern tab::Misc
   [New] <js> New keyboard shortcut in pattern context: Duplicate pattern.
   [Fix] <js> When in sample mode, samples were never stopped when in new-style note off mode, which lead to sample jam when using long/looped samples.

Sample tab
   [New] <js> Sample Undo. 100 steps per sample (independent), undo buffer is cut off at a tenth of physical memory (that would be 400 MB for a system with 4 GB of RAM). Cutoff size can be specified by setting UndoBufferSize (in Megabytes) in section [Sample Editor] of mptrack.ini.
   [Imp] <js> When creating a new sample using "resize", sample loop is activated automatically.
   [Imp] <js> When sample is 8-bit, it will automatically be converted to 16-bit when applying time stretching / pitch shifting.
   [Imp] <js> Can now enter insanely high values into sample frequency input field (as they are supported by Impulse Tracker), allow only 65536 Hz for S3M files.
   [Mod] <js> Removed time stretcher's / pitch shifter's preview function as it's unnecessary now.
   [Fix] <js> Insert Silence: Loop points were not updated when adding silence at the beginning of the sample
   [Fix] <al> Actions such as time stretching and undo could trigger sample play.

Instrument tab
   [Fix] <js> When playing an instrument and disabling its envelopes at the same time, the toggled envelopes are stopped (prevents filter envelope from turning into a pitch envelope).
   [Fix] <al> Sample map was broken when dealing with sample indexes greater than 255.
   [Fix] <js> Update plugin list properly when cleaning up plugins while being on the instrument tab (possibly also improves instrument tab behaviour when working with multiple windows).

Instrument tab::Envelope editor
   [New] <js> Envelopes can be edited using keyboard. Various keyboard shortcuts have been added to move and edit envelope points. This uses a common "drag and drop" node with mouse editing, so a point can first be clicked and the be moved with e.g. cursor keys.
   [Imp] <js> When creating a new envelope, automatically enable it as well.
   [Imp] <js> Mark currently selected envelope node yellow for better visibility when using keyboard editing.
   [Mod] <js> Middle line is also shown for volume envelope.

Comments tab
   [Imp] <js> If sample size is < 1 KB, amount of bytes is shown instead of "0 KB".
   [Fix] <js> The lower part of the tab was receiving update messages that were not even meaningful to this tab (e.g. speed changes), so it was updating quite often with modules that have alternating speed and the toolbar was "blinking".

Tree view
   [New] <js> Show sequences in song tree view. Sequences can be inserted, duplicated and deleted by right-clicking the sequence items.
   [New] <js> Clicking on a mod item (i.e. a filename node) switches to the corresponding window.
   [New] <js> Added right-click options for mod items.
   [New] <js> Display playing samples / instruments (only those that are assigned to a sample) using green triangles. Can be enabled from setup screen.
   [New] <js> Muted samples and instruments are shown with a different icon.
   [Imp] <js> Can now dragondrop orders, even between sequences.
   [Imp] <js> Double-clicking order items and pattern items works as intended now.
   [Imp] <js> Show whole sequence (don't stop on first "---" item).
   [Imp] <js> Switching between sequences is a bit easier now. There's a context menu entry for it and double-clicking on an empty sequence will switch to it (as there are no order list item to click on).
   [Imp] <js> Different icons for effect / instrument plugins

VST / MIDI mapping
   [Imp] <js> Plugins Selector: Different icons for effect / instrument plugins.
   [Fix] <al, js> When moving around plugins, param control notes are now also updated.
   [Fix] <al> MIDI mapping: Pattern record checkbox wasn't updated properly.
   [Fix] <al, js> MIDI mapping: Shift key erroneously opened MIDI mapping dialog in some cases. However, it does not work properly with all plugins anymore (e.g. sliders in Synth1 are not shift-clickable anymore)

Mod conversion
   [Imp] <js> When converting a song that has subsongs to MPTM format, the user is asked if those subsongs should be converted into multiple sequences.
   [Imp] <js> If possible, all MPTM sequences will be merged into the first sequence. This also tries to fix patterns with Bxx effects.
   [Imp] <js> Better conversion of MOD / XM E4x / E7x command.
   [Imp] <js> Better conversion of note off commands when converting to .mod.
   [Imp] <js> Removing channel features (pan/vol) in formats where they're not supported.
   [Imp] <js> Insert pattern break commands when resizing patterns to 64 rows that were smaller.
   [Imp] <js> Changing between MOD and XM format limits speed / tempo commands (Fxx) properly now.
   [Imp] <js> Trim sequence if it's too long (e.g. in MOD format).
   [Imp] <js> Remove sample vibrato and sustain loops for MOD / S3M.

Playback (see also format-specific changes below)
   [Imp] <js> Added some more standard playback frequencies (176KHz, 192KHz) to setup.
   [Fix] <js> When jumping around in a module, high offset value is also memorized.

MPTM::Custom Tuning
   [New] <al> Can import scl-files. Upper limit for note count is 64.
   [Imp] <js> Tuning dialog: Using the default tuning path as default path for Import/Export dialog

IT::Saving
   [Fix] <js> Original IT specs concerning max orders/patterns were wrong. IT can handle up to 257 orders (as the last order is always ---, so it's actually 256 accessible orders), so the saving routines were also updated a bit.
   [Fix] <js> Save at least 2 order items.
   [Fix] <js> IT files with empty sample slots made with MPT will now FINALLY save correctly in Impulse Tracker.
   [Fix] <js> Compatibility Export: Don't store "extended filter range" flag.

IT::Loading
   [Imp] <js> Removed unnecessary / wrong pre-amp limits.
   [Fix] <js> IT files with global volume 0 are now loaded correctly.
   [Fix] <js> In some very rare (almost only theoretical) cases, the last IT instrument would not be loaded in previous versions. Use correct instrument header size (1.xx or 2.xx header) for comparison when loading instrument headers.

IT::Compatible Playback Mode
   [Fix] <js> Reset NNA actions on every note (tentative fix, fixes spx-farspacedance.it).
   [Fix] <js> Fixes from SchismTracker: Vol Swing, Pan Swing, Pitch / Pan Separation (PPS).
   [Fix] <js> Out of range offset command with Old FX on.
   [Fix] <js> Improved S3x / S4x / S5x handling.

S3M
   [Fix] <js> ST3 compatibility: Only allow waveforms 0 to 3 for S3x / S4x / S5x.
   [Fix] <js> The S3M format actually knows muted channels. This was not taken into account before.

XM::Loading
   [Imp] <js> Allow to load modules with an empty order list (as they are, in fact, valid XM files).

XM::Compatible Playback Mode
   [Fix] <js> Almost perfect arpeggio emulation (only a few notes are still wrong). Thanks, Ian Luck!
   [Fix] <js> Rogue note delays are now retriggering the instrument.
   [Fix] <js> Perfect emulation of buggy Rxy behaviour. Thanks to Ian Luck for helping me with this.
   [Fix] <js> Command X ModPlug extensions are now ignored in FT2 compatibility mode.

MOD
   [Imp] <js> Mod Creation: The default empty order list was too long, allowing for overly long songs to be created which would then not be saved correctly.
   [Fix] <js> Mod Creation: MOD Panning scheme is now set up correctly.
   [Fix] <js> 8-channel Startrekker modules ("FLT8") are loaded correctly now.

MOD::Playback compatibility
   [New] <js> Added song flag "ProTracker 1.x Mode" (for .MOD files) that enabled on-the-fly sample swapping as ProTracker did it. 8xx and E8x panning commands are also ignored in this mode.
   [New] <js> Support for the EFx command (Invert Loop). One has to pay attention when working with this command as it effectively trashes samples.

Module cleanup
   [New] <js> New cleanup feature: Merge sequences.
   [Imp] <js> Pattern Cleanup does now also work with multiple sequences.
   [Imp] <js> Improved cleanup dialog, with new options (remove all *, optimize samples).

MP3/Wav export
   [New] <js> Wave Convert: Normalization is back as experimental feature.
   [New] <js> Wav/MP3 export: Show estimated remaining time.
   [Imp] <js> MP3 export: Removed 60 minutes limit.
   [Fix] <js> MP3 export: Fixed possible issue with very long mod files (such as Skaven's "Beyond the Network").
   [Fix] <js> Wave Convert: The wave convert dialog had two default buttons, one of them (the "default default button") didn't make sense.

Colour setup
   [New] <js> Channel separators can now have custom colours.
   [New] <js> Can now specify the blend colour for previous/next patterns.
   [Mod] <js> Renamed FT2 and IT presets to "Blue" and "Green", as they did not resemble FT2 and IT in any way.
   [Mod] <js> Added VU Meter colours for the pattern colour presets.
   [Mod] <js> Changed the "Buzz" colour scheme a bit.
   [Fix] <js> When loading colour presets that have less colours are defined than required, the missing colours will be replaced by those from the "MPT" preset.
   [Fix] <js> When no INI file was present, channel separators were completely black.

Keymaps
   [Imp] <js> When loading a keymap file and unrecognized lines are found, only one message box is shown.
   [Mod] <js> All keymaps have been updated to version 1 and updated to contain the order list shortcuts.
   [Fix] <js> Keymap files have a version number now (currently version 1). If keymap file doesn't have a version number (that's version 0), the order list keys will be added automatically so that order list remains usable in new builds.

Module format support
   [New] <js> Can now import RIFF AM and RIFF AMFF files, as well as J2B (Jazz Jackrabbit 2 music) files, which are compressed AM(FF) files.
   [New] <js> Can now import PSM16 files (Silverball, early versions of Epic Pinball).
   [Fix] <js> MED Loader: Possible error when loading order list.
   [Fix] <js> MDL Loader: Various fixes (taken from Schism Tracker).
   [Fix] <js> IMF Loader: Slightly wrong instrument loader (this for once didn't break anything, though).
   [Fix] <js> AMF Loader: Effect handling was slightly broken.

Misc
   [Imp] <js> All Loaders: Fixed string handling to filter out all null chars in song/sample/instrument/etc. names. This avoids "empty" instrument names that occurred in a couple of .IT files before.
   [Imp] <js> Main window: Extended paste mechanisms (mix, flood, push forward) have been moved into a sub menu.
   [Imp] <js> Main window: Improved accelerator keys in the edit menu.
   [Imp] <js> Added "split keyboard settings" dialog to the "edit" menu and updated the shortcuts there (goto was missing).
   [Mod] <js> Store configuration and tuning files in %APPDATA% if possible. Can be disabled by adding UseAppDataDirectory=0 to [Paths] in mptrack.ini ("portable mode").
   [Mod] <js> Mod Creation: When clicking on the "new" button, the newly created module will be of the same type as the currently active document. Should probably be an option.
   [Mod] <js> Made Graph and Pattern Randomizer shortcuts invisible, as they are useless.
   [Mod] <js> Compatibility Export: Use module working directory in "save as" dialog.
   [Mod] <js> Using MS Shell Dlg font instead of MS Sans Serif in resource file.
   [Mod] <al> Changed some "ModPlug Tracker" strings to "OpenMPT".
   [Fix] <js> When using a Load/Save dialog, MPT's key handler is now disabled so that common shortcuts like F2, Ctrl+C, Ctrl+V, Esc. etc. can still be used.
   [Fix] <js> Mod Loaders: Very short sample sustain loops are now also accepted (fixes ckabsenc.it).
   [Fix] <js> Mod Creation: Filling the whole mod title field with null bytes on creation to avoid funky characters in other programs.
   [Fix] <js> Fixed possible issue with "long" (12 characters) instrument filenames.
   [Fix] <al> Autosave: 'Modified since last autosave'-flag wasn't always updated.
   [Fix] <al> Fixes to handling of 32 chars long instrument name.

Third-Party Libraries
   [Imp] Update SoundTouch (v1.5.0).

Release package
   [New] <js> Three new keymaps: French Laptop by Paul Legovitch, Norwegian MPT Classic by Rakib, US_mpt_classic_(snu).
   [Mod] <js> Updated DE_jojo.mkb.


v1.17.03.02 (22 September 2009, revision 371) internal test build
-----------------------------------------------------------------
General tab
   [Imp] <js> Song Settings dialog: Added suffixes "IT" and "S3M" to some mod flags for more clarity.
   [Fix] <js> Song Settings dialog will revert play flags to previous values if user presses the Cancel button.
   [Fix] <js> VSTi / Sample volume sliders only go up to 255 instead of 256.
   [Fix] <js> Document will now be set modified when moving or inserting plugins.

Sequence editor
   [New] <js> Multiple orders can be selected in the pattern sequence. At the moment, it is possible to insert, delete, duplicate and dragondrop multiple orders.
   [New] <js> Added context menu item "Render to wave", to render one or more patterns to wave.

Pattern tab
   [New] <js> Paste will now optionally continue on next pattern (overflow paste option).
   [New] <al> Channel reset (stops note, sets initial chn settings). Available from channel header context menu and new key binding.
   [New] <js> When shift-clicking somewhere, a selection will be drawn from the previous cursor position to the new position.
   [Imp] <js> Showing descriptions of "special" notes in the status bar, like it's done for effects.
   [Imp] <js> Shrinking patterns is now also possible with patterns < 32 rows.
   [Imp] <js> Solo/Unmute context menu has a bit more dynamical transition menu points (experimental).
   [Imp] <al> Added some checks to prevent entering notes which are not supported by the module type.
   [Mod] <js> Entering note with row spacing enabled can now move cursor to next pattern if continuous scroll is enabled.
   [Fix] <js> Inserting a new pattern won't resize it to 32 rows anymore if the current pattern has less than 32 rows.
   [Fix] <js> Offset and Velocity volume commands are displayed in default colour instead of "pitch" colour.
   [Fix] <js> Fixed weird combination of context menu shortcut and "always center active row" being disabled (http://forum.openmpt.org/index.php?topic=3203.0).
   [Fix] <js> Keyboard split note was off by one.
   [Fix] <js> Increased max. row spacing / skipping value to 64, values > 64 are now visibly clamped to 64 in the edit box.

Pattern tab::Note properties
   [Imp] <js> Added description to high offset command in note properties dialog.
   [Imp] <js> 7-Bit Panning slider also has the "Surround" state in S3M format now.
   [Imp] <js> Proper display of Pxy effect in the note editor window.
   [Imp] <js> Explanation for Tremor effect.
   [Imp] <js> Completed descriptions for extended MOD/XM, fixed display of several effects.
   [Imp] <js> Added description for S1x - Glissando Control.
   [Fix] <js> When double-clicking on a note in the pattern editor, the wrong note was displayed in some formats.

Pattern tab::Find/Replace
   [Imp] <js> Don't reset "replace all" flag after every search.
   [Mod] <js> "Search in whole song" and "Replace all" are now enabled by default.
   [Fix] <js> Replacing also works with high instrument numbers now. Also, empty instrument numbers won't be affected by "ins+1" anymore.
   [Fix] <js> Notes that cannot be used in the given format are not shown in the dropdown combo.
   [Fix] <js> Made combo boxes more convenient to use.

Pattern tab::Macro config
   [Imp] <js> Also show the current preset for Zxx config (Z80 - ZFF).
   [Fix] <js> "Show All" FX display index now starts at 1 instead of 0, like all other FX enumerations (tx Rakib).

Sample tab
   [New] <ks> Sample drawing.
   [New] <ks> Add silence to sample.
   [New] <js> Resize sample (same dialog as "add silence")
   [New] <js> Can now play sample from given position with Ctrl + left mouse button.
   [New] <js> DC offset removal.
   [New] <js> Batch export samples (shift + click on "save sample" icon).
   [New] <js> Added setting "FinetuneStep" to mptrack.ini section "[Sample Editor]".
   [Imp] <js> Better loop point handling when deleting sample selections.
   [Fix] <js> Limit sample vibrato fields properly. Vibrato Sweep ranges from 0 to 255 now.
   [Fix] <js> Remove special chars from sample filenames so the "save as" dialog will show up on OSs < Vista.
   [Fix] <js> When using the spin control, frequency is not clamped to [2000, 96000] anymore.
   [Fix] <js> Removed tuning from up/downsampling for MOD files which detuned them when saving.
   [Fix] <js> Transpose is now disabled when using MOD format.

Instrument tab
   [New] <js> Envelope points can now be added by shift-clicking somewhere in the envelope editor. Middle mouse button click removes the nearest point.
   [Imp] <js> Sample map shows tuning-specific note name on context menu.
   [Imp] <js> Added "Map all notes to <note name>" to instrument mapping context menu.
   [Mod] <js> Also show values from 0 to 64 for filter envelope (instead of -32 to 32).
   [Fix] <js> Pitch/Pan input field allows negative values.
   [Fix] <js> Proper limits for IT/XM fadeout values.
   [Fix] <js> Playing correct note in the instrument mapping control (notable difference when editing the scale from bottom to top).
   [Fix] <js> No relative values are shown for envelopes with no release node (status bar) (tx xaimus).
   [Fix] <js> Remove special chars from sample filenames so the "save as" dialog will show up on OSs < Vista.
   [Fix] <js> Fixed crash in instrument view that occurred if RowsPerBeat was 0.
   [Fix] <al> Fix to crash that occurred when multiple windows had instrument tab of the same document open.

Comments tab
   [Imp] <js> Default view mode is instruments instead of samples for XM files.
   [Imp] <js> Instrument / Sample list: Double click will switch to instrument / sample.

Tree view
   [Fix] <js> Playing sounds from a soundfont was broken.
   [Fix] <js> Deleting patterns from a module will also reset their names.

VST / MIDI mapping
   [New] <al> Editing a plugin param in its editor while holding shift key will now open MIDI mapping dialog.
   [New] <al> Can now record MIDI mapping changes to pattern.
   [Mod] <al> Changed host IDs and a couple of related return values. If compatibility problems occur, old IDs can be set with INI settings ("HostProductString", "HostVendorString", "HostVendorVersion" in section "[VST Plugins]").
   [Fix] <js> Some minor tweaks and fixes to the MIDI mapping dialog.

Mod conversion
   [Imp] <js> Convert E9x to Q8x as Q0x actually means "continue" and not "no change" for the volume change.
   [Imp] <js> Even better conversion of various pattern effects, including 7 / 8-Bit Panning, Surround, Note Cut / Off / Fade conversion, MOD retrigger, XM->IT volume column limitations, illegal notes).
   [Imp] <js> Proper conversion of Pxy effect.
   [Imp] <js> Full volume column conversion, resetting default global volume / tempo / speed for MOD files.
   [Imp] <js> \xx is converted to Zxx when converting to / saving S3M files or "compatible" IT files.
   [Imp] <js> Somewhat decent conversion of Kxx (Key Off) from XM to S3M / IT.
   [Imp] <js> Trim instrument envelopes if they're too long for the new format.
   [Imp] <js> Convert 500/600 commands properly from MOD to any format, Adjust sustain loops for XM files.
   [Imp] <js> Try to use fix commands that don't have a "memory" (00 value) in XM (Arpeggio) and MOD format (Arpeggio and a few others) by using the previous value.

Playback (see also format-specific changes below)
   [Imp] <js> Mixing: It's now possible to go down to 1ms latency (works with ASIO).
   [Imp] <js> If restart position is 0 and a sub tune is played (i.e. a tune separated with a "---" pattern), OpenMPT will now try to jump back to the first order of this sub tune instead.
   [Imp] <js> Added option to not reset all channels and variables when looping a module.
   [Fix] <js> 4-Bit panning didn't disable surround sound (fixed in compatibility mode in IT/MPTM/XM).
   [Fix] <js> Don't ignore value of pattern break commands on last pattern anymore.

MPTM
   [New] <al> New experimental parameter controls (Parameter Control Events) for controlling plugin params.
   [New] <al> Can now have multiple sequences in a module (access from order list context menu).
   [New] <js> Allow up to 240 envelope points.
   [New] <js> IT "Note Fade" command: This existed in IT's player routines already, but there was no way to actually use it in the editor. Triggering an invalid note would cause a note fade, so this is a new note type.
   [New] <al> Channel settings(vol&pan) for channels after 64 will now be saved in the file.
   [New] <js> MPTM command S7D explicitly enforces pitch envelope, S7E enforces filter envelope.

IT
   [New] <js> IT "Note Fade" command: This existed in IT's player routines already, but there was no way to actually use it in the editor. Triggering an invalid note would cause a note fade, so this is a new note type.

IT::Saving
   [Imp] <js> The row highlighting fields in the IT header are now used.
   [Imp] <js> Compatibility Export: Save with custom "tracker version" header field (same as for S3M).
   [Imp] <js> Compatibility Export: Removed stereo sample support.
   [Fix] <js> Compatibility Export: Ignore new MPT effects.
   [Fix] <js> Compatibility Export: Doesn't screw up patterns anymore if the module has more than 64 channels.
   [Fix] <js> Compatibility Export: Changes various version numbers and settings in compatibility export to better match Impulse Tracker made IT files.
   [Fix] <js> Limit fadeout values properly.
   [Fix] <al> Channel settings (volume & panning) for channels after 64 will now be saved in the file.

IT::Loading
   [Imp] <js> Can now load IT files with very small patterns (< 4 rows).
   [Imp] <js> Setting the "last saved with" version to 1.16 (instead of "created with") if module seems to be made with the old MPT.
   [Imp] <js> Detect more versions of MPT that did stupid things (can be seen in the "last saved with" field).
   [Imp] <js> Row highlighting in IT header is now recognized.
   [Fix] <js> Unset release envelope nodes for IT files made with IT 1.x, fix fadeout values.
   [Fix] <js> Proper adjustment of sample pre-amp.
   [Fix] <js> It is now possible to load IT files that have no samples.
   [Fix] <js> 31 BPM is an allowed default tempo. Tentative fix: Clamp to 32 (instead of 125).
   [Fix] <js> OpenMPT was loading the volume column command hx (vibrato depth) as ux (vibrato speed) and also saving it like this. In the pattern editor, ux was allowed, hx was not but it should be the other way around. Now, hx is always used but ux is still loaded correctly for old modules made with MPT/OpenMPT.

IT::Compatible Playback Mode
   [Imp] <js> More improvements to Vibrato, Tremolo and Panbrello.
   [Imp] <js> Retrigger (Qxy) works like in Impulse Tracker now (test #15).
   [Imp] <js> Tremor (Ixy) works like in Impulse Tracker now.
   [Fix] <js> Better sample vibrato compatibility. Vibrato Sweep isn't perfect yet, though.
   [Fix] <js> Offset beyond sample range.
   [Fix] <js> Don't reset Tremolo on new note, don't ignore tremolo if note volume is 0.
   [Fix] <js> Ignore S[345]x with x > 3.
   [Fix] <js> Multisample instruments change with no entry in the instrument column (fixes spx-shuttledeparture.it).
   [Fix] <js> Pattern loop count won't be reset on pattern transition (fixes gm-trippy01.it).
   [Fix] <js> Tempo slides won't exceed 255 BPM in compatible mode.
   [Fix] <js> Random vibrato, tremolo, panbrello waveforms (test #19).
   [Fix] <js> Fixed handling of pitch / filter envelope loops (test #24).
   [Fix] <js> Panning effects (Xxx, S8x, pxx) override pan swing (test #20).
   [Fix] <js> SD0 / SC0 is now interpreted as SD1 / SC1. (test #22).
   [Fix] <js> Portamento up / down resets the destination of tone portamento (test #23).
   [Fix] <js> Out of range global volume, per-channel global volume slides.

S3M::Saving
   [Imp] <js> Order list is now as small as possible (multiple of 2 instead of multiple of 16); Using ST3's default UltraClick value.
   [Imp] <js> Using an own version number in the header now, just like all the other trackers.
   [Fix] <js> Ignore new MPT effects.
   [Fix] <js> Patterns are now saved correctly. Previously, the last few rows might have come up as garbage in ST3 when they were empty.
   [Fix] <js> Clamp sample pre-amp to [32;127] instead of just taking the lower 7 bits (Default pre-amp value was 128, which resulted in pre-amp 0 when saving).

S3M::Loading
   [Imp] <js> Smarter Zxx conversion without message box (heuristic detection).
   [Fix] <js> Minimum sample preamp value is now 16 (like in ST3).
   [Fix] <js> Small modifications to pattern loader to load somewhat broken S3M files (fix from xmp).
   [Fix] <js> Don't reset global volume to max if it is 0 for S3M modules made with ST3.20 or newer.
   [Fix] <js> Disable loop for sample with very short loop at the beginning.
   [Fix] <js> Samples with very short loops (2 bytes) will now load correctly. This fixes for example 94hitmix.s3m and spectral.s3m.

S3M::Misc
   [Fix] <js> Module Creation / Loading: Sane default volume settings for MOD / S3M files again (128 global volume, 48 sample volume)
   [Fix] <js> S3M compatibility: Notes with SD0 are now ignored, SC0 is completely ignored

XM
   [New] <js> Compatibility Export.
   [New] <js> FT2 compatible playback mode.

XM::Loading
   [New] <js> Compatibility mode is automatically enabled for XMs not made with MPT.
   [Imp] <js> Make XMs with strange pattern header sizes load correctly (removed some code that was there to make really, really broken XMs load - would this have worked at all?).
   [Imp] <js> Setting the "last saved with" version to 1.16 (instead of "created with") if module seems to be made with the old MPT.
   [Fix] <js> Various changes to make XMs that have been compressed with BoobieSqueezer load correctly.
   [Fix] <js> Can now load XM version 1.02 and 1.03 (rare).
   [Fix] <js> Don't ignore last pattern anymore if an XM file has no instruments.

XM::Saving
   [Imp] <js> Compatibility export: Only save up to 32 channels.
   [Imp] <js> Setting "OpenMPT <version number>" in the "made with" field (as any other tracker put their signature in here as well).
   [Fix] <js> Always save with a channel number that's a multiple of two so FT2 will load the file correctly.
   [Fix] <js> F20 won't turn into G20 anymore.
   [Fix] <js> Limit fadeout values properly.
   [Fix] <js> More intelligent conversion of Speed / Tempo commands.

XM::Compatible Playback Mode
   [Fix] <js> Portamento + New Note with no previous note, Offset beyond sample range.
   [Fix] <js> More compatible "Note Off + Something" actions.
   [Fix] <js> Note Off with instrument number causes fadeout for samples that have no envelope.
   [Fix] <js> Volume command Ux should not enable Vibrato at all, it only sets the vibrato speed.
   [Fix] <js> Pxy effect was too deep.
   [Fix] <js> Using MilkyTracker's arpeggio logic for better XM arpeggio compatibility - still not perfect!
   [Fix] <js> Tempo slides won't exceed 255 BPM in compatible mode.
   [Fix] <js> In compatibility mode, retrigger with vxx on the same channel will always reset the retriggered note's volume.
   [Fix] <js> More compatible handling of Kxx effect.
   [Fix] <js> Pattern loops are now handled correctly.
   [Fix] <js> Out of range global volume, per-channel global volume slides.

MOD
   [Imp] <js> Module Creation: MOD files have 4 channels by default.
   [Imp] <js> Moved loop length check from compatibility export to normal save. There you go, Amiga users! :)
   [Fix] <js> Module Creation / Loading: Sane default volume settings for MOD / S3M files again (128 global volume, 48 sample volume).
   [Fix] <js> Inserting more than the allowed 128 orders in MOD format is not possible anymore.

MOD::Loading
   [Fix] <js> Last pattern was not loading in .MODs that have no samples.

MOD::Saving
   [Fix] <js> The compatibility export was only working properly for 8-bit mono samples.
   [Fix] <js> More intelligent conversion of Speed / Tempo commands.
   [Fix] <js> F20 won't turn into G20.

MOD::Playback compatibility
   [Fix] <js> Using 8-Bit (800-8FF) Panning instead of 7-Bit panning (800-880) now - fixes e.g. DOPE.MOD.
   [Fix] <js> Pattern loops are now handled correctly.

Setup
   [New] <js> New default directories: plugins and plugin presets.
   [New] <js> Button to reset ramping and resampling to default values.
   [New] <js> Shareable colour schemes (via config dialog).
   [Imp] <js> Added note to "always center active row" hint that this is required to be enabled for greyed out patterns.
   [Mod] <js> Changes to default general options configuration.

Module format support
   [New] <js> Can now import IMF (Imago Orpheus) modules.
   [New] <js> Can now import GDM (General Digital Music / BWSB sound system) files.
   [Fix] <js> A brand new PSM loader! Ditched the old and buggy loader as the new loader works way better, it can even handle modules from Extreme Pinball.
   [Fix] <js> 669 Loader: Small modification so corehop.669 can be loaded; Note: Loader is still buggy.

Misc
   [New] <js> Compo cleanup.
   [New] <js> Rearrange samples is back! And this time, it's even fully functional!
   [Imp] <js> XI Saver: Fill out the "created with" field properly (OpenMPT instead of FastTracker 2).
   [Imp] <js> MP3 export: Write ID3v2.4 instead of ID3v1 tags. Includes various changes to length limits, genre limitations and what's written in the tags.
   [Imp] <js> Decreased minimum pattern size for XM and IT format to 1 row.
   [Imp] <js> It is now possible to have modules with 1-3 channels, as this only seems to cause trouble with MOD files (so they still have 4 channels minimum of course).
   [Imp] <js> Autosave: If a module has not been changed since the last autosave, it will not be autosaved.
   [Imp] <js> Module loader: If plugins are missing, a single message box is shown.
   [Imp] <js> Slight redesign of the WAV / MP3 export dialogs.
   [Imp] <cm> LHA Decoder: Several fixes
   [Mod] <al> Default keybindings are now included in the executable, so default keybindings are available even without external keybinding file.
   [Fix] <js> Menus: Added mnemonic keys again and replaced the last(?) remaining "Midi" labels by "MIDI".
   [Fix] <js> Wav Export / Channel Manager / Pattern Editor: Channel names with leading space char are now accepted.
   [Fix] <js> General tab / Main bar / Loaders / Conversion: Fixed arbitrary speed limits (64 on general tab, 127 on main bar).
   [Fix] <js> Keyboard manager: Octave offset for key descriptions is now C, not A.
   [Fix] <js> Patterns: Reset pattern name when deleting pattern.


v1.17.02.54 (24 June 2009, revision 274)
----------------------------------------
   [Fix] <al> Pattern tab: It's now possible to use the old note fade behaviour when playing notes (see setup->general). (rev. 267)
   [Fix] <al> Pattern tab: Fixed wrong interpretations of "Old style pattern context menu"-option. (rev. 267)
   [Fix] <al> Misc: Some internal fixes. (rev. 267)


v1.17.02.53 (17 May 2009, revision 259)
---------------------------------------
General
   [New] <js> Can now import MO3 files using external library. (rev. 248)

   [Fix] <js> Song Cleanup: Sample cleanup should no longer remove data after sustain loop end point. (rev. 248)
   [Fix] <js> Misc: When adding channels from song properties, new channels are now initialized properly (http://forum.openmpt.org/index.php?topic=1814.0). (rev. 236)
   [Fix] <js> BPM approximation showed wrong rows per beat in some cases (http://forum.openmpt.org/index.php?topic=2532.0) (rev. 231)
   [Fix] <js> Disabled special handling of '&'-character when drawing texts to various components where the special handling should not take place (http://forum.openmpt.org/index.php?topic=1962.0). (rev. 229)
   [Fix] <al> File opening: Added a couple of return value checks to reduce the change of crash when opening lots of files (http://forum.openmpt.org/index.php?topic=2546.0). (rev. 239)

   [Mod] <js> Menu: Goto dialog can now be opened from Edit-menu. (rev. 246)
   [Mod] <al> Pattern cleanup: Clearing sequence after first '---' item is now optional. (rev. 239)
   [Mod] <al> When passing MIDI to plug, documents will now be set modified since MIDI data may change parameters. (rev. 243)

General tab
   [Mod] <js> General tab: VSTi volume slider is now disabled for S3M. (rev. 246)
   [Mod] <js> General tab: Initial channel volume controls are now enabled only for IT and MPTM. (rev. 246)

Pattern tab
   [New] <js> Added descriptions of SBx, S3x, S4x and S5x command parameters to note properties dialog. (rev. 251)
   [New] <js> Descriptions to retrigger note command parameters in note properties dialog. (rev. 248)
   [New] <js> Ability to start playback with incoming MIDI note (see Setup->MIDI) (rev. 246)
   [New] <js> Duplicate channel (see channel header context menu). (rev. 246)
   [New] <al> MIDI controllers can now be used to input smooth MIDI macro commands to pattern (Setup->MIDI). (rev. 240)

   [Fix] <al> Undo should now work with chords. (rev. 244)
   [Fix] <al> When playing with MIDI keyboard, plugins got a constant note velocity, not the actual velocity (http://forum.openmpt.org/index.php?topic=2754.0) (rev. 239)
   [Fix] <al> Undo fixes (didn't properly handle playback positions/multichannel record, set redundant undo points)(rev. 243)
   [Fix] <al> Param record in plugs GUI wrote commands even when pattern record was off. (rev. 243)
   [Fix] <al> Fixed chord detection when row spacing was enabled. (rev. 243)
   [Fix] <al> Fix to displaying wrong pattern name when using more than 255 patterns (http://forum.openmpt.org/index.php?topic=2344.0) (rev. 212)
   [Fix] <al> Accidental moving when selecting order in margins shouldn't happen anymore. (rev. 225)
   [Fix] <al> Fix to possible crash when using undo after pattern resize (bug introduced in rev. 168)

   [Mod] <js> When applying "change instrument", an instrument number won't be added to note off/cut anymore if the note doesn't already have an instrument. (rev. 248)
   [Mod] <al> Default order list margin value can now be controlled with "DefaultSequenceMargins" INI settings under "Pattern Editor" context. (rev. 225)
   [Mod] <al, js> Sequence view: Sequence scrolling won't no longer be cut on first '---' item on IT / MPTM / XM. (rev. 237)
   [Fix] <al> Pattern: The keyboard split "feature" when entering chords is removed (http://forum.openmpt.org/index.php?topic=2790.0). (rev. 244)

Sample tab
   [New] <js> Can now normalize sample selections. (rev. 254)
   [New] <js> Can now optionally normalize all samples instead of just one (click normalize with shift down). (rev. 249)
   [New] <al, js> Status bar now displays Oxx / 9xx offset value at current mouse cursor position. (rev. 232)
   [New] <al, js> Sample amplify now accepts negative values (inverts sample phase) (http://forum.openmpt.org/index.php?topic=2219.0). (rev. 234)
   [New] <al, js> Signed/unsigned sample conversion. (rev. 235)
   [New] <al> Added button for phase invert to toolbar. (rev. 235)
   [New] <js> Ability to save sample as raw. (rev. 236)

   [Fix] <al> Fix to zoom-related crash when loading samples in sample tab. Occurs usually with lengthy samples. (rev. 211)
   [Fix] <js> Playing sample selection didn't work properly in all cases (http://forum.openmpt.org/index.php?topic=1700.0). (rev. 231)
   [Fix] <js> Setting loop points could affect playing of sample even if loop was disabled (http://forum.openmpt.org/index.php?topic=1874.0) (rev. 231)

   [Mod] <js> Notes from MIDI are now handled the same way as notes from keyboard when making sample selections. (rev. 246)
   [Mod] <js> Play sample button now stops previous note even if mod is playing (http://forum.openmpt.org/index.php?topic=1366.0) (rev. 231)
   [Mod] <js> Sustain loop will now be enabled when setting it to sample selection. (rev. 231)
   [Mod] <js> Sample editing: If possible, use loop points as trim limits if there's no selection chosen. (rev. 230)
   [Mod] <al> Time stretching is now implemented with SoundTouch library. (rev. 228)
   [Mod] <al> Disabled pitch shifting / time stretching of 8-bit samples (didn't seem to work). (rev. 228)

Instrument tab
   [Mod] <js> Sample map can now map "No sample". (rev. 236)
   [Mod] <al> Changed default instrument plugin volume command handling from Dry/Wet to none. Also added INI setting with which one can set the default value used for new instruments. INI setting is "DefaultPlugVolumeHandling" in [Misc], possible values are 0,1,2. (rev. 238)
   [Fix] <js> Envelope view: Middle line will now be drawn in panning and pitch/filter envelopes even if row guidelines are enabled. (rev. 254)

MPTM
   [Fix] <al> Pattern cleanup: In some cases sequence wasn't cleaned properly for mptm. (rev. 239)
   [Mod] <al> Changed pattern/order limit for MPTm from 65000 to 4000. (rev. 212)

MPTM::Custom Tuning
   [New] <al> Added letter 'b' to drawable letters. (rev. 217)
   [Mod] <al> Notes should now be drawn more clearly when using custom tunings. (rev. 217)
   [Fix] <al> Creating 'group geometric' was broken (perhaps since v. 1.17.02.49) (rev. 252)
   [Fix] <al> Loading certain old tuning objects didn't work. (rev. 238)

IT
   [Fix] <al, js> Macro config should now be loaded correctly also when loading IT files not made with MPT. (rev. 257)
   [Fix] <al> When file was saved with compatibility export, the last order was not shown in Impulse Tracker. (rev. 257)

IT::Compatible Playback Mode
   [Fix] <al, js> Playback fix to vibrato with ramp down waveform. (rev. 257)

XM
   [Fix] <js> Dxx effects that are to the left of a Bxx effect are now ignored. (http://forum.openmpt.org/index.php?topic=2769.0) (rev. 241)

S3M
   [Fix] <al> S3M Saving: Sequence of length 241-255 should now be cut to length 240 instead of 16. (rev. 239)
   [Mod] <al> S3M Saving: Saved sequence is no longer cut on first '---' item. (rev. 239)
   [Mod] <al> When loading S3M files which contain Zxx effects, user is now asked how to process them. (http://forum.openmpt.org/index.php?topic=2166.0) (rev. 233)

MOD
   [Fix] <al, js> Fixes to MOD saving: it should now be possible to create ProTracker compatible MOD files with compatibility export. (rev. 256)

Misc
   [Fix] <from libmodplug> Fix to faulty portamento handling on loading AMF.
   [Fix] <various> Lots of smaller bug fixes.

Release package
   [Mod] <js> Updated DE_jojo.mkb keymap.


v1.17.02.52 (14 Apr 2008, revision 210)
---------------------------------------
   [Fix] <al> Shouldn't need winhttp anymore (at least now that update check is disabled). Dependency caused problems in Win98.
   [Fix] <al> Fix to faulty plugin file existence check (introduced in 1.17.02.51) (http://forum.openmpt.org/index.php?topic=2255.0)
   [Fix] <al> Sound card-options buffer length value validation.
   [Fix] <al> In 1.17.02.51, muted channels were ignored completely in MIDI export. Now pattern effects are processed in muted channels.
   [Fix] <al> IT style-playback fix


v1.17.02.51 (29 Mar 2008, revision 208) internal test build
-----------------------------------------------------------
   [New] <al> Unmute all(on transition) shortcut keys should now work in order list context.
   [New] <al> Half / double pattern row count buttons to pattern properties dialog.
   [New] <al> Channel status in status bar now show channel volume info.
   [Mod] <al> Modified flag is not set when sliding tempo/global volume slider for MOD file.
   [Mod] <al> When setting instrument pan, checking whether instrument samples have set pan enabled and optionally disabling them.
   [Mod] <al> Disabled Set Pan in sample tab for XM.
   [Mod] <al> Show previous/next pattern now shows pattern over +++ order list items.
   [Mod] <al> Disabled setting channel pan for MOD/XM in general view.
   [Mod] <al> MIDI export won't anymore export muted channels (http://forum.openmpt.org/index.php?topic=2017.0).
   [Mod] <al> When loading plugin information at startup, checking whether the plugin files exist (http://forum.openmpt.org/index.php?topic=1367.0).
   [Fix] <al> Fix to crash when loading plugins with long (> 32 characters) parameter names.
   [Fix] <al, ma> Fix to possible memory corruption problem on handling VST plugins with more than 30 outputs.
         - Plugins with more than 32 outputs might still be handled poorly.
   [Fix] <al> Fix to possible crash when browsing modules in tree view (http://forum.openmpt.org/index.php?topic=2222.0).
   [Fix] <al> Fix to severe memory leak in the same section as above.
   [Fix] <al> Fix to mptm not showing in tree view file browser.
   [Fix] <al> Fix to MIDI drum export (http://forum.openmpt.org/index.php?topic=2024.0).
   [Fix] <al> Fix to possible crash on MIDI export if exporting module with more than 64 channels.
   [Fix] <al> When converting MOD->S3M/IT/MPTM, finetune setting was ignored (http://forum.openmpt.org/index.php?topic=1706.0).
   [Fix] <al> IT compatibility: Fix to not resetting envelopes on new instrument (http://forum.openmpt.org/index.php?topic=1869.0).
   [Fix] <al> IT compatibility: Fix to bidi loop resetting (http://forum.openmpt.org/index.php?topic=788.0).
   [Fix] <al> IT compatibility: Fix to note trigger after note cut (http://forum.openmpt.org/index.php?topic=2080.0).
   [Fix] <al> Mix mode tool tip in general tab was in some cases shown on unrelated controls (http://forum.openmpt.org/index.php?topic=2176.0).
   [Fix] <al> Pitch/tempo lock was lost on first instrument when opening instrument tab for the first time (http://forum.openmpt.org/index.php?topic=1823.0).
   [Fix] <al> Verifying buffer length-setting read from INI file to prevent the impression that it can be set < 10 (http://forum.openmpt.org/index.php?topic=992.0).
   [Fix] <al> Pattern paste was broken for MOD (probably since .46) (http://forum.openmpt.org/index.php?topic=1938.0).
   [Fix] <al> Continuous pattern navigation fixes (http://forum.openmpt.org/index.php?topic=1960.0, http://forum.openmpt.org/index.php?topic=1959.0).
   [Fix] <al> Keyboard split related fix (http://forum.openmpt.org/index.php?topic=1887.0).
   [Fix] <al> Release node information is now included when copying instrument envelopes (http://forum.openmpt.org/index.php?topic=1780.0).
   [Fix] <ma> Potential memory corruption bug when loading VSTs
   [Fix] <al> Fixed MIDI mapping not checking MIDI event, which could cause events like pitch bend to trigger some mapping item.
   [Fix] <al> Extended song/instrument properties were not always loaded correctly for IT (bug introduced in 1.17.02.50)(http://forum.openmpt.org/index.php?topic=2154.0).
   [Fix] <al> Fix for wrong tabs being displayed when converting between module formats with and without instrument support (http://forum.openmpt.org/index.php?topic=1614.0).
   [Fix] <al> Fix for possible crash on save/load when using more than 64 channels with MPTM.
   [Reg] <al> Removed buggy rearrange samples (http://forum.openmpt.org/index.php?topic=2148.0).


v1.17.02.50 (26 Jan 2008, revision 198) internal test build
-----------------------------------------------------------
   [New] <al> MIDI controller mapping to plugin params.
   [New] <al> Ability to take MIDI volume into account when playing notes.
   [New] <al> Ability to pass MIDI to plug.
   [New] <al> Ability to start/continue/stop play with certain MIDI messages (untested)
   [New] <al> Ability to choose how volume commands behave for plugs.
   [New] <al> Keyboard shortcuts for preset navigation jumps in the plugin editor.
   [New] <al> Added ability to edit various flags in song properties.
   [Mod] <al> MIDI CC bug related compatibility improvement for loading old IT/MPTm files.
   [Mod] <al> .bak files won't now be shown with "All modules" filter when loading modules.
   [Mod] <al> MPTm made with this version will be recognized as IT in earlier versions.
   [Mod] <al> Various validity checks for read data in ITP loading.
   [Fix] <al> Fixed sending wrong MIDI message in VSTi volume command handling when set to control MIDI Volume.
   [Fix] <al> Default VST editor preset field name validation in the menu bar.
   [Fix] <al> Fix for pattern duplicate for small patterns (http://forum.openmpt.org/index.php?topic=1747.0).
   [Fix] <al> Fixed song properties-menu entry in main window (was greyed and didn't show key shortcut)
   [Fix] <al> Fixed crash with certain toolbar related INI settings (http://forum.openmpt.org/index.php?topic=2033.0).
   [Fix] <al> Further fixes to prevent unnotified overwriting of file.
   [Fix] <al> Show row playtime didn't on certain cases work on first pattern row (http://forum.openmpt.org/index.php?topic=2044.0).
   [Fix] <al> Fix to faulty play with certain instruments without notes in IT compatible play mode (http://forum.openmpt.org/index.php?topic=2080.0).
   [Fix] <al> Pattern number box didn't open pattern properties when using MPTm (http://forum.openmpt.org/index.php?topic=2073.0).
   [Fix] <al> Fixed wrong MIDI CC names in macro editor.
   [Fix/Mod] <al> Setting volume to 0(v00) in pattern didn't necessarily set volume to 0 when using volume random variation for instrument. All other random variation behaviours are changed as well; now the 'swing' is applied directly to channel values instead of using swing addition, and by default the swing effect is reset on new note (http://forum.openmpt.org/index.php?topic=2074.0).


v1.17.02.49 (17 Nov 2007, revision 194) internal test build
-----------------------------------------------------------
   [New] <al> Improved VST preset navigation in VST window. Known problem: doesn't update if preset is changed from VSTs own preset navigation.
   [New] <al> Improvements in IT compatibility play mode. When loading ITs, if file doesn't seem ModPlug-made, then automatically setting IT compatibility play mode. The play mode setting can be toggled in song properties dialog, and the autodetection with an ini setting.
   [New] <al> 'key binding not understood'-messages can be disabled with an INI setting.
   [New] <rf> Add name filter to plugin selection dialog. Useful when you have hundreds of plugins.
   [New] <sp> Allow Window key as a modifier in the keyboard configuration. Disables start menu pop-up when pressing the Win key iff it used in the active keyboard configuration.
   [New] <sp> Disables NumLock/CapsLock/ScrollLock lamps on keyboard iff they are used in the active keyboard configuration. The lamps will blink anyway - can't help it until we start using DirectInput.
   [Mod] <al> Custom tuning related
         - file format changes
         - changed interpretation of finesteps: now zero finesteps means that finesteps are equal to notesteps, previously zero finesteps disabled portamentos etc.)
         - Pitch slide between notes with portamentos is now specialised also for other tuning types than just geometric (changes behaviour). Previously behavior was 'geometric' for all types.
   [Fix] <al> Fixed wrong file version in IT compatibility save (http://forum.openmpt.org/index.php?topic=1723.0).
   [Fix] <al> Fixed possible unnotified overwriting of file occurring for example when dealing with a new file (http://forum.openmpt.org/index.php?topic=1813.0).
   [Fix] <al> Fixed broken note preview for certain type of instruments in instrument tab (http://forum.openmpt.org/index.php?topic=1996.0).
   [Fix] <al> Fixed possible crash on channel mode wav export when a channel has a long name (http://forum.openmpt.org/index.php?topic=2005.0).
   [Fix] <al> Fixed pattern position indicator jump when clicking plugin box in channel header (http://forum.openmpt.org/index.php?topic=2014.0).
   [Fix] <rf> Fix pattern search, which could search for the wrong param. Also enable typing of desired param value rather than only selecting from list box (http://forum.openmpt.org/index.php?topic=1799.0).
   [Fix] <rf> Delay-load winhttp.dll and don't die if it can't be found, e.g. on Win98 (http://forum.openmpt.org/index.php?topic=1778.0).
   [Fix] <rf> Fix a couple of pixels on D# in the pattern editor small font bitmap (http://forum.openmpt.org/index.php?topic=1781.0).


v1.17.02.48
-----------
   [Mod] <al> Pattern manager channel reordering behaviour changes / fixes (http://forum.openmpt.org/index.php?topic=1148.0).
   [Fix] <al> Fix song cleanup issue (http://forum.openmpt.org/index.php?topic=1711.0)
   [Fix] <al> Pitch/Tempo lock fix (broken in .46 and .47) (http://forum.openmpt.org/index.php?topic=1646.0)
   [Fix] <sp> Fix bad horizontal scrolling in pattern editor when positioning the cursor with the mouse (http://forum.openmpt.org/index.php?topic=1650.0).
   [Fix] <rf> Fix odd "play row" behaviour when using 1 tick-per-row (http://forum.openmpt.org/index.php?topic=1038.0).
   [Fix] <rf> Fix pop due to ramping when song starts with a pattern command that sets a low global volume (http://forum.openmpt.org/index.php?topic=523.0).
   [Fix] <rf> Fix occasional colour issues with order list (http://forum.openmpt.org/index.php?topic=867.0).
   [Fix] <rf> Fix impossible horizontal scrolling in pattern editor when playing with follow song on.
   [Fix] <rf> Grey out "Trim" option in sample editor context menu if there's no selection (http://forum.openmpt.org/index.php?topic=908.0).


v1.17.02.47
-----------
   [Mod] <al> Pattern skipping behaviour returned to that of .45
   [Fix] <sp> Save pattern scrollbar position when switching to other tabs.
   [Fix] <sp> If the cursor is moved but it is not on screen, move both horizontal and vertical scrollbars to make it visible.
   [Fix] <rf> Fix saturation on old modules (introduced in 1.17.02.46). Loading tracks with no saved mix level setting defaults to 'original'.
         Starting new IT, MPTM, ITP or XM defaults to '1.17RC3'. Starting new MOD or S3M defaults to 'original'.
   [Fix] <rf> Tree view FX list now starts with FX01 instead of FX00.


v1.17.02.46
-----------
   [New] <rf> An update checker has been added. Please report a bug if you have any problems with the update notification.
   [New] <al> Experimental MPTm format:
         - Internally, it is still very close to the IT-based format.
         - Order&pattern limit increased to 65000; whole range not tested :) (Note that commands such as position jump doesn't cover the whole range unless the #-extension can be used (haven't tested))
   [New] <al> User definable tuning modes for instruments:
         - Only available for MPTm
         - Ratio value as well as note name for every key can be assigned individually; gives rather free hands for experiments.
         - Every instrument can have its own tuning
         - Tunings can be saved to file and loaded from file.
         - IMPORTANT: When using tunings, behaviour of various commands such as portamento have been changed, and new behaviours are still to be decided.
   [New] <al> In song properties, option to increase playback compatibility with original Impulse Tracker behaviour. Is in no way complete; currently affects only a couple of differences. Many differences are still there.
   [New] <al> Ability to load multiple mods/samples/instruments from corresponding load dialogs.
         - Known issue: Intermittent failures.
   [New] <al> 32-bit float wav import
   [New] <al> Playback control additions: 'Solo on transition' & 'Mute on transition'. Available from pattern view context menu (right click).
   [New] <al> Envelope points can be scaled by a factor through context menu on envelope view (right click)
   [New] <al> Calculator of playback time (measured from start) at the beginning of any row of any pattern (uses existing song length estimation).
         - Known limitation: When the row is within pattern loop, doesn't give all possible times.
   [New] <rf> SCx now sends note-off to VSTis at tick x.
   [New] <rf> New mix mode (called 1.17RC3): bypass global preamp, force soft panning, provide explicit dB value for sample attenuation.
   [New] <rf> Check for updates on startup. To disable, set CheckForUpdates=0 in mptrack.ini.
   [Mod] <al> Channel states resetting when jumping between orders from order list.
         - NOTE: While this fixes a bug (behaviour change) introduced in the tuning branch(?), it also changes quite prominent behaviour so can annoy people - might need to be modified at some point.
   [Mod] <al> Added version number to the main window title.
   [Mod] <al> Changed the 'order message' at the bottom bar of the screen "Position x of y" to "Position x of y (x in hex of y in hex)".
   [Mod] <al> Lots of smaller (internal) changes.
   [Fix] <al> 24/32-bit PCM wav sample import fixed
   [Fix] <rf> Plugin list window remembers its position/size even on cancel.
   [Fix] <rf> Fix odd window position on very first startup (before mptrack.ini is created).
   [Fix] <al> When opening instruments, load dialog didn't remember its previous path.
   [Fix] <al> In general tab, it was possible to give longer module name than the file format could save.
   [Fix] <al> Instruments associated with VSTis no longer also need to be associated to a sample in order to play.
   [Fix] <al> Trash characters to empty ITP comments should no longer appear.
   [Fix] <al> Channel state should now be updated correctly when e.g. moving channels through channel manager.
   [Fix] <al> It should no longer be possible to remove all channels from channel manager.


v1.17.02.45
-----------
   [New] <al & Alex> "Pitch to tempo lock" instrument setting: define the tempo at which your instrument loops correctly, and it will be pitched automatically to match the song's current tempo.
   [New] <al> Notification when attempting to modify pattern but pattern record is off.
   [New] <al> Order list margins: you can define how many slots to keep visible around the active pattern as the order list scrolls
   [Fix] <al> Fixes for various unexpected pattern loop state changes.
   [Fix] <al> Fixes to IT Style clear.
   [Fix] <al> Memory management fixes and misc other bug fixes.
   [Fix] <rf> ITP loading fixed (I broke it in v1.17.02.44)
   [Fix] <rf> Time estimation fixed for tracks with pattern break+XParam.
   [Fix] <rf> "Last saved with" version number was not always saved correctly - fixed


v1.17.02.44
-----------
   [New] <rf> Added release section to volume envelope (see: http://openmpt.xwiki.com/xwiki/bin/view/Manual/InstrumentReleaseEnvelope). IT only.
   [Fix] <rf> Overflow fixes in file loading functions (see: http://aluigi.altervista.org/adv/mptho-adv.txt)
   [Fix] <rf> Greyed out irrelevant items in the order list context menu.


v1.17.02.43
-----------
   [New] <rf> You can now load up new plugins from anywhere, not just the General tab. Select "Plugin Manager..." from the view menu. This can also be assigned to a global hotkey.
         Limitation: currently plugins added to a song in this manner with always be put in the first empty slot. In a future version you'll be able to choose the slot directly from that window.
   [New] <rf> "Cleanup Plugins" to remove any plugs that are not associated to a channel and not used by an instrument and not used as an output for any used plugs.
   [Fix] <rf> Fixed channel limits. Should be able to correctly save IT pattern data with up to 127 channels. There's only space for 64 channel headers though (channel names etc..). XMs restricted to 64 channels.
   [Fix] <rf> Added channel limit check when adding channels from the pattern editor.
   [Fix] <rf> Fixed instant crash with SampleTank 2.1.


v1.17.02.42
-----------
   [New] <rf> "Compatibility export" in file menu: save as 'plain' IT, without all of OpenMPT's crap. IT only for now (not XM).
   [Mod] <rf> User now gets a warning when loading MDA Degrade (tx fisk0 - http://forum.openmpt.org/index.php?topic=467.0)
   [Fix] <rf> Set instrument in pattern editor should work when no note is specified (tx Torvus - http://forum.openmpt.org/index.php?topic=470.0)
   [Fix] <rf> Restart position saved in IT (tx LPChip - http://forum.openmpt.org/index.php?topic=473.0)
   [Fix] <rf> Loop song now works even if restart position falls on +++ (tx LPChip - http://forum.openmpt.org/index.php?topic=463.0)
   [Fix] <rf> Last used tempo is applied even when playback is triggered from instrument panel. (tx LPChip - http://forum.openmpt.org/index.php?topic=480.0)


v1.17.02.41
-----------
   [New] <rf> Pattern record state is now saved to INI.
   [Fix] <rf> Fixed the following settings that were not saving correctly: mod document window status, row spacing, channel VU meters, channel effect visibility, Most recent files list, Toolbar settings.
   [Fix] <rf> Process priority no longer defaults to high.


v1.17.02.40
-----------
   [New] <al> Added indicator of currently playing pattern to order list.
   [New] <al> 'Loop pattern' and 'follow song' keys should now work when order list has focus.
   [New] <rf> Removed registry dependencies. All settings will now be saved to ini file.
   [Fix] <rf> Correctly update order list position when cycling through patterns
   [Fix] <al> Fixed order list GUI update on ctrl-transition when in pattern loop mode
   [Fix] <al> Moving a channel should now correctly take into account record-channels and pending mutes
   [Fix] <al> Switching auto-delay off in the options now works for note-offs as well.
   [Fix] <al> Some mod-effects like 'pattern jump' and 'break pattern' no longer conflict with pattern loop toggling.
   [Fix] <rf> Fixed bad capping of random cutoff variation (tx LPChip)
   [Fix] <rf> Fixed crash on loading ITP with pattern names (tx Relabsoluness)
   [Fix] <rf> Fixed incorrect version number in saved files (tx Relabsoluness)
   [Fix] <rf> Improved screen position restoration (tx Snu, Waxhead)


v1.17.02.39
-----------
   [New] <al> Remove and insert channels directly from pattern editor via channel header context menu
   [New] <al> Toggle loop pattern playback mode with a shortcut key and a checkbox above the pattern editor
   [New] <al> The automatic note delays that are inserted when recording notes live are now optional
   [Mod] <rf> Version number in executable properties now correlates with real OpenMPT version number
   [Mod] <rf> Restored solo/mute in pattern editor main context menu.
   [Fix] <al> Fixed auto note delays so they work with S3Ms too
   [Fix] <al> Fixes and improvements to displayed instrument name in pattern editor
   [Fix] <al> Fixes and improvements to instrument swap from context menu
   [Fix] <rf> Plugins should never cause song to be marked as modified if their GUI is not open (tx LPChip)


v1.17.02.38
-----------
   [Fix] <rf> Fixed possible buffer overrun in VST event queue
   [Fix] <rf> Changed handling of VSTi note-offs to reduce unexpected "interaction" between notes on different channels (a VSTi note-on in chan1 could sometimes be blocked by a VSTi note-off on the same row in chan2) (tx ganja)
   [Fix] <rf> No longer issue MIDI bank & program message every time MIDI channel changes - this fixes HyperCanvas behaviour (tx ganja)
   [Fix] <rf> Fixed: new channel mute mode did not mute VSTis at all.
   [Fix] <rf> Fixed: changing mute mode while some channels were muted prevented them from being unmuted.
   [Fix] <rf> Fixed: editing a pattern from tree view by double clicking it was broken
   [Fix] <rf> Editing of note column of sample map is disabled for XMs (XM doesn't save that data).
   [Fix] <rf> Fixed: If you agreed to reorganized instrument during an instrument cleanup, nothing at all would happen.
   [Fix] <rf> Fixed Pattern amplification had no effect on instruments mapped to "phantom samples" (tx lpchip)


v1.17.02.37
-----------
   [New] <rf> Added new mute mode which maintains sample synchronisation. Enable it in the global settings (last checkbox).
   [New] <rf> Added macro presets to control MIDI CCs in MIDI CC window.
   [New] <rf> Added configurable keys for Song Properties, Pattern Properties & Macro Configuration.
   [Fix] <rf> Fixed incorrect volume when receiving notes from MIDI-in when beyond keyboard split mark.


v1.17.02.36
-----------
   [New] <rf> Added "Pass keypresses to plug" option in plugin GUI options menu, to prevent MPT from stealing keypresses from plugins that need them.
   [New] <rf> More intelligent instrument dropdown box in patten editor will show sample name if instrument has no name, and instrument's plugin name.
   [New] <rf> volume commands without notes now send volume MIDI CC to plugs, but as far as I've seen, no plugs seem to respond to it. (turns out that this was broken from the very beginning.)
   [Mod] <rf> Disabled period cap to allow playback of notes below A-0 (experimental).
   [Mod] <rf> Leave unavailable loop options visible (but greyed out) in sample editor context menu, to avoid confusion (tx lpchip).
   [Mod] <rf> Clicking in the note map will set the active note to be the one that was clicked on, rather than just moving up/down by 1.
   [Mod] <rf> Changing the note in the note map will no longer move down one note.
   [Fix] <rf> Options menu on plugin GUI sometimes failed to show checked options after closing and re-opening the window.
   [Fix] <rf> Channel headers properly updated after moving them in the channel manager (tx anboi).
   [Fix] <rf> Fixed crash when interpolating with keyboard shortcuts with a selection spanning a single row (tx lpchip).


v1.17.02.35
-----------
   [New] <rf, al> Note delay (SDx) is written automatically during "live tracking" if there are no effects already on the existing row.
   [New] <rf> Preliminary parameter value recording should work a bit now with follow song on. Attempts to set correct macro if it exists. Will only overwrite \xx. Does not work with certain plugs that don't give idle time back to the host during mouse down (e.g. Albino, Vanguard...), still trying to understand this. Please play with this & give feedback, but don't expect miracles yet. :)
   [Mod] <rf> Experimental: muting a channel with a VSTi playing should turn off the active note on that channel.
   [Mod] <rf> MIDI pitch bend reset on each new note for that instrument's MIDI channel.
   [Fix] <rf> Restored external 0-255 sample panning range with XM.


v1.17.02.34
-----------
   [New] <al> Added dynamic instrument list for Change Instrument item in pattern context menu.
   [New] <rf> If you load a track with unrecognized plugins, you'll be prompted to search for the plugs on KVR Audio.
   [New] <al> Added "Clear selection" item in pattern context menu.
   [Mod] <rf> Disabled it for users who have opted for the old style context menu in general settings, + other minor change.
   [Mod] <al> Can now set an instrument value for notes which previously had no attached instruments.
   [Fix] <rf> Fixed rare crash on playback if playing a song with missing plugins.


v1.17.02.33
-----------
   [Fix] <rf> Fixed plugin exceptions introduced 1.17.02.31 (misplaced conditional caused bad ptr in audioMasterAutomate case).


v1.17.02.32
-----------
   [Fix] <rf> Fixed typo in solo fix in 1.17.02.31.


v1.17.02.31
-----------
   [New] <rf> Automatically generate a macro for a param by touching that param on the plug's GUI.
         To try it, select an unused macro from the plugin GUI's Info/Macros menu, then touch a param.
   [New] <rf> Added "unmute all" custom key.
  ([New] <rf> Preliminary parameter value recording. Enable from plugin GUI's Option menu.
         However it currently does not work correctly with follow song enabled:
	     active mousing on a plugin GUI blocks the cursor, so all values get written in the same place. :))
   [Fix] <rf> Restored original MPT behaviour: If the cursor is in the effect letter column, and a key is pressed that corresponds to no known effects, that key press will be applied to the effect param column. And vice versa.(tx Emperor)
   [Fix] <rf> Tentative fix: Changed effEditIdle dispatching behaviour in an attempt to fix issue with Lounge Lizard (http://www.modplug.com/forum/viewtopic.php?t=3710)
         Please let me know if this breaks GUI refreshes for other plugs.
   [Fix] <rf> Fixed: Minor bug in search and replace - searching for "compound" effects like SDx sometimes failed.
   [Fix] <rf> Fixed: It was impossible to preview simultaneous notes in the pattern editor (tx Emperor)
   [Fix] <rf> Fixed: Changing a param in default plugin GUI could result in a continuous param update cycle until the param value returned by the plugin stabilised.
   [Fix] <rf> Fixed: Unsoloing a previously soloed channel resulted in unmute all if other channels had since been unmuted. :)


v1.17.02.30
-----------
   [Fix] <rf> Fixed drum program being offset by 1 on MIDI export.
         NB: MIDI import/export uses 0-127 range for MIDI program, whereas messages to plugins use 1-128 (0 is used to indicate that no program change is required).
         The MIDI import/export range should be adapted to use the 1-128 range at some point.


v1.17.02.29
-----------
   [Fix] <rf> Fixed 3 digit instrument numbers when there are less than 100 instruments. (http://www.modplug.com/forum/viewtopic.php?p=42006)
   [Fix] <rf> Fixed crash in plugin DNA/NNA check we transitioning between existing and non existing instruments. (http://www.modplug.com/forum/viewtopic.php?p=42006)


v1.17.02.28 (official RC2 release)
----------------------------------
   [Fix] <rf> Fixed sample editor display bug with "auto" zoom level.
   [Fix] <rf> Internal: project configuration changes.


v1.17.02.27
-----------
   [Mod] <rf> Minor cosmetic changes.
   [Fix] <rf> XMs saved in OpenMPT should no longer have a bunch of blank patterns at the end when played in XMPlay.
   [Fix] <rf> Some instrument properties were saved incorrectly if an instrument had been deleted (either from song cleanup or tree view).


v1.17.02.26
-----------
   [Mod] <rf> Plugins are no longer forcefully informed of sample rate on first playback if it has not changed since initialisation. This works around a problem we were having with Crystal where the voice oscillator type soundfont was reset on the first playback. NB: it still gets reset if you explicitly change the sample rate - we're probably still doing something wrong. Have asked Crystal developer.
   [Fix] <rf> Added volume ramping on global volume change in RC2 mix mode. Should eliminate most clicks on global volume change. Try increasing general ramping in the player settings dialog if it's still too clicky.
   [Fix] <rf> Arpeggio with XM was messed up because implicit transposes were not always taken into account. I introduced this bug shortly after touching the code for the very first time, over a year ago. :) I dread to think what will fall apart now this is fixed.. XM users, test away!! :) (tx LPChip)
   [Fix] <rf> Old IT files were loading with sample volume at 0.
   [Fix] <rf> Minor: Removed plugin clone button, corrected view menu to say "General" instead of "Global", Impulse Tracker version marker changed from "Impulse Tracker v3" to v8.88.


v1.17.02.25
-----------
   [Fix] <rf> In 1.17RC2 mix mode, applying global volume is now the last transformation applied to the buffer.
         Should fix bugs in the last few builds by which global volume was taken into account multiple times.

v1.17.02.24
-----------
   [Mod] <rf> Removed broken CPU usage meter.
   [Fix] <rf> Global volume no longer applied twice on samples that are put through plugins.
   [Fix] <rf> If a plugin was assigned to a channel in which a note interrupted another, the resulting ramped part of the note would not be processed by the plugin. The outcome was potential "clicks".


v1.17.02.23
-----------
   [Mod] <rf> Changes to sample pre-amp and global volume defaults.
   [Mod] <rf> Internal: optimisations to volume handling.
   [Fix] <rf> Restored loop song on general tab.
   [Fix] <rf> Global volume is stored with our disfigured "XM"s.
   [Fix] <rf> Initial settings explicitly marked as such.


v1.17.02.22
-----------
   [New] <rf> In order to let the user achieve a good balance between sample and VSTi volumes, there have been changes & improvements to the volume handling, as exposed on the general tab:
        - Sliders available for "Sample volume", "VSTi volume" and "Global volume".
        - "Sample volume" is in fact the old sample pre-amp slider. Note that the slider can go up to 500 (which is already pretty loud), but if you're feeling insane you can type values up to 2000 in the text box.
        - Changing the VSTi volume is equivalent to changing the plugin "gain" individually for all VSTis. Same slider/text box limitations apply as to "Sample volume".
        - If 1.17RC2 plugin mix mode is selected in the song properties (it is by default), Global Volume will be applied to plugins too. (NOTE: this is somewhat of a _hack_, since global volume continues to be applied separately to _all_ samples  as well.. so samples played through plugins are in fact affected _twice_ by the global volume).
   [Mod] <rf> removed player options from general tab to avoid confusion as to what is saved in file, in favour of button to open separate Player Settings dialog.
   [Fix] <rf> If a sample was replaced via a drag&drop onto the instrument tab, the sample properties in the sample tab (e.g. loop points etc..) were not refreshed - fixed.
   [Fix] <rf> Fixed random crash on XM save if an instrument had an empty sample map (tx Skilletaudio!)
   [Fix] <rf> Changing plugin's dry/wet ratio directly from the pattern with \xx: previously could trigger an unpredictable VST parameter change - fixed
   [Fix] <rf> Restored amplify & change instrument in pattern context menu - sorry!! (no need to send me death threats about this anymore, please! :)
   [Fix] <rf> Minor refresh fix to graphical parameter editor.


v1.17.02.21
-----------
   [Mod] <rf> Added option to hide unavailable options in pattern context menu, rather than greying them out.
   [Fix] <rf> Drags on Order list mark song as modified.
   [Fix] <rf> Fixed auto-deletion of excess autosaves where song has no associated directory.
   [Fix] <rf> Fixed option in colour setting tab to override time signature highlighting with custom highlight positions (was always getting reset to time signature highlighting before).
   [Fix] <rf> Fixes to play note from plugin GUI.
   [Fix] <rf> Second attempt at fixing stuck VSTi notes when playing during playback.
   [Fix] <rf> If an effect is removed, channels pointing to that effect now display "[empty]"
   [Fix] <rf> Full range song pre-amp is now saved in song with both "XM" and "IT".


v1.17.02.20
-----------
   [New] <rf> !! Emulate Mix Bugs Has GONE!! Now select Plugin Mix Level from song properties; it gets saved with the song now.
         Note that there are 3 settings:
         - Original (equivalent to "emulate mix bugs")
         - 1.17RC1  (what it was from RC1 up until this build)
         - 1.17RC2  (what I believe to be correct... mastering plugins report the same levels as exported WAVs with this one).
   [New] <rf> OpenMPT version saved in file, visible in song settings dialog.
   [New] <rf> Added customisable shortcut key for toggling (un)mute on pattern transition.
   [New] <rf> Force pattern sequence override (Ctrl+Left-click order list) now works in play-pattern mode.
         - Known issue: order list GUI is not refreshed so line remains.
   [Mod] <rf> Enabled XP themes.
   [Mod] <rf> Resolution of plugin default GUI parameter slider increased from 100 to 1000. I couldn't get the per-thousand symbol to display yet. :(
   [Mod] <rf> Version number change - we no longer specify revision number explicitly. It is bad practice to make revision numbers external, as we have no real control over the way they change. The version number will always be in the CVS-commit comments field from now on.
   [Mod] <rf> GUI now uses radio buttons for path type selection.
   [Mod] <rf> Toggle (un)mute on pattern transition is now Ctrl+Left-click (not Ctrl+Right-click).
   [Mod] <rf> Song settings dialog clean-up. Minor instrument tab GUI clean-ups. About dialog clean-ups.
   [Fix] <rf> ITP users are now warned that autosaves fail if their instrument paths aren't set up.
   [Fix] <rf> If "use songs' original dirs" is ticked but the song has never been saved and therefore has no path, the backups will now always go in mptrack.exe's working directory as it was at startup.
   [Fix] <rf> Key config loader no longer reports errors in bad key config file after the 10th error, to avoid reporting hundred of errors if for example you try to load a binary by mistake.
   [Fix] <rf> Song is marked as modified on tempo & volume slider move in general tab, as well as on drag selection.
   [Fix] <rf> Correct pattern name displayed on first opening of pattern editor.
   [Fix] <rf> Tool tips restored on pattern editor.
   [Fix] <rf> The instrument and sample tab play buttons should no longer stop the song.
   [Fix] <rf> Fixed play selected part of a sample.
   [Fix] <rf> Fixed start of samples not playing when previewing them whilst song is playing (I think -  I had trouble reproducing this one :)
   [Fix] <rf> Fixed stuck notes when playing VSTis during pattern transition (I think -  I had trouble reproducing this one :)
   [Fix] <rf> Fixed: samples attached to instruments should never be removed in cleanups with ITP.
   [Fix] <rf> Fixed build-up of NNA'ed notes whilst channel is muted, which all play together on unmute.
   [Fix] <rf> Fixed XM->IT conversion of Sxx over row 32.
   [Fix] <rf> Fixed: Effect interpolation works even if only param column is selected again.
   [Fix] <rf> Fixed: paste, delete, drag should no longer work if recording is disabled.


v1.17RC1 (revision 1.13.2.19)
-----------------------------
   [New] <rf> Ctrl+right-clicking a channel will cause it to be muted at the next pattern transition.
         Let me know if this is working the way you want, then I'll work on adding keyboard shortcuts, channel manager integration etc...
   [Mod] <rf> First (naive) attempt at allowing sample & instrument playback from sample & instrument tab without stopping the track. Let me know what breaks.
   [Mod] <rf> Setting a document's "modified" flag (the asterisk) is now done in a thread safe manner if the modification come from the audio thread rather than the GUI thread. Could prevent rare crashes.
   [Fix] <rf> Fixed "play row" only playing first tick. Should play whole row now (tx LPChip).
   [Fix] <rf> Fixed broken note-offs. (tx anboi)
   [Fix] <rf> Fixed minor Channel Manager bug by which the second of two quick consecutive clicks was ignored.


v1.17RC1 (revision 1.13.2.18)
-----------------------------
   [New] <rf> Interpolate notes. :)
   [New] <rf> Portamento (Fxx Exx) now sent to VSTis as Pitch Bend MIDI CC.
   [New] <rf> Retrig (Qxx) now works on VSTis.
   [Mod] <rf> (internal) Pattern editor cleanups
   [Mod] <rf> Recoded pattern editor context menu (in view of making it customizable)
   [Fix] <rf> Fixed possible truncated lines in comments
   [Fix] <rf> Fixed channel manager close bug - don't need to "open twice" anymore.
   [Fix] <rf> Restored old behaviour that I had accidentally broken: Ctrl-clicking a position in the order list will schedule it to play next.
   [Fix] <rf> Fixed corrupt selection bug when mouse drags to the right of last channel.
   [Fix] <rf> Fixed bug by which NNA'd notes originating from muted channels would still be audible.
   [Fix] <rf> Changing VSTi preset from an instrument no longer forces reselection of current bank (performance improvement on some plugins)
   [Fix] <rf> Minor VSTi volume fixes. Hope this doesn't screw your old track us too much. :(
   [Fix] <rf> Fixed chunk saving for plugs with chunks less than 8 bytes (e.g. VB ffx4) - warning: might have broken loading/saving plugin settings for other plugs. (tx anboi)
   [Fix] <rf> Fixed estimate song with classic tempo mode.


v1.17RC1 (revision 1.13.2.17)
-----------------------------
   [New] <rf> "Select Plugin" window now remembers size & position, plus other minor enhancements.
   [New] <rf> NEW - Precise & simplified BPM Mode! (Please test :D)
         - Enable it in the song setting window, where you set module type, number of channels etc. Set "tempo mode: modern".
         - Txx (Fxx with xx>1F with XM) defines the real, exact beats per minute. Always.
         - The effective playback speed therefore also depends on the "rows per beat" value in the song settings.
         - Axx (Fxx with xx<20 with XM) continues to define the ticks per row, but does not affect playback speed per se.
         - Features tick-to-tick compensation for buffer size calculation rounding errors (aka high precision).
         - Feedback more than welcome!!
   [New] <rf> To avoid getting Settings popup when version number in registry is less than current version, use command line option: "/noSettingsOnNewVersion"
   [Mod] <rf> If autosave fails for whatever reason, options window should open automatically on Autosave page.
   [Mod] <rf> Ericus' "alternative" tempo interpretation is now a song setting rather than a general setting.
         You can select it in the same popup as where you set module type, number of channels etc. Set "tempo mode: alternative".
   [Mod] <rf> GUI changes to accommodate for new speed mode.
   [Fix] <rf> If a broken plugin was in the plugin list, the "Select Plugin" dialog would always select it by default (tx LPChip)
   [Fix] <rf> Fixed possible crash on close if Autosave path is empty.
   [Fix] <rf> Fixed additional silence that could appear at the end of rendered WAVs.
   [Fix] <rf> Fix to sample view refresh bug with sample > 255.
   [Fix] <rf> Fixes to eXtension Param (#), which previously only worked on channel 1, and could not extend tempo with XMs.
   [Fix] <rf> Fixed memory leak on close if no keymap file could be found.


v1.17RC1 (revision 1.13.2.16)
-----------------------------
   [Fix] <rf> Fixed corrupt .mod when non existent pattern is listed in sequence.
   [Fix] <rf> Autosaver is automatically disabled when autosave fails.


v1.17RC1 (revision 1.13.2.15)
-----------------------------
   [Mod] <rf> Warning in custom keys log when entering a key that causes a cross-context conflict.
   [Fix] <rf> Instruments can now force lowpass filter mode
   [Fix] <rf> Fixed some boundary typos.
   [Fix] <rf> Fixed volume changes on muting/unmuting channels.


v1.17RC1 (revision 1.13.2.14)
-----------------------------
   [New] <rf> Rubbish CPU usage indicator. Dishonestly shows 10-20% less than Windows Task Manager, not sure why yet.
   [New] <rf> Quick "Go to row/channel/pattern/order" dialog in pattern editor. Set up a custom key to use it the Pattern Editor/General category.
   [New] <rf> List input channels & instruments (as well as input plugins) in the plugin info/input menu.
   [New] <rf> Can play VSTi in plugin's window if you have set up an instrument that is assigned to that plugin.
         If you have multiple instruments assigned to that plugin, you can select which one is used from the info/input menu.
   [New] <rf> Option to force built-in filter into highpass mode on particular instruments.
   [New] <rf> Cutoff / resonance random variation.
   [New] <rf> Optional per-instrument resampling mode selection!
   [New] <rf> Move a plugin from an FX slot to another FX slot (hopefully automatically updates references throughout track, so it should sound unchanged).
   [New] <rf> Inset a blank FX slot between 2 FX slots. Again, song should sound unchanged.
   [Mod] <rf> Previously, in the instrument view, "Attack" represented the sample ramping where more attack meant less ramping.
         The property has been renamed to ramping and inverted so as to be more intuitive.
   [Mod] <rf> Replaced a bunch of "Modplug Tracker" strings with "OpenMPT". :)
   [Mod] <rf> Code cleanups, particularly in IT/ITP/ITI/XM/XI extended info saving. Extensive testing is TODO, including 2-way compatibility with previous versions.
   [Fix] <rf> Prevented another very rare hang on stop which could occur when more than 255 notes were active simultaneously on a same plugin.

v1.17RC1 (revision 1.13.2.13)
-----------------------------
   [New] <rf> Can now access info about a plugin from the Plugin's window, such as inputs, outputs and relevant macros. FX slot number shown in window title.
   [New] <rf> Added prev&next preset and randomize params shortcut keys (take effect when plugin's window has focus).
   [New] <rf> If macros are used on a channel to which no plugin is assigned, but an instrument with an assigned plugin is active on that channel, the macros will be effective in the instrument's plugin. Be careful now!
   [New] <rf> Added macro to control Dry/Wet ratio (= volume for VSTis) from pattern. Zxx and \xx should both work.
   [New] <rf> Fixed old bug that was preventing custom MIDI messages from being sent to plugs. So you can now send MIDI CC commands to your plugs!
         For example, to send mod wheel commands with Zxx on MIDI channel 0, create a custom macro with the value "B001z" (Only Zxx works for now, not \xx).
   [Mod] <rf> Plugin window's factory preset menu improvements for plugs with lots of presets
   [Mod] <rf> Minor enhancements to Zxx Macro window.
   [Mod] <rf> Reduced plugin idle call rate from 100Hz to 50Hz, in accordance with some discussion on the VST SDK mailing list.
   [Fix] <rf> More fixes to plugins that try to get tempo before we've had a chance to initialize them properly.
   [Fix] <rf> Backed out first attempt at reducing hangs on stop (from rev. 1.13.2.10) - it was pointless. I think 1.13.2.11 really solved it though.
   [Fix] <rf> Fixed minor imprecision in \xx slide calculations.
   [Fix] <rf> Minor GUI refresh fixes (tx xTr1m).


v1.17RC1 (revision 1.13.2.12)
-----------------------------
   [Fix] <rf> Fix to plugs that try to get tempo before we've had a chance to init them properly.

v1.17RC1 (revision 1.13.2.11)
-----------------------------
   [New] <rf> Time signature (rows per beat & rows per measure) now saved with songs.
   [New] <rf> Added next and previous document shortcut keys (that work :).
   [Mod] <rf> IT files now save the number of channels you choose, rather than shrinking to fit & removing the last unused channels. I like it this way, yell if you don't.
   [Fix] <rf> IT files can now save tempo > 255.
   [Fix] <rf> Various minor fixes relating to marking file as modified.
   [Fix] <rf> Another stab at the elusive hangs on stop. Let me know if there's any improvement.


v1.17RC1 (revision 1.13.2.10)
-----------------------------
   [New] <rf> Can now bypass plugin from plug's window and from tree view.
   [New] <rf> Added commands to navigate up/down by spacing
   [Mod] <rf> Changes to plugin threading in the hope of reducing hangs. I can't reproduce the hangs on my system so this is a stab in the dark.
   [Mod] <rf> Minor code cleanups
   [Fix] <rf> Improved handling of keystrokes when text box has focus.
   [Fix] <rf> Fixed auto-chord detection bugs which caused it to screw up in the last rows of the pattern.
   [Fix] <rf> Closing a document via a shortcut key no longer bypasses modified check - tx diamond.
   [Fix] <rf> Changing a plugin param now marks song as modified.
   [Fix] <rf> Fixed minor solo/mute bug ("solo" could unexpectedly behave like unmute all in some cases)  - tx Gazus Snake
   [Fix] <rf> Sample GUI not getting updated with samples > 255 - tx POPS125
   [Fix] <rf> Fixed some tiny memory leaks.


v1.17RC1 (revision 1.13.2.9)
----------------------------
   [New] <rf> Select plugin dialog is now resizeable. :D
   [Mod] <rf> processReplacing() is now favoured over process() in VST plugs
   [Fix] <rf> In autosave dialog, will check backup path exists (if it is to be used). Also Autosave should issue a warning if save fails for whatever reason.
   [Fix] <rf> File marked as modified on all sample/instrument/general tab changes (some had been missed).
   [Fix] <rf> Change to command handling when text box has focus
   [Fix] <rf> Idle time dished out to plugs at 100Hz rather than 10Hz.
   [Fix] <rf> Internal: Edit & Continue debugging enabled in debug build settings.
   [Fix] <rf> Cxx no longer ignored after 255 loops
   [Fix] <rf> Autosaver will now save if autosaver is disabled. :)
   [Fix] <rf> Sample map and instrument name should be accessible with XM files now.
   [Fix] <rf> Mouse wheel should scroll pattern even if focus is in some elements above the pattern editor.
   [Fix] <rf> No MPT commands will be executed if a text box has focus, i.e. text boxes will work again now.
   [Fix] <rf> Minor optimisations to instrument view envelope drawing
   [Fix] <rf> Internal: a couple of code cleanups to remove a few compilation warnings.
   [Fix] <rf> Plugin automatically bypassed if an exception is thrown in process()/processReplacing()
   [Fix] <rf> Switched to C++ exceptions handlers throughout, which will actually get compiled into the release builds.
   [Fix] <rf> Other minor fixes (Options dialog now remembers if autosave tab was selected, zoom level cycling in sample view fixed...)


v1.17RC1 (revision 1.13.2.8)
----------------------------
   [New] <rf> Option to emulate some old mixing bugs, in case your old track sounds too different in this version  (could happen with some distortion plugins for example) and you aren't able to recover the sound by adjusting the levels
   [Mod] <rf> If a plugin identifies itself as willing to receive MIDI events, MIDI channel 1 will automatically be selected when it is assigned to an instrument
   [Fix] <rf> Minor GUI fixes


v1.17RC0 (revision 1.13.2.7)
----------------------------
   [Mod] <rf> Set octave keys are now customisable. Not that they will no longer be automatically assigned to freed number keys.
         So if you map a note to key 8 then unmap it, you'll have to explicitly set Set Octave 8 back to key 8 again.
   [Fix] <rf> Fixed crash in instrument view in win 98.


v1.17RC0 (revision 1.13.2.6)
----------------------------
   [Fix] <rf> Minor GUI fixes


v1.17RC0 (revision 1.13.2.5)
----------------------------
   [Fix] <rf> Fixed ridiculous mono ITI loading bug.


v1.17RC0 (revision 1.13.2.4)
----------------------------
   [New] <rf> Autosave function. Be sure to configure it to your taste.
   [New] <rf> Added IT style mix paste command, for those of you who just weren't ready for *real* mixpasting ;)
   [New] <rf> Option to show estimated "real BPM", just as it is communicated to plugins.
   [Mod] <rf> Minor GUI changes
   [Mod] <rf> Various internal cleanups
   [Fix] <rf> Some VST threading & initialisation improvements, might prevent some hangs/crashes.
   [Fix] <rf> Plugs that save an entire bank in their chunks should be better at restoring their active program on load
   [Fix] <rf> cursor dependant play commands now play from start of song even before cursor position is initialised.
   [Fix] <rf> Minor wave rendering fixes
   [Fix] <ec> Mastervolume calculation fixes
   [Fix] <ec> VSTi mixing & volume fixes
   [Fix] <ec> Float conversion fixes


v1.17RC0 (revision 1.13.2.3)
----------------------------
   [New] <rf> Extra status bar info in pattern view. Ugly but useful (particularly for macros).
   [New] <rf> Assign a MIDI bank to an instrument, for plugs that support it (e.g. Edirol Orchestral) (tx ganja)
   [Imp] <rf> Improvements to note recording with record select (from MIDI-In as well as normal keyboard):
         - If note off recording is enabled, note offs appear in the channel in which the note was played, even if the cursor has moved to another channel.
         - Channels in which a note is still being played is "locked", so no new notes can interrupt it, unless there are no other unlocked record select channels.
   [Mod] <rf> When wrap and continuous scroll are off, cursor jump/snap now goes to row 0 or last row when it should go beyond, rather than doing nothing.
   [Mod] <rf> Minor VST destruction memory management change - may increase or decrease crash occurrences. :)
   [Mod] <rf> internal: changed to make thread priority normal in debug mode, for easier hang debugging.
   [Mod] <ec> Restored VSTi original output level
   [Mod] <ec> (internal) removed unwanted (at this point) VST parallel routing feature
   [Mod] <rf> Changes/clarifications to custom keys GUI (tx lpchip)
   [Mod] <rf> On adding a plugin to a song, MPT checks it against a list of known problematic plugins and warns you if necessary.
   [Fix] <rf> modifier keys are no longer reset on pattern editor focus loss
   [Fix] <rf> fixed scroll position jumping to row 0 on change pattern
   [Fix] <rf> if the full pattern can be visible in window, pattern is moved down so row 0 is visible and scrollbar is not needed. (tx lpchip)
   [Fix] <rf> some VU meter fixes
   [Fix] <rf> instrument view slider optimisations (we think it affects just WinXP)
   [Fix] <rf> fixed hang on song stop with some OhmForce plugs (and maybe others).
   [Fix] <rf> fixed minor slider GUI bug with some OhmForce plugs (and maybe others).
   [Fix] <rf> various minor fixes: instrument open/save/new shortcut key propagation, VSTi playback at volume 0 ...
   [Fix] <ec> floating point plugin parameter edit box fix
   [Fix] <rf> Checked  preset in VST dialog menu is updated when preset is changed from inside the plug's on GUI.
   [Fix] <rf> Minor VST compliance improvements (fixes elusive stuck notes with SynthEdit plugs on song loop)
   [Fix] <rf> MIDI-in fixes
   [Fix] <rf> Save full precision instrument panning and fadeout values in IT and XM, sample panning range limited to 0-64 at GUI level, to correlate with the range that gets saved.
   [Fix] <rf> Fix to IT loading algorithm when last sample is empty (MPTX data was ignored)
   [Fix] <rf> Fix to XM loading algorithm when macro definitions embedded in file
   [Fix] <rf> Zxx Macro window fixes


v1.16.0215a
-----------
   [New] <rf> "Overwrite effect type" mode in effect param visualiser
   [New] <rf> new custom keys:
		 - Toggle focus between pattern editor<->order list
		 - Open/Save/New instrument/sample (focus must be in bottom part
		 - Pattern editor copy and lose selection
   [New] <ec> Plugin gain control
   [New] <ec> Pitch shifter / time stretcher in sample view! (non real-time :)
   [New] <rf> added key command to insert new pattern from pattern editor.
   [Mod] <rf> Zxx macro GUI total revamp
   [Mod] <rf> Time stretcher GUI changes, stretch loop points
   [Mod] <ec> GUI Cleanup
   [Mod] <rf> Changed behaviour of calls to VST plugs on loop song or on replay song without stopping. No longer do suspend/resume, just kill all notes.
         This avoids pause caused by plugs with a heavy "resume" method, but means buffers are no longer cleared.
         [Work in progress - some VSTis don't stop notes, not sure why yet]
   [Fix] <rf> Various minor fixes (registry, VST, GUI)
   [Fix] <ec> Plugin 32bit float conversion and mixing fixes
   [Fix] <rf> XM saving changes/fixes.
   [Fix] <rf> Added support for VSTs which change their window size. (tx goor00)
   [Fix] <rf> Minor GUI fixes.
   [Fix] <rf> fixes to chunk-based FXP loading/saving. (tx Diamond)
   [Fix] <rf> fix to allow VST synchronisation when rendering to wav. Added fix for MP3 export too.


v1.16.0214a
-----------
   [New] <rf> GUI for resampler & default ramping configuration
   [New] <ec> added per-instrument sample ramping
   [New] <ec> Channel manager updates
   [New] <ec> Multiple mix modes for plugins
   [New] <ec> polyphase resampler tuning and fixes (enabled polyphase on filtered samples...)
   [New] <rf> Added "copy and lose selection" command as a general pattern command, for those who like the cursor to be restored when they copy.
         You obviously don't have to map a key to this command if you don't want to use it.
   [New] <rf> Automatic chord detection, a la Ericus: Assuming you're in a channel with note recording enabled and you have other channels with note recording enabled, if you hit two note keys within a given time, MPT should put the notes on the same row. You can set the interval time in keyboard config dialog.
   [Mod] <rf> added button on wave writer dialog to open player settings rather than checkbox to enable "HQ resampling".
   [Mod] <ec> new internal instrument format
   [Mod] <rf> MIDI-In now uses same note entry code as normal keyboard note entry. (tx Squirrel Havoc)
   [Mod] <rf> Added shrink and grow selection to pattern context menu.
   [Fix] <rf> fix to note playback when pattern record is disabled (tx ganja).
   [Fix] <rf> fix for VST plugs with >2 outputs, though it is currently assumed they are stereo. (tx Muox, ganja, ericus for further fixes)
   [Fix] <ec> fixed wav export at >44.1kHz and >24bit.
   [Fix] <rf> Fixed velocity recording from MIDI In. (tx Squirrel Havoc)
   [Fix] <rf> Fixed stuck notes when playing VSTis from pattern in record enabled channels.
   [Fix] <rf> Fixed file corruption bug on saving after deleting an instrument (tx LPChip)


v1.16.0213a
-----------
   [New] Untested: incomplete changes in MIDI in pattern recording (taken direct from Ericus' build - probably broken in my build atm).
   [New] For people who just cannot cope with the slightest change, I added alternative == and ^^ commands which do not enter the current instrument number. (tx LPChip ;)
   [New] Added button to access an instrument's plugin's GUI from the pattern, if possible. (tx LPChip)
   [New] Notes audible in sample map window in instrument control; notes also play when you change sample. Notes do not yet play in "keyboard" view.
   [Mod] ^^ now sends "all sounds off" to plugs; note that few plugs support it, but those that do should stop quickly, without playing decay, unlike with == where decay is played. ^^ also explicitly sends a note off to all 128 notes on that tracker and MIDI channel, regardless of active note map, so it might deal with some stuck note cases. == is more conservative. This is a bit shoddy and will hopefully all be clarified in the future.
   [Mod] experiment: audio device left open when playing notes in pattern but song not playing (device still closes on stop song though)
   [Mod] some wet/dry slider cosmetic enhancements
   [Mod] Set Instrument command no longer requires instrument column to be selected (tx LPChip)
   [Mod] Cosmetic changes in instrument pane (tx LPChip)
   [Fix] Some VSTi stuck note cases fixed... some still remain. (tx LPChip)
   [Fix] Sample map window fixes (tx Ganja)
   [Fix] Various VSTi fixes (tx LPChip)
   [Fix] Reduced max channels from 256 to 128, so NNA etc still have a chance to work (tx Ericus)
   [Fix] Various keyboard fixes (tx Diamond).
   [Fix] Another attempt at getting rid of beeps with alt-combo keys that do not open menu items and are assigned to commands, without screwing everything up. (tx LPChip)
Merged from Ericus' build:
   [New] Untested: 'Rearrange samples' menu entry in edit->cleanup
   [New] Untested: Alternative BPM/Speed interpretation method
   [New] Untested: IT project files (.itp)
   [New] Channel manager window.
   [New] Keyboard split - allows you to have 2 active instruments, distinguishable by the note you enter.
   [New] Second channel record group - if enabled, chords for instrument 1 go to channel group 1, whereas notes for instrument 2 go to channel group 2. In the future all notes will be redirected to the appropriate record channels iff they are enabled.
   [New] WAV export update (24 bits + channel-based wave files output mode)
   [New] Tempo / speed / volume (in general tab) realtime update + tempo up to 512 bpm
   [New] Option to free associate samples when removing one or more instrument(s)
   [New] Polyphase interpolation on stereo samples.
   [New] Default enable/disable MIDI in record setup option added
   [New] Parameter extension pattern effect (# command - key customisable)
   [New] Pattern size up to 1024 rows
   [New] 256MB samples
   [New] Factory presets menus for VSTs on general tab and VST GUI (some known issues e.g. with Amplitube).
   [Mod] Load / save preset on General tab
   [Fix] Live VSTi playback on channel 1 bugfix.
   [Fix] ITI note sample map save fix

v1.16.0212a
-----------
   [Reg] Can no longer select "Normalize" when writing to wave, as this can produce incorrect output with certain VSTs.
         For now, use an external editor to normalize you wavs.
   [Fix] Extra safety checks for plugins that don't return parameters between 0 and 1 exactly.
   [Fix] Tentative fix to silent DX plugins on non SSE enabled cpus.
   [New] Added "IT Style" clear field commands. Using this, clearing the note field automatically clears the instrument field.
   [Mod] Swapped left and right mouse button action in effect visualiser (now use left button to "paint" nodes, right to move a specific node).
   [New] "Fill gaps" mode in effect visualiser, to automatically enter effects in blank spaces.



v1.16.0211a
-----------
   [Fix] Fixed crashes/bugs in instrument view when playing high notes. (tx LP)
   [Fix] Fixed (tx LP)
   [Mod] Removed "Unused?" text under MIDI Prog listbox - hehe Ganja, does it actually work?! :)


v1.16.0210a
-----------
   [Fix] Fixed warnings if no keyboard map file is found in registry (on first run)
   [New] Shortcut key to toggle "follow song".
   [New] Can change/access plugins from pattern editor. Can also open editor via shortcut key.
   [Fix] Custom keys fixes
   [New] Default plugin GUI.
   [Fix] Fixed some more stuck note cases.
   [Fix] Fix scrolling bug when toggling follow song with whole pattern visible on screen. (tx LPChip)
   [New] Load/Save VST preset
   [New] Randomize VST parameters
   [Mod] Porta slides occur on tick 0 iff speed is 1 tick per row. (tx felineki)
   [New] "Report bug" button on the GUI takes you to beta tester's forum :)
   [New] Optional "row guidelines" in instrument envelope editor.
   [Mod] Optimised instrument envelope GUI to avoid flickering on resize. Various other cosmetic changes.
   [Fix] Fixed "Remove channels" window
   [Fix] Fixed beeps with certain alt-combo keys
   [Fix] Offset in the volume column now works with retrigs.
   [Mod] Effect Keys are updated automatically when you change module type. You cannot customise them anymore.
   [Fix] Improved VST idle time handling. Should fix the bug by which CPU usage would jump to 100% with certain combinations of plugs.
   [Fix] (internal) Improved VSTGui compliance


20041012
--------
   [Fix] (internal) some VST compliance improvements on start/stop
   [New] VSTTimeInfo data sent
   [Reg] Cutter offset still does not restart with Multilens; other plugs also have some sync issues...
         > Modulation sync seems OK with FabFilter but not with Multilens.
         ---> could be that transport is never reset.
   [New] VSTi can be assigned to an instrument, not just a channel
         (I would encourage this method from now on - consider assigning VSTis to channels deprecated)
   [Mod] Started re-styling the instrument view to reflect this.
   [New] More sensible VSTi polyphony, should behave more like sample-based normal instruments:
         Two subsequent notes sent to a same VSTi on a same MIDI channel from a same tracker channel will cause the first note to be NoteOff'ed just before the second plays... EXCEPT if NNA is set to continue.
         Got it? :) In other words, NNAs are kinda working for VSTis (but Note Off, Cut and Fade all do the same thing)
   [New] Same with DNAs.
   [Fix] Fixed some issues with VSTi playback on note entry. Should now stop note on key release, like with sample-based normal instruments.
   [Reg] Bugs with Xlutop Chainer and some other plugs (more f'ing stuck notes) - working on it.
   [Reg] Increased memory footprint, possible performance regressions
   [New] Can now enable/disable all notes on key hold with a single click in the key config dialog
   [Mod] No longer need to press 'set' in key config dialog: changes are recorded automatically.
   [Fix] Loading patterns of less than 4 rows screws up. We now prevent users from setting pattern size to less than 4. Just use a pattern break command. (tx Ganja) (bug introduced before opensourcing)


20041009
--------
   [Fix] Tempo slides now behave as specified in it.txt. (tx ManaSmack) (bug introduced before opensourcing)
   [New] Can now save stereo ITIs
   [New] Removed 64 sample limit on ITIs (can now load/save instruments with up to 120 samples, i.e. one separate sample for each note)
   [Fix] Fixed bug which allowed entering notes higher than B-9 (even though they didn't play) (bug introduced 20040910)
   [Fix] Fixed graphical parameter editor key. (tx LPChip) (bug introduced 20040910)
   [Fix] Fixed transpose octave down key (bug introduced 20040910)
   [Fix] Fixed note fade on key release in instrument view. (tx Ganja) bug introduced 20040910
   [Fix] Prevented multiple note playback in sample view, except on chord playback. (tx LPChip) (bug introduced 20040910)
   [Fix] Finished custom note handling for instrument note mapper and tree view (tx Ganja) (bug introduced 20040910)
   [Fix] This version shouldn't corrupt the custom key registry setting used by previous versions of MPT. (bug introduced 20040910)
   [New] Can now save orders past blank order, a la IT2. (tx Nofold)
   [New] Some pattern undo improvements (still far from perfect!)
   [New] Stretch/Shrink selection (a la IT2)


20040910
--------
   [New] Fully customisable keys, with profile loading and saving, multiple keys for same command, etc..
   [New] Some new commands (e.g. Snap to highlight...)
   [Mod] Enhanced some old commands (e.g. homing vertically twice homes horizontally...)
   [Mod] Changed scope of some commands (e.g. play pattern should work from anywhere...)
   [Reg] Lots of key press related bugs, please help me isolate them
   [Fix] Some minor VSTi fixes
   [New] Oxx (offset) kind of works in the volume command
   [New] Half-finished "velocity" command (Ask LPChip about this).
   [Mod] Wicked new splash by Nofold!
   [Var] Internal changes.
   [Var] Various other minor bits n bobs


Wild Prebeta: 2004.02.24
------------------------
   [New] Each individual view (general/pattern/samples/instruments/comments) remembers its own horizontal splitter position.
   [New] If you enter notes in a channel to which a VSTi has been assigned, and you're using an instrument with a MIDI channel send, you should hear the VSTi play as you enter the notes.
   [Mod] Minor cosmetic changes, including about dialog image by Snu & Shableep. :)


v2004.02.22
-----------
   [New] Conditional compilation for MMX, SSE, AMD assembly routines. This should allow compilation on Vanilla VC6 compilers.
   [New] 255 channel support with updated IT loader/saver. It should not impact existing .it modules and allows for safe loading and saving of >64 channel modules.


v2004.02.16
-----------
   [New] A Dry/Wet slider for each plugin - values should save and load in this version, and be cleanly ignored by older versions.
   [New] Tick resolution MIDI macro slide. Use \xx command instead of Zxx if you want your plugin param to slide to xx over the course of that row rather than brutally jumping there. Should also work on built-in cutoff+resonance. For an example of what this effect does, download: http://www.soal.org/expMPT/paramSlideDemo.zip .
   [New] Effect param graphical editor prototype. Left click modifies a single node, right click & drag to "draw".
         Warning, things get quite sluggish if you're visualizing many rows and make the window quite large.
   [New] Mixpaste, just like in IT2
   [New] Option to have "follow song" disabled by default under general settings.
   [New] SDx works on VSTis.


Questions/comments/bug reports?
-------------------------------
Visit https://openmpt.org/ where you can find our bugtracker and forums.